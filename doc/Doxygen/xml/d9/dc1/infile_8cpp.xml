<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="d9/dc1/infile_8cpp" kind="file">
    <compoundname>infile.cpp</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="yes">InFile.h</includes>
    <includes local="yes">GrafKern.h</includes>
    <incdepgraph>
      <node id="17188">
        <label>stdlib.h</label>
      </node>
      <node id="17187">
        <label>string.h</label>
      </node>
      <node id="17186">
        <label>src/gmut/infile.cpp</label>
        <link refid="infile.cpp"/>
        <childnode refid="17187" relation="include">
        </childnode>
        <childnode refid="17188" relation="include">
        </childnode>
        <childnode refid="17189" relation="include">
        </childnode>
        <childnode refid="17190" relation="include">
        </childnode>
        <childnode refid="17191" relation="include">
        </childnode>
      </node>
      <node id="17189">
        <label>math.h</label>
      </node>
      <node id="17191">
        <label>GrafKern.h</label>
      </node>
      <node id="17190">
        <label>InFile.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="d9/dc1/infile_8cpp_1a28207fc2d154e57243bcbd04a66c601f" prot="public" static="no">
        <name>HEX_ZEICHEN</name>
        <initializer>&apos;#&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" line="16" column="9" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" bodystart="16" bodyend="-1"/>
        <referencedby refid="dc/ddd/classInFile_1aaadb642faf0c2ad1231f6e2b4ad88d07" compoundref="d9/dc1/infile_8cpp" startline="19" endline="84">InFile::ReadToken</referencedby>
      </memberdef>
      <memberdef kind="define" id="d9/dc1/infile_8cpp_1a4bca56c5391dc47b0909c2de2a702f99" prot="public" static="no">
        <name>REM_ZEICHEN</name>
        <initializer>&apos;&quot;&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" line="17" column="9" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" bodystart="17" bodyend="-1"/>
        <referencedby refid="dc/ddd/classInFile_1af324cb1bae0b218ca7dae2aa923428fa" compoundref="d9/dc1/infile_8cpp" startline="98" endline="119">InFile::CheckNewToken</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d9/dc1/infile_8cpp_1ab4da9c8ceadd429b5806c1d8e1e242c4" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char TrennZeichen[]</definition>
        <argsstring>[]</argsstring>
        <name>TrennZeichen</name>
        <initializer>= &quot; \t&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" line="10" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" bodystart="10" bodyend="-1"/>
        <referencedby refid="dc/ddd/classInFile_1af324cb1bae0b218ca7dae2aa923428fa" compoundref="d9/dc1/infile_8cpp" startline="98" endline="119">InFile::CheckNewToken</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/dc1/infile_8cpp_1abf75ebe2213254bbd464b81a65b6f8f8" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char ZahlZeichen[]</definition>
        <argsstring>[]</argsstring>
        <name>ZahlZeichen</name>
        <initializer>= &quot;0123456789.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" line="11" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" bodystart="11" bodyend="-1"/>
        <referencedby refid="dc/ddd/classInFile_1aaadb642faf0c2ad1231f6e2b4ad88d07" compoundref="d9/dc1/infile_8cpp" startline="19" endline="84">InFile::ReadToken</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/dc1/infile_8cpp_1a23f5c808c97426a2bea6a35886006d79" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char SignZeichen[]</definition>
        <argsstring>[]</argsstring>
        <name>SignZeichen</name>
        <initializer>= &quot;+-[](){}@=&gt;,&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" line="12" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" bodystart="12" bodyend="-1"/>
        <referencedby refid="dc/ddd/classInFile_1aaadb642faf0c2ad1231f6e2b4ad88d07" compoundref="d9/dc1/infile_8cpp" startline="19" endline="84">InFile::ReadToken</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/dc1/infile_8cpp_1ade86100f53d6c094e58270a48d070656" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char HexaZeichen[]</definition>
        <argsstring>[]</argsstring>
        <name>HexaZeichen</name>
        <initializer>= &quot;0123456789ABCDEFabcdef&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" line="13" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" bodystart="13" bodyend="-1"/>
        <referencedby refid="dc/ddd/classInFile_1aaadb642faf0c2ad1231f6e2b4ad88d07" compoundref="d9/dc1/infile_8cpp" startline="19" endline="84">InFile::ReadToken</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d9/dc1/infile_8cpp_1ae7ce02c9b082e0aa44f15dbd49800c3c" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char StringZeichen[]</definition>
        <argsstring>[]</argsstring>
        <name>StringZeichen</name>
        <initializer>= &quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_ÄÖÜäöüß&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" line="14" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp" bodystart="14" bodyend="-1"/>
        <referencedby refid="dc/ddd/classInFile_1aaadb642faf0c2ad1231f6e2b4ad88d07" compoundref="d9/dc1/infile_8cpp" startline="19" endline="84">InFile::ReadToken</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>InFile,<sp/>R.Krauße</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Klasse<sp/>für Arbeit<sp/>mit<sp/>Textdatei</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;InFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GrafKern.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="d9/dc1/infile_8cpp_1ab4da9c8ceadd429b5806c1d8e1e242c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="d9/dc1/infile_8cpp_1ab4da9c8ceadd429b5806c1d8e1e242c4" kindref="member">TrennZeichen</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="11" refid="d9/dc1/infile_8cpp_1abf75ebe2213254bbd464b81a65b6f8f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/infile_8cpp_1abf75ebe2213254bbd464b81a65b6f8f8" kindref="member">ZahlZeichen</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="12" refid="d9/dc1/infile_8cpp_1a23f5c808c97426a2bea6a35886006d79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/infile_8cpp_1a23f5c808c97426a2bea6a35886006d79" kindref="member">SignZeichen</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;+-[](){}@=&gt;,&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="13" refid="d9/dc1/infile_8cpp_1ade86100f53d6c094e58270a48d070656" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/infile_8cpp_1ade86100f53d6c094e58270a48d070656" kindref="member">HexaZeichen</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789ABCDEFabcdef&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14" refid="d9/dc1/infile_8cpp_1ae7ce02c9b082e0aa44f15dbd49800c3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dc1/infile_8cpp_1ae7ce02c9b082e0aa44f15dbd49800c3c" kindref="member">StringZeichen</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz_ÄÖÜäöüß ;

#define<sp/>HEX_ZEICHEN<sp/>&apos;#&apos;
#define<sp/>REM_ZEICHEN<sp/>&apos;&quot;&apos;

TTokenType<sp/>InFile::ReadToken(char<sp/>*str,<sp/>int<sp/>max)
{
<sp/><sp/>if<sp/>(<sp/>TokenType<sp/>&gt;=<sp/>TT_EOF<sp/>)<sp/>return<sp/>TokenType;
<sp/><sp/>if<sp/>(<sp/>!CheckNewToken()<sp/>)<sp/>return<sp/>TokenType;
<sp/><sp/>char<sp/>b<sp/>=<sp/>s[0];
<sp/><sp/>int<sp/>i<sp/>=<sp/>0;
<sp/><sp/>Long<sp/>=<sp/>0;<sp/>Double<sp/>=<sp/>0;
<sp/><sp/>if<sp/>(<sp/>b<sp/>==<sp/>HEX_ZEICHEN<sp/>)<sp/>//<sp/>Hexa-Zahl
<sp/><sp/>{
<sp/><sp/><sp/><sp/>TokenType<sp/>=<sp/>TT_LONG;
<sp/><sp/><sp/><sp/>String[i++]<sp/>=<sp/>b;<sp/>s++;
<sp/><sp/><sp/><sp/>while<sp/>(<sp/>strchr(HexaZeichen,<sp/>b<sp/>=<sp/>s[0])<sp/>)
<sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>String[i++]<sp/>=<sp/>b;<sp/>s++;
<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>b<sp/>&lt;=<sp/>&apos;9&apos;<sp/>)<sp/>b<sp/>-=<sp/>&apos;0&apos;;<sp/>else<sp/>b<sp/>=<sp/>b<sp/>&amp;<sp/>0x1F<sp/>+<sp/>9;
<sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>=<sp/>Long<sp/>*<sp/>16<sp/>+<sp/>b;
<sp/><sp/><sp/><sp/>}
<sp/><sp/>}
<sp/><sp/>else<sp/>if<sp/>(<sp/>strchr(ZahlZeichen,<sp/>b<sp/>)<sp/>)<sp/>//<sp/>Zahl
<sp/><sp/>{
<sp/><sp/><sp/><sp/>TokenType<sp/>=<sp/>TT_LONG;
<sp/><sp/><sp/><sp/>char<sp/>Point<sp/>=<sp/>0;
<sp/><sp/><sp/><sp/>double<sp/>digit<sp/>=<sp/>1.0;
<sp/><sp/><sp/><sp/>while<sp/>(<sp/>strchr(ZahlZeichen,<sp/>b<sp/>=<sp/>s[0])<sp/>)
<sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>String[i++]<sp/>=<sp/>b;<sp/>s++;
<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>b<sp/>==<sp/>&apos;.&apos;<sp/>&amp;&amp;<sp/>Point<sp/>)<sp/>//<sp/>2<sp/>Punkte<sp/>in<sp/>Zahl
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal_error(80,<sp/>Line);
<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>b<sp/>==<sp/>&apos;.&apos;<sp/>)
<sp/><sp/><sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point<sp/>=<sp/>1;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Double<sp/>=<sp/>(double)Long;
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TokenType<sp/>=<sp/>TT_DOUBLE;
<sp/><sp/><sp/><sp/><sp/><sp/>}
<sp/><sp/><sp/><sp/><sp/><sp/>else
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>Point<sp/>)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>digit<sp/>=<sp/>digit<sp/>/<sp/>10;<sp/>Double<sp/>+=<sp/>digit<sp/>*<sp/>(b<sp/>-&apos;0&apos;);<sp/>}
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Long<sp/>=<sp/>Long<sp/>*<sp/>10<sp/>+<sp/>(b<sp/>-<sp/>&apos;0&apos;);
<sp/><sp/><sp/><sp/>}
<sp/><sp/><sp/><sp/>if<sp/>(<sp/>!Point<sp/>)<sp/>Double<sp/>=<sp/>(double)<sp/>Long;
<sp/><sp/>}
<sp/><sp/>else<sp/>if<sp/>(<sp/>strchr(SignZeichen,<sp/>b<sp/>)<sp/>)<sp/>//<sp/>Sign
<sp/><sp/>{
<sp/><sp/><sp/><sp/>TokenType<sp/>=<sp/>TT_SIGN;
<sp/><sp/><sp/><sp/>String[i++]<sp/>=<sp/>b;<sp/>s++;
<sp/><sp/><sp/><sp/>if<sp/>(<sp/>b<sp/>==<sp/>&apos;-&apos;<sp/>&amp;&amp;<sp/>s[0]<sp/>==<sp/>&apos;&gt;&apos;<sp/>)<sp/>//<sp/>für '-&gt;&apos;<sp/>nur<sp/>&apos;p&apos;<sp/>
<sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>s++;<sp/>String[0]<sp/>=<sp/>&apos;p&apos;;<sp/>}
<sp/><sp/><sp/><sp/>Long<sp/>=<sp/>b;
<sp/><sp/>}
<sp/><sp/>else<sp/>if<sp/>(<sp/>strchr(StringZeichen,<sp/>b<sp/>)<sp/>)<sp/>//<sp/>String
<sp/><sp/>{
<sp/><sp/><sp/><sp/>TokenType<sp/>=<sp/>TT_STRING;
<sp/><sp/><sp/><sp/>while<sp/>(<sp/>strchr(StringZeichen,<sp/>b<sp/>=<sp/>s[0])<sp/>)
<sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>String[i++]<sp/>=<sp/>b;<sp/>s++;
<sp/><sp/><sp/><sp/>}
<sp/><sp/>}
<sp/><sp/>else
<sp/><sp/><sp/><sp/>fatal_error(2,<sp/>b,<sp/>Line);<sp/><sp/>//<sp/>unbekanntes<sp/>Zeichen
<sp/><sp/>String[i]<sp/>=<sp/>0;
<sp/><sp/>if<sp/>(<sp/>str<sp/>)
<sp/><sp/><sp/><sp/>if<sp/>(<sp/>max<sp/>)<sp/>strncpy(str,<sp/>String,<sp/>max);
<sp/><sp/><sp/><sp/>else<sp/>strcpy(str,<sp/>String);
<sp/><sp/>return<sp/>TokenType;
}

char<sp/>InFile::NewLine()
//<sp/>liest<sp/>neue<sp/>Zeile<sp/>in<sp/>s
{
<sp/><sp/>if<sp/>(<sp/>eof()<sp/>)<sp/>{<sp/>TokenType<sp/>=<sp/>TT_EOF;<sp/>return<sp/>0;<sp/>}
<sp/><sp/>if<sp/>(<sp/>bad()<sp/>)<sp/>{<sp/>TokenType<sp/>=<sp/>TT_ERROR;<sp/>return<sp/>0;<sp/>}
<sp/><sp/>getline(s1,<sp/>LMAX_LINE);
<sp/><sp/>Line++;
<sp/><sp/>if<sp/>(<sp/>bad()<sp/>)<sp/>{<sp/>TokenType<sp/>=<sp/>TT_ERROR;<sp/>return<sp/>0;<sp/>}
<sp/><sp/>s<sp/>=<sp/>s1;
<sp/><sp/>return<sp/>1;
}

char<sp/>InFile::CheckNewToken()
//<sp/>liest,<sp/>bis<sp/>1.<sp/>Zeichen<sp/>eines<sp/>Tokens<sp/>gefunden
{
<sp/><sp/>char<sp/>RemMode<sp/>=<sp/>0;
<sp/><sp/>while<sp/>(<sp/>1<sp/>)
<sp/><sp/>{
<sp/><sp/><sp/><sp/>if<sp/>(<sp/>!s[0]<sp/>)
<sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>!NewLine()<sp/>)
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>RemMode<sp/>)<sp/>fatal_error(5);
<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>return<sp/>0;
<sp/><sp/><sp/><sp/>}
<sp/><sp/><sp/><sp/>else<sp/>if<sp/>(<sp/>s[0]<sp/>==<sp/>REM_ZEICHEN<sp/>)
<sp/><sp/><sp/><sp/>{
<sp/><sp/><sp/><sp/><sp/><sp/>RemMode<sp/>=<sp/>!RemMode;<sp/>s++;
<sp/><sp/><sp/><sp/>}
<sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(<sp/>strchr(TrennZeichen,<sp/>s[0])<sp/>||<sp/>RemMode<sp/>)
<sp/><sp/><sp/><sp/><sp/><sp/>s++;
<sp/><sp/><sp/><sp/>else<sp/>if<sp/>(<sp/>!RemMode<sp/>)
<sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>1;
<sp/><sp/>}
}

&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="d9/dc1/infile_8cpp_1a28207fc2d154e57243bcbd04a66c601f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HEX_ZEICHEN<sp/>&apos;#&apos;</highlight></codeline>
<codeline lineno="17" refid="d9/dc1/infile_8cpp_1a4bca56c5391dc47b0909c2de2a702f99" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>REM_ZEICHEN<sp/>&apos;&quot;&apos;</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="dc/ddd/classInFile_1aaadb642faf0c2ad1231f6e2b4ad88d07" refkind="member"><highlight class="normal"><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5" kindref="member">TTokenType</ref><sp/><ref refid="dc/ddd/classInFile_1aaadb642faf0c2ad1231f6e2b4ad88d07" kindref="member">InFile::ReadToken</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="d6/daa/namespacemutabor_1abae2a6ffddc4e68d7e52f67803cb091f" kindref="member">str</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>&gt;=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5aaffedff66c98c1bc186e2c35cdc7ab66" kindref="member">TT_EOF</ref><sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="dc/ddd/classInFile_1af324cb1bae0b218ca7dae2aa923428fa" kindref="member">CheckNewToken</ref>()<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>b<sp/>=<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>[0];</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="dc/ddd/classInFile_1a77c1f8c49d1ad37621106a514787bab4" kindref="member">Long</ref><sp/>=<sp/>0;<sp/><ref refid="dc/ddd/classInFile_1a2de57d9c3a13c27bdb8490098e3ff408" kindref="member">Double</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>==<sp/><ref refid="d9/dc1/infile_8cpp_1a28207fc2d154e57243bcbd04a66c601f" kindref="member">HEX_ZEICHEN</ref><sp/>)<sp/></highlight><highlight class="comment">//<sp/>Hexa-Zahl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5ada8fd1435d4c325f87001cab253c3753" kindref="member">TT_LONG</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>[i++]<sp/>=<sp/>b;<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>++;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>strchr(<ref refid="d9/dc1/infile_8cpp_1ade86100f53d6c094e58270a48d070656" kindref="member">HexaZeichen</ref>,<sp/>b<sp/>=<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>[0])<sp/>)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>[i++]<sp/>=<sp/>b;<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>++;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal"><sp/>)<sp/>b<sp/>-=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>b<sp/>=<sp/>b<sp/>&amp;<sp/>0x1F<sp/>+<sp/>9;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a77c1f8c49d1ad37621106a514787bab4" kindref="member">Long</ref><sp/>=<sp/><ref refid="dc/ddd/classInFile_1a77c1f8c49d1ad37621106a514787bab4" kindref="member">Long</ref><sp/>*<sp/>16<sp/>+<sp/>b;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>strchr(<ref refid="d9/dc1/infile_8cpp_1abf75ebe2213254bbd464b81a65b6f8f8" kindref="member">ZahlZeichen</ref>,<sp/>b<sp/>)<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Zahl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5ada8fd1435d4c325f87001cab253c3753" kindref="member">TT_LONG</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>Point<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>digit<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>strchr(<ref refid="d9/dc1/infile_8cpp_1abf75ebe2213254bbd464b81a65b6f8f8" kindref="member">ZahlZeichen</ref>,<sp/>b<sp/>=<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>[0])<sp/>)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>[i++]<sp/>=<sp/>b;<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>++;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>Point<sp/>)<sp/></highlight><highlight class="comment">//<sp/>2<sp/>Punkte<sp/>in<sp/>Zahl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal_error(80,<sp/><ref refid="dc/ddd/classInFile_1a82721b5f29d280221a7dd3c518a719c8" kindref="member">Line</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Point<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a2de57d9c3a13c27bdb8490098e3ff408" kindref="member">Double</ref><sp/>=<sp/>(double)<ref refid="dc/ddd/classInFile_1a77c1f8c49d1ad37621106a514787bab4" kindref="member">Long</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5a0ef600753ba8f64e2fac5aef8737b4e3" kindref="member">TT_DOUBLE</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>Point<sp/>)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>digit<sp/>=<sp/>digit<sp/>/<sp/>10;<sp/><ref refid="dc/ddd/classInFile_1a2de57d9c3a13c27bdb8490098e3ff408" kindref="member">Double</ref><sp/>+=<sp/>digit<sp/>*<sp/>(b<sp/>-</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a77c1f8c49d1ad37621106a514787bab4" kindref="member">Long</ref><sp/>=<sp/><ref refid="dc/ddd/classInFile_1a77c1f8c49d1ad37621106a514787bab4" kindref="member">Long</ref><sp/>*<sp/>10<sp/>+<sp/>(b<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!Point<sp/>)<sp/><ref refid="dc/ddd/classInFile_1a2de57d9c3a13c27bdb8490098e3ff408" kindref="member">Double</ref><sp/>=<sp/>(double)<sp/><ref refid="dc/ddd/classInFile_1a77c1f8c49d1ad37621106a514787bab4" kindref="member">Long</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>strchr(<ref refid="d9/dc1/infile_8cpp_1a23f5c808c97426a2bea6a35886006d79" kindref="member">SignZeichen</ref>,<sp/>b<sp/>)<sp/>)<sp/></highlight><highlight class="comment">//<sp/>Sign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5ab0b93306ddd4f3cea57d5aa90d2add0a" kindref="member">TT_SIGN</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>[i++]<sp/>=<sp/>b;<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>++;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>b<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>[0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="comment">//<sp/>für '-&gt;&apos;<sp/>nur<sp/>&apos;p&apos;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>++;<sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;p&apos;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a77c1f8c49d1ad37621106a514787bab4" kindref="member">Long</ref><sp/>=<sp/>b;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>strchr(<ref refid="d9/dc1/infile_8cpp_1ae7ce02c9b082e0aa44f15dbd49800c3c" kindref="member">StringZeichen</ref>,<sp/>b<sp/>)<sp/>)<sp/></highlight><highlight class="comment">//<sp/>String</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5a3355cc282f3b7c2eea509d182247b0fa" kindref="member">TT_STRING</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>strchr(<ref refid="d9/dc1/infile_8cpp_1ae7ce02c9b082e0aa44f15dbd49800c3c" kindref="member">StringZeichen</ref>,<sp/>b<sp/>=<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>[0])<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>[i++]<sp/>=<sp/>b;<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>++;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>fatal_error(2,<sp/>b,<sp/><ref refid="dc/ddd/classInFile_1a82721b5f29d280221a7dd3c518a719c8" kindref="member">Line</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>unbekanntes<sp/>Zeichen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>str<sp/>)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>max<sp/>)<sp/>strncpy(str,<sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>,<sp/>max);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>strcpy(str,<sp/><ref refid="dc/ddd/classInFile_1a26803830de35bdde8b0c4f069bc71749" kindref="member">String</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="dc/ddd/classInFile_1a9f39f32a77384cc84d354243428499b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="dc/ddd/classInFile_1a9f39f32a77384cc84d354243428499b7" kindref="member">InFile::NewLine</ref>()</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>liest<sp/>neue<sp/>Zeile<sp/>in<sp/>s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>eof()<sp/>)<sp/>{<sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5aaffedff66c98c1bc186e2c35cdc7ab66" kindref="member">TT_EOF</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="d5/dee/group__route_1ga27a1c72438b4005fdc9b5b0d16705279" kindref="member">bad</ref>()<sp/>)<sp/>{<sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5a63aedd7b3e899b727bea4b28f41ca51d" kindref="member">TT_ERROR</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>getline(<ref refid="dc/ddd/classInFile_1afb59ee109172ac54e1a5fc6d1bff2392" kindref="member">s1</ref>,<sp/><ref refid="de/d69/infile_8h_1a4da78e242f22b09371e5deda081e032a" kindref="member">LMAX_LINE</ref>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><ref refid="dc/ddd/classInFile_1a82721b5f29d280221a7dd3c518a719c8" kindref="member">Line</ref>++;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="d5/dee/group__route_1ga27a1c72438b4005fdc9b5b0d16705279" kindref="member">bad</ref>()<sp/>)<sp/>{<sp/><ref refid="dc/ddd/classInFile_1a6783f545d40281c18e83296f87aeca71" kindref="member">TokenType</ref><sp/>=<sp/><ref refid="de/d69/infile_8h_1aec89eef61792c2085bbe176365e146c5a63aedd7b3e899b727bea4b28f41ca51d" kindref="member">TT_ERROR</ref>;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref><sp/>=<sp/><ref refid="dc/ddd/classInFile_1afb59ee109172ac54e1a5fc6d1bff2392" kindref="member">s1</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="dc/ddd/classInFile_1af324cb1bae0b218ca7dae2aa923428fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="dc/ddd/classInFile_1af324cb1bae0b218ca7dae2aa923428fa" kindref="member">InFile::CheckNewToken</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>liest,<sp/>bis<sp/>1.<sp/>Zeichen<sp/>eines<sp/>Tokens<sp/>gefunden</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>RemMode<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>[0]<sp/>)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<ref refid="dc/ddd/classInFile_1a9f39f32a77384cc84d354243428499b7" kindref="member">NewLine</ref>()<sp/>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>RemMode<sp/>)<sp/>fatal_error(5);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>[0]<sp/>==<sp/><ref refid="d9/dc1/infile_8cpp_1a4bca56c5391dc47b0909c2de2a702f99" kindref="member">REM_ZEICHEN</ref><sp/>)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RemMode<sp/>=<sp/>!RemMode;<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>++;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>strchr(<ref refid="d9/dc1/infile_8cpp_1ab4da9c8ceadd429b5806c1d8e1e242c4" kindref="member">TrennZeichen</ref>,<sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>[0])<sp/>||<sp/>RemMode<sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dc/ddd/classInFile_1add3fc638f920fe2cea0d07bf353e58b4" kindref="member">s</ref>++;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!RemMode<sp/>)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/gmut/infile.cpp"/>
  </compounddef>
</doxygen>
