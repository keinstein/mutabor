<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dd/da0/todo" kind="page">
    <compoundname>todo</compoundname>
    <title>Ausstehende Aufgaben</title>
    <detaileddescription>
<para><variablelist>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000037"/>Element <ref refid="df/dd1/group__GUI_1ga26f8a3927e5cf8a5b0c22aba23d408d7" kindref="member">BEGIN_EVENT_TABLE_TEMPLATE1</ref>  (<ref refid="d5/d12/classMutIconShapeClass" kindref="compound">MutIconShapeClass</ref>, T, T) EVT_SIZE(<ref refid="d5/d12/classMutIconShapeClass" kindref="compound">MutIconShapeClass</ref></term></varlistentry>
<listitem><para>Check out how wxWidgets 2.9 supports templates  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000002"/>Element <ref refid="d9/d7c/group__kernel_1ga2ea71bbe5f870f057780e2a023da84ab" kindref="member">berechne_intervalle_absolut</ref>  (mutabor_box_type *box, struct intervall *list_of_intervalle)</term></varlistentry>
<listitem><para>we should use Dykstra to reduce complexity  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000038"/>Element <ref refid="dd/db0/MutDocManager_8cpp_1a9e7a087c5c550acffcd802f4b40bd609" kindref="member">END_EVENT_TABLE</ref>  () namespace <ref refid="db/d94/namespacemutaborGUI" kindref="compound">mutaborGUI</ref></term></varlistentry>
<listitem><para>correct command processing  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000028"/>Element <ref refid="dd/db8/RouteCompat_8cpp_1aaa9c8dc328349cf18c6a068a6cdfcd85" kindref="member">GETLINE</ref>  </term></varlistentry>
<listitem><para>: implement a converter to TreeConfig  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000033"/>Gruppe <ref refid="df/dd1/group__GUI" kindref="compound">GUI</ref>  </term></varlistentry>
<listitem><para>remove this file: a character set error implies that the whole file has to be reconverted. </para><para>remove this file: a character set error implies that the whole file has to be reconverted.  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000047"/>Gruppe <ref refid="dc/df2/group__GUIroute" kindref="compound">GUIroute</ref>  </term></varlistentry>
<listitem><para>Rewrite shape classes to use GUI-references. In order to do that, a special reference counting function should be provided that use the non-GUI counter.  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000001"/>Element <ref refid="de/db7/group__debug_1ga2215a79ef7c59d401e01e04571afc801" kindref="member">HEADERFILENAME_PRECOMPILED</ref>  </term></varlistentry>
<listitem><para>move thread.h into src/kernel  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000010"/>Element <ref refid="d5/dee/group__route_1ga84dc1e18819c54de3ed22bc27269d4cd" kindref="member">mutabor::ChannelData::get_first_changed_controller</ref>  () const </term></varlistentry>
<listitem><para>Provide changed_controller iterator type  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000011"/>Element <ref refid="d5/dee/group__route_1gaab2a6a750a2210c98106549c88a91d07" kindref="member">mutabor::ChannelData::get_next_changed_controller</ref>  (controller_vector::const_iterator last) const </term></varlistentry>
<listitem><para>Provide changed_controller iterator type  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000006"/>Element <ref refid="dd/d3c/classmutabor_1_1CommonFileInputDevice_1a423d3eece573e61472d6ec5f1c782486" kindref="member">mutabor::CommonFileInputDevice::ThreadPlay</ref>  (FileTimer *timer)</term></varlistentry>
<listitem><para>clean-up race conditions  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000024"/>Element <ref refid="dc/d51/classmutabor_1_1CommonMidiInput_1ab6618f04373c0de7b62bd70f12bd1dbc" kindref="member">mutabor::CommonMidiInput&lt; D &gt;::ProceedRoute</ref>  (const std::vector&lt; unsigned char &gt; *midiCode, Route route, int channel_offset)</term></varlistentry>
<listitem><para>handle all these messages in mutabor  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000022"/>Element <ref refid="dd/df5/classmutabor_1_1CommonMidiOutput_1aa17b5269ed776e1d40abed48119dddd4" kindref="member">mutabor::CommonMidiOutput&lt; T, D &gt;::do_Controller</ref>  (ChannelData &amp;output, int channel, int ctrl, int value)</term></varlistentry>
<listitem><para>handle chord hold </para><para>implement immediate controller reset, don&apos;t wait for the next tone  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000025"/>Element <ref refid="dd/df5/classmutabor_1_1CommonMidiOutput_1a23dfccd2e97e799cd8b32dea22306e5c" kindref="member">mutabor::CommonMidiOutput&lt; T, D &gt;::do_NoteOn</ref>  (Box box, int inkey, int velocity, RouteClass *r, size_t id, const ChannelData &amp;input_channel_data)</term></varlistentry>
<listitem><para>currently portamento and legato switches may not work as the device does not know which notes from different channels should be combined</para><para>write a test that checks for negative controller values  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000012"/>Element <ref refid="d5/dee/group__route_1ga5b62e46138d3c284dc0805df603a639e" kindref="member">mutabor::Device::::mutaborGUI::GUIOutputDeviceBase</ref>  </term></varlistentry>
<listitem><para>lift this restrection afer GUI is working again  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000014"/>Element <ref refid="d8/df7/classmutabor_1_1GisFactory_1ab5a24449477bdad6e4af42705f8cceaf" kindref="member">mutabor::GisFactory::DoCreateInput</ref>  (const std::string &amp;name, <ref refid="d5/dee/group__route_1gaa3d7d1e712c727d12c3b60c8dc04b484" kindref="member">mutabor::MutaborModeType</ref> mode, int id=-1) const </term></varlistentry>
<listitem><para>unify kernel device factories::DoCreate...  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000005"/>Element <ref refid="d6/dbb/namespacemutabor_1_1hidden_1acba1a0dc6569d4ae588ce6b398aea8ba" kindref="member">mutabor::hidden::check_aktionen</ref>  (mutabor_box_type *box, struct aktions_liste *aktionen, const char *name)</term></varlistentry>
<listitem><para>split up midi messages and check each message separately  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000032"/>Element <ref refid="d6/dbb/namespacemutabor_1_1hidden_1a5b50b41814c8ac579c5ee30bcd35ead0" kindref="member">mutabor::hidden::expand_decition_tree</ref>  (mutabor_box_type *box)</term></varlistentry>
<listitem><para>ensure that the logics of the different boxes are independent  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000029"/>Element <ref refid="d6/dbb/namespacemutabor_1_1hidden_1a06d33414c5a23651dec1aa8193dba1a1" kindref="member">mutabor::hidden::expand_tonliste</ref>  (mutabor_box_type *box, struct ton *the_tonliste)</term></varlistentry>
<listitem><para>make iterative  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000031"/>Element <ref refid="d6/dbb/namespacemutabor_1_1hidden_1abf9897e39c397c08f78f643a7bb0d707" kindref="member">mutabor::hidden::expandiere_name</ref>  (mutabor_box_type *box, const char *name, struct argument_list *parameter, struct interpreter_argument_list *bezugs_liste)</term></varlistentry>
<listitem><para>check that the conversion succeeds always  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000030"/>Element <ref refid="d6/dbb/namespacemutabor_1_1hidden_1aa000ed5832b858ea653a5427b1a975ab" kindref="member">mutabor::hidden::expandiere_umstimmung</ref>  (mutabor_box_type *box, struct umstimmung *the_umstimmung, struct interpreter_argument_list *aktuelle_parameter)</term></varlistentry>
<listitem><para>make out_liste an argument list  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000004"/>Element <ref refid="d6/dbb/namespacemutabor_1_1hidden_1a0f7f70c4e2a58c11fc80284fee21cd93" kindref="member">mutabor::hidden::get_intervall</ref>  (const char *name, struct intervall *liste)</term></varlistentry>
<listitem><para>make this function iterative  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000003"/>Element <ref refid="d6/dbb/namespacemutabor_1_1hidden_1af683e9a4df80a5abc8d7816a0a228948" kindref="member">mutabor::hidden::yylex</ref>  (<ref refid="da/d7e/unionYYSTYPE" kindref="compound">YYSTYPE</ref> *lvalp, <ref refid="d8/d38/structYYLTYPE" kindref="compound">YYLTYPE</ref> *llocp, mutabor_box_type *box)</term></varlistentry>
<listitem><para>check whether this function is necessary for any system but windows  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000008"/>Element <ref refid="d5/dee/group__route_1ga2e005c6f49a1547b9b3b011a940879be" kindref="member">mutabor::InputDeviceClass::BatchPlay</ref>  ()</term></varlistentry>
<listitem><para>{find a better place for BatchPlay and RealtimePlay: we should not reference CurrentTime from Device.{h,cpp,-inlines.h} } </para><para>implement event types that use timestamps  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000007"/>Element <ref refid="d5/dee/group__route_1ga85fbc49b0b301e47ff473ef609158582" kindref="member">mutabor::InputDeviceClass::ResumeKeys</ref>  ()</term></varlistentry>
<listitem><para>move implementation to midicmn and Co.  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000013"/>Element <ref refid="dc/da1/classmutabor_1_1InputGis_1a2b3ede588a224861e7a1810e983c6b45" kindref="member">mutabor::InputGis::Proceed</ref>  (<ref refid="d4/d4c/classGisReadArtHead" kindref="compound">GisReadArtHead</ref> *h, char turn, Route route)</term></varlistentry>
<listitem><para>provide working GIS note id. Currently Mutabor outputs only MIDI so it&apos;s no problem  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000019"/>Element <ref refid="d6/d12/classmutabor_1_1InputMidiFile_1a47d474c5a80063428b30e1cbf2d60bf7" kindref="member">mutabor::InputMidiFile::Proceed</ref>  (const std::vector&lt; unsigned char &gt; *midiCode, int data=0, int channel_offset=0)</term></varlistentry>
<listitem><para>implement system messages  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000018"/>Element <ref refid="d6/d12/classmutabor_1_1InputMidiFile_1a6146930f86cbd9c73933d50c1543fcc7" kindref="member">mutabor::InputMidiFile::Save</ref>  (tree_storage &amp;config, const RouteClass *route)</term></varlistentry>
<listitem><para>: check for array borders  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000020"/>Element <ref refid="d2/dea/classmutabor_1_1InputMidiPort_1a2db286d76f1433ece8ee693a708ffef6" kindref="member">mutabor::InputMidiPort::Proceed</ref>  (const std::vector&lt; unsigned char &gt; *midiCode, int data=0, int channel_offset=0)</term></varlistentry>
<listitem><para>implement system messages  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000017"/>Element <ref refid="dd/dbe/classmutabor_1_1Track_1aeafcbd54ff072cff5cf097b453f978e7" kindref="member">mutabor::Track::Save</ref>  (std::ostream &amp;os)</term></varlistentry>
<listitem><para>Implement Format 2 files with one separate track for each route  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000027"/>Element <ref refid="d5/dee/group__route_1gac02067ac6f052e07d821111c2e755e57" kindref="member">mutabor::TRouteClass&lt; I, O, B &gt;::mutaborGUI::GUIRouteBase</ref>  </term></varlistentry>
<listitem><para>remove this reference after GUI is working again  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000036"/>Element <ref refid="df/d08/classmutaborGUI_1_1BoxData_1a350f045390bb87506569b0843e8c6b84" kindref="member">mutaborGUI::BoxData::shapes</ref>  </term></varlistentry>
<listitem><para>curent_logic and current_tonesystem are set but unused as well as current_key_tonesystem and current_key_logic  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000035"/>Element <ref refid="dc/d58/classmutaborGUI_1_1GUIBoxFactory_1ac7a27eedc8f8f50c84fb325e18666116" kindref="member">mutaborGUI::GUIBoxFactory::DoCreateBoxShape</ref>  (<ref refid="d5/dee/group__route_1ga3f643df8253d674ef503b3c344010646" kindref="member">mutabor::Box</ref> &amp;box, wxWindow *parent) const </term></varlistentry>
<listitem><para>implement ID sharing between the different shapes of one common route  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000045"/>Element <ref refid="d3/db0/classmutaborGUI_1_1GUIMidiPortFactory_1a75fa9c4e3f4fef1579499524d8825a02" kindref="member">mutaborGUI::GUIMidiPortFactory::DoCreateShape</ref>  (<ref refid="d5/dee/group__route_1gaa9af06d2b801f5fbf129acc683bb764d" kindref="member">mutabor::OutputDevice</ref> &amp;device, wxWindow *parent) const </term></varlistentry>
<listitem><para>implement ID sharing between the different shapes of one common route  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000046"/>Element <ref refid="d3/db0/classmutaborGUI_1_1GUIMidiPortFactory_1a42d7481b20183ebe1482302d2f92dff5" kindref="member">mutaborGUI::GUIMidiPortFactory::DoCreateShape</ref>  (<ref refid="d5/dee/group__route_1gaa07c845228719e7505615a18d241734d" kindref="member">mutabor::InputDevice</ref> &amp;device, wxWindow *parent) const </term></varlistentry>
<listitem><para>implement ID sharing between the different shapes of one common route  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000044"/>Element <ref refid="d6/de3/classmutaborGUI_1_1GUIRouteFactory_1a75a8d7d51409f856c07a7845fd8f6a66" kindref="member">mutaborGUI::GUIRouteFactory::DoCreateBoxChannelShape</ref>  (<ref refid="d5/dee/group__route_1gae5927f0f6043b271d1bd1c493e2505e4" kindref="member">mutabor::Route</ref> &amp;route, wxWindow *parent) const </term></varlistentry>
<listitem><para>implement ID sharing between the different shapes of one common route  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000041"/>Element <ref refid="dc/df2/group__GUIroute_1ga9cff412769db7e55f0dafac64012bf34" kindref="member">mutaborGUI::MutBoxShape::DoLeftDblClick</ref>  ()</term></varlistentry>
<listitem><para>Move this check into MutBoxDlg  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000042"/>Element <ref refid="dc/df2/group__GUIroute_1gac946c92d094b2ce45b65b2a82de379f2" kindref="member">mutaborGUI::MutBoxShape::ShowBoxDialog</ref>  () const </term></varlistentry>
<listitem><para>use value “unknown” for dynamic dialog creation </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000043"/>Element <ref refid="dc/df2/group__GUIroute_1gab5acbf0b0cc8d599bb2389213dd09774" kindref="member">mutaborGUI::MutDeviceShape&lt; T &gt;::replaceSelfBy</ref>  (thistype *newshape)</term></varlistentry>
<listitem><para>transfer this function to GUIRoute  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000039"/>Element <ref refid="df/dd1/group__GUI_1ga5f93d6d12658f3457841aef52e29d946" kindref="member">mutaborGUI::MutFrame::OpenFile</ref>  (wxString path, bool newfile=false)</term></varlistentry>
<listitem><para>file loading fails silently if it is not in the systems encoding.  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000040"/>Element <ref refid="df/dd1/group__GUI_1gab7b127698096bd2c8082d45f6097eaba" kindref="member">mutaborGUI::MutFrame::RestoreState</ref>  ()</term></varlistentry>
<listitem><para>implement this function  </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000048"/>Element <ref refid="dc/df2/group__GUIroute_1ga5c0eacea1d6d046b297150c66fed7f5e" kindref="member">mutaborGUI::MutInputMidiFileDeviceShape::readDialog</ref>  (InputDevDlg *in)</term></varlistentry>
<listitem><para>implement return value </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000049"/>Element <ref refid="dc/df2/group__GUIroute_1gaa709c5fc8b8179d26519cbe9dbbd0bf2" kindref="member">mutaborGUI::MutInputMidiFileDeviceShape::ReadFilterPanel</ref>  (wxWindow *panel, <ref refid="d5/dee/group__route_1gae5927f0f6043b271d1bd1c493e2505e4" kindref="member">mutabor::Route</ref> &amp;route)</term></varlistentry>
<listitem><para>Separate filters from route. </para></listitem>
<varlistentry><term><anchor id="dd/da0/todo_1_todo000026"/>Element <ref refid="d5/dee/group__route_1ga7362531b8f8f6fe014b4d30658640746" kindref="member">OutputMidiFileTest::testBatchPlay1</ref>  ()</term></varlistentry>
<listitem><para>Make the following line unneccessary: Implement caching of system states </para></listitem>
</variablelist>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
