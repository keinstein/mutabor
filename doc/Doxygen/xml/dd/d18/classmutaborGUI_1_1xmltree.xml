<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="dd/d18/classmutaborGUI_1_1xmltree" kind="class" prot="public">
    <compoundname>mutaborGUI::xmltree</compoundname>
    <basecompoundref refid="da/de5/classmutabor_1_1tree__storage" prot="public" virt="non-virtual">mutabor::tree_storage</basecompoundref>
    <basecompoundref prot="public" virt="non-virtual">wxXmlDocument</basecompoundref>
    <includes refid="d8/d53/xmltree_8h" local="no">xmltree.h</includes>
    <innerclass refid="d6/d06/structmutaborGUI_1_1xmltree_1_1state" prot="private">mutaborGUI::xmltree::state</innerclass>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="dd/d18/classmutaborGUI_1_1xmltree_1aa933d64b433f892549b871ea75b9416c" prot="private" static="no">
        <type>wxXmlNode</type>
        <definition>typedef wxXmlNode mutaborGUI::xmltree::node_type</definition>
        <argsstring></argsstring>
        <name>node_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="55" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d18/classmutaborGUI_1_1xmltree_1a2c4eb00c2eca45133b11a4e3261db3b8" prot="private" static="no">
        <type>wxXmlProperty</type>
        <definition>typedef wxXmlProperty mutaborGUI::xmltree::prop_type</definition>
        <argsstring></argsstring>
        <name>prop_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="56" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dd/d18/classmutaborGUI_1_1xmltree_1a2d683734ce8a725a45c7e3e628190ecb" prot="private" static="no">
        <type>wxXmlDocument</type>
        <definition>typedef wxXmlDocument mutaborGUI::xmltree::doc</definition>
        <argsstring></argsstring>
        <name>doc</name>
        <briefdescription>
<para>configuration object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="57" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="dd/d18/classmutaborGUI_1_1xmltree_1ab01d940cb089234c0d77fd5bc079b1d0" prot="private" static="no" mutable="no">
        <type>std::stack&lt; <ref refid="d6/d06/structmutaborGUI_1_1xmltree_1_1state" kindref="compound">state</ref> &gt;</type>
        <definition>std::stack&lt;state&gt; mutaborGUI::xmltree::states</definition>
        <argsstring></argsstring>
        <name>states</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="77" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="77" bodyend="-1"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a8ccbe80eefd6786576ed84a7963fef84" compoundref="de/d4f/xmltree_8cpp" startline="45" endline="63">Load</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a0b997f435049a4960de262b5a2f64341" compoundref="de/d4f/xmltree_8cpp" startline="191" endline="211">toLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a203b7bca1d29d824f6d96c58c0bcf545" compoundref="de/d4f/xmltree_8cpp" startline="307" endline="334">toNextLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1aa160b14a043dbfad6237702fefdcc9b4" compoundref="de/d4f/xmltree_8cpp" startline="337" endline="353">toParent</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a614f224434d9960a1110e21300a1c175" compoundref="de/d4f/xmltree_8cpp" startline="33" endline="43">xmltree</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/d18/classmutaborGUI_1_1xmltree_1aa5e8fb3a4679906d49af4a1aa3ea9b7a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mutaborGUI::xmltree::create_tree</definition>
        <argsstring></argsstring>
        <name>create_tree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="78" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="78" bodyend="-1"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a4bb478ccb9753db60c6e4617c0b3678f" compoundref="de/d4f/xmltree_8cpp" startline="498" endline="508">DeleteGroup</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1aafbf88ec887591fc18f63fa2ad6a6209" compoundref="de/d4f/xmltree_8cpp" startline="177" endline="189">HasGroup</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a057594187714d03c31b185e7f04fd4d4" compoundref="de/d4f/xmltree_8cpp" startline="365" endline="443">SetPath</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a1b4a52acf7e25fc2fe96bb447630f563" compoundref="de/d4f/xmltree_8cpp" startline="213" endline="285">toLeaf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d18/classmutaborGUI_1_1xmltree_1aa933d64b433f892549b871ea75b9416c" kindref="member">node_type</ref> *</type>
        <definition>node_type* mutaborGUI::xmltree::current_node</definition>
        <argsstring></argsstring>
        <name>current_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="80" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="80" bodyend="-1"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1af2ef44e61e609668ee2d714cd5b56d04" compoundref="de/d4f/xmltree_8cpp" startline="445" endline="496">DeleteEntry</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a4bb478ccb9753db60c6e4617c0b3678f" compoundref="de/d4f/xmltree_8cpp" startline="498" endline="508">DeleteGroup</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1af276602e32293a0608ae3a6f9e993bc6" compoundref="de/d4f/xmltree_8cpp" startline="355" endline="363">GetwxPath</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1aafbf88ec887591fc18f63fa2ad6a6209" compoundref="de/d4f/xmltree_8cpp" startline="177" endline="189">HasGroup</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a8ccbe80eefd6786576ed84a7963fef84" compoundref="de/d4f/xmltree_8cpp" startline="45" endline="63">Load</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1ad024bab622d01c601817973e5a264d8a" compoundref="de/d4f/xmltree_8cpp" startline="110" endline="127">Read</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a057594187714d03c31b185e7f04fd4d4" compoundref="de/d4f/xmltree_8cpp" startline="365" endline="443">SetPath</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a4955b074b5a8fced688c2af3a5303c45" compoundref="de/d4f/xmltree_8cpp" startline="541" endline="573">SetProperty</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a6cac47dd2ec69bed99f2b8ddc7b144f5" compoundref="de/d4f/xmltree_8cpp" startline="287" endline="304">toFirstLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a0b997f435049a4960de262b5a2f64341" compoundref="de/d4f/xmltree_8cpp" startline="191" endline="211">toLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a203b7bca1d29d824f6d96c58c0bcf545" compoundref="de/d4f/xmltree_8cpp" startline="307" endline="334">toNextLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1aa160b14a043dbfad6237702fefdcc9b4" compoundref="de/d4f/xmltree_8cpp" startline="337" endline="353">toParent</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a97be4138936902b24440b02d72a9e966" compoundref="de/d4f/xmltree_8cpp" startline="157" endline="175">Write</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a614f224434d9960a1110e21300a1c175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mutaborGUI::xmltree::xmltree</definition>
        <argsstring>(wxString rootname, bool create=true)</argsstring>
        <name>xmltree</name>
        <param>
          <type>wxString</type>
          <declname>rootname</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>create</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="82" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="33" bodyend="43"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab01d940cb089234c0d77fd5bc079b1d0" compoundref="d8/d53/xmltree_8h" startline="77">states</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a458d4a2454fe070d2e65e7380a448d84" compoundref="d8/d53/xmltree_8h" startline="149" endline="151">toLeaf</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a81d18fd35e516347f3f619091c0ce96f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual mutaborGUI::xmltree::~xmltree</definition>
        <argsstring>()</argsstring>
        <name>~xmltree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="85" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a8ccbe80eefd6786576ed84a7963fef84" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool mutaborGUI::xmltree::Load</definition>
        <argsstring>(const wxString &amp;filename, const wxString &amp;encoding=wxT(&quot;UTF-8&quot;), int flags=wxXMLDOC_NONE)</argsstring>
        <name>Load</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>filename</declname>
        </param>
        <param>
          <type>const wxString &amp;</type>
          <declname>encoding</declname>
          <defval>wxT(&quot;UTF-8&quot;)</defval>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
          <defval>wxXMLDOC_NONE</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="89" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="45" bodyend="63"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab01d940cb089234c0d77fd5bc079b1d0" compoundref="d8/d53/xmltree_8h" startline="77">states</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a458d4a2454fe070d2e65e7380a448d84" compoundref="d8/d53/xmltree_8h" startline="149" endline="151">toLeaf</references>
        <referencedby refid="dc/df2/group__GUIroute_1ga24bfe10e24a2431758a4ee4e8153291e" compoundref="dc/def/MutRouteWnd_8cpp" startline="411" endline="511">mutaborGUI::MutRouteWnd::CmRouteLoad</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1ab2e676d2b5719f0882b04e9e88352c7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>long</type>
        <definition>virtual long mutaborGUI::xmltree::Read</definition>
        <argsstring>(const std::string &amp;key, long defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aab2b2939a0c886921cb0e9708bfa156d">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a long integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (long) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="93" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="93" bodyend="95"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a5b7d7cfed8e1134c4d4264b7b8337517" compoundref="d8/d53/xmltree_8h" startline="96" endline="98">Read</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a5b7d7cfed8e1134c4d4264b7b8337517" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>virtual double mutaborGUI::xmltree::Read</definition>
        <argsstring>(const std::string &amp;key, double defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ad1a8dfe20676083943e78efa945cfc5a">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a double value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (double) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="96" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="96" bodyend="98"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab2e676d2b5719f0882b04e9e88352c7e" compoundref="d8/d53/xmltree_8h" startline="93" endline="95">Read</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a0652b0ca10a45e1292a9913b8a26ba69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mutaborGUI::xmltree::Read</definition>
        <argsstring>(const std::string &amp;key, int defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1abba4caa9044e3eb42090bd7f6c6ac2a9">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads an integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (int) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="99" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="99" bodyend="101"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab2e676d2b5719f0882b04e9e88352c7e" compoundref="d8/d53/xmltree_8h" startline="93" endline="95">Read</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a48c52978567b936095e33c06bf75a1f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mutaborGUI::xmltree::Read</definition>
        <argsstring>(const std::string &amp;key, bool defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a9dc6fc8b2c07dcb47b703ef620ac50a8">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a boolean value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (bool) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="102" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="102" bodyend="104"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab2e676d2b5719f0882b04e9e88352c7e" compoundref="d8/d53/xmltree_8h" startline="93" endline="95">Read</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a7eccd35edbed709bb0f897355ba243be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>long mutaborGUI::xmltree::Read</definition>
        <argsstring>(const wxString &amp;key, long defval)</argsstring>
        <name>Read</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="105" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="66" bodyend="74"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a77fdad61a5204487dc3c550a3c6eb5ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double mutaborGUI::xmltree::Read</definition>
        <argsstring>(const wxString &amp;key, double defval)</argsstring>
        <name>Read</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="106" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="76" bodyend="84"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1afc4a108e1919780520f402ed5a00d83d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int mutaborGUI::xmltree::Read</definition>
        <argsstring>(const wxString &amp;key, int defval)</argsstring>
        <name>Read</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="107" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="86" bodyend="94"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a4ee0d3df1dfed791ca4a8b354246de45" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool mutaborGUI::xmltree::Read</definition>
        <argsstring>(const wxString &amp;key, bool defval)</argsstring>
        <name>Read</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="108" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="96" bodyend="108"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a1ab4c4207667b1ecb866b6e62f5580a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string mutaborGUI::xmltree::Read</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ab8f12d8a67c07a1f55e4661d8c865980">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a string value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (std::string&amp;) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="109" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="109" bodyend="112"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab2e676d2b5719f0882b04e9e88352c7e" compoundref="d8/d53/xmltree_8h" startline="93" endline="95">Read</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1ad024bab622d01c601817973e5a264d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>wxString</type>
        <definition>wxString mutaborGUI::xmltree::Read</definition>
        <argsstring>(const wxString &amp;key, const wxString &amp;defval)</argsstring>
        <name>Read</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const wxString &amp;</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="113" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="110" bodyend="127"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a90b941ce694241dbae0fb137ab53f2e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const std::string &amp;key, long value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a331885e032f43ebe53a492268bab377a">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a long integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (long) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="115" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="115" bodyend="117"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a1b4a52acf7e25fc2fe96bb447630f563" compoundref="de/d4f/xmltree_8cpp" startline="213" endline="285">toLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a765eb8b49a8cd2c87b0f7320d97846e1" compoundref="d8/d53/xmltree_8h" startline="118" endline="120">Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a765eb8b49a8cd2c87b0f7320d97846e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const std::string &amp;key, double value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ae97b8f43989a47d65f8cafe7d744e615">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a double value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (double) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="118" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="118" bodyend="120"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a90b941ce694241dbae0fb137ab53f2e8" compoundref="d8/d53/xmltree_8h" startline="115" endline="117">Write</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1ac1c89b3e32618b43baf4a3f41c91e71f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const std::string &amp;key, int value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a4911dd7c9b659cf9a08402401fa239d0">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes an integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (int) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="121" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="121" bodyend="123"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a90b941ce694241dbae0fb137ab53f2e8" compoundref="d8/d53/xmltree_8h" startline="115" endline="117">Write</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1ab88397c441add0eceee251b7ca92c701" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const std::string &amp;key, bool value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1abd598e75bd3238b94d2c58e3bd04aafc">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a boolean value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (bool) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="124" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="124" bodyend="126"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a90b941ce694241dbae0fb137ab53f2e8" compoundref="d8/d53/xmltree_8h" startline="115" endline="117">Write</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a54c6c584cb3450f405908b40a012470c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const wxString &amp;key, long value)</argsstring>
        <name>Write</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="127" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="129" bodyend="134"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a1c8569850a38f2801d2dbac6d29e0937" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const wxString &amp;key, double value)</argsstring>
        <name>Write</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="128" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="136" bodyend="141"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a0acce7f0736518e9821405b36ce9a980" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const wxString &amp;key, int value)</argsstring>
        <name>Write</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="129" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="143" bodyend="148"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a99d1213187809697514f7b0c9a2350cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const wxString &amp;key, bool value)</argsstring>
        <name>Write</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="130" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="150" bodyend="155"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1aa2ede2b861d922514dc3fe59fb2a68a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a1485fda2de1bad0b29c649c00dae55f7">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a string value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (std::string&amp;) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="131" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="131" bodyend="134"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a90b941ce694241dbae0fb137ab53f2e8" compoundref="d8/d53/xmltree_8h" startline="115" endline="117">Write</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a97be4138936902b24440b02d72a9e966" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::Write</definition>
        <argsstring>(const wxString &amp;key, const wxString &amp;value)</argsstring>
        <name>Write</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const wxString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="135" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="157" bodyend="175"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1addaa112284da973ac859ab91b5ceca1e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mutaborGUI::xmltree::HasGroup</definition>
        <argsstring>(const std::string &amp;subdir) const </argsstring>
        <name>HasGroup</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ab94d21edc9dc97e0e1b4b11701314fe2">HasGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Checks if the tree has a branch with the given name. </para>        </briefdescription>
        <detaileddescription>
<para>subdir (std::string&amp;) subdirectory to check for. <simplesect kind="return"><para>true if the current node has a leaf with the given name which is a node itself. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="137" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="137" bodyend="140"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a6a71a6a9ae0c4cc7fb806609c4a43138" compoundref="d8/d53/xmltree_8h" startline="141" endline="144">HasGroup</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a6a71a6a9ae0c4cc7fb806609c4a43138" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mutaborGUI::xmltree::HasGroup</definition>
        <argsstring>(const wxString &amp;subdir) const </argsstring>
        <name>HasGroup</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>subdir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="141" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="141" bodyend="144"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1addaa112284da973ac859ab91b5ceca1e" compoundref="d8/d53/xmltree_8h" startline="137" endline="140">HasGroup</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a343342a09f97294909f4d541385fdbae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool mutaborGUI::xmltree::HasGroup</definition>
        <argsstring>(const std::string &amp;subdir)</argsstring>
        <name>HasGroup</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>subdir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="145" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="145" bodyend="147"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1addaa112284da973ac859ab91b5ceca1e" compoundref="d8/d53/xmltree_8h" startline="137" endline="140">HasGroup</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1aafbf88ec887591fc18f63fa2ad6a6209" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool mutaborGUI::xmltree::HasGroup</definition>
        <argsstring>(const wxString &amp;subdir)</argsstring>
        <name>HasGroup</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>subdir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="148" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="177" bodyend="189"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aa5e8fb3a4679906d49af4a1aa3ea9b7a" compoundref="d8/d53/xmltree_8h" startline="78">create_tree</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1af111263d0a6ed719dfdc7452f8fa9f0e" compoundref="d8/d53/xmltree_8h" startline="202" endline="204">SetPath</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a458d4a2454fe070d2e65e7380a448d84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::toLeaf</definition>
        <argsstring>(const std::string &amp;subdir)</argsstring>
        <name>toLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aff36a4266f985cc8c5c5c4f356a63d75">toLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>subdir</declname>
        </param>
        <briefdescription>
<para>Changes the current node downwards. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered like a subdirectory in a file system.  subdir (std::string&amp;) subdirectory to be written to. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="149" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="149" bodyend="151"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a8ccbe80eefd6786576ed84a7963fef84" compoundref="de/d4f/xmltree_8cpp" startline="45" endline="63">Load</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a6cac47dd2ec69bed99f2b8ddc7b144f5" compoundref="de/d4f/xmltree_8cpp" startline="287" endline="304">toFirstLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a1b4a52acf7e25fc2fe96bb447630f563" compoundref="de/d4f/xmltree_8cpp" startline="213" endline="285">toLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a614f224434d9960a1110e21300a1c175" compoundref="de/d4f/xmltree_8cpp" startline="33" endline="43">xmltree</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a44f62ad617d7ab83482074ac1c1445d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::toLeaf</definition>
        <argsstring>(const std::string &amp;name, int id)</argsstring>
        <name>toLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a3470bb3b8124602d7a2cff0c67a94f2d">toLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downwards. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id. if the id is negative, it will create a new item.  subdir (std::string&amp;) name of the entity to be written to.  id (int) id of the current object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="152" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="152" bodyend="154"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a458d4a2454fe070d2e65e7380a448d84" compoundref="d8/d53/xmltree_8h" startline="149" endline="151">toLeaf</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a0b997f435049a4960de262b5a2f64341" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::toLeaf</definition>
        <argsstring>(const wxString &amp;subdir)</argsstring>
        <name>toLeaf</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>subdir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="155" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="191" bodyend="211"/>
        <references refid="d9/d7c/group__kernel_1gae4dfd7b0d66121016d6466d2ff10e8ba" compoundref="d2/de4/Interval_8c" startline="41">_</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a24b0861b388c7da2965a51d41c023345" compoundref="d8/d53/xmltree_8h" startline="198" endline="200">GetPath</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d6/d06/structmutaborGUI_1_1xmltree_1_1state_1afd223f40d100e64c722330ed7448d03b" compoundref="d8/d53/xmltree_8h" startline="67">mutaborGUI::xmltree::state::node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1af111263d0a6ed719dfdc7452f8fa9f0e" compoundref="d8/d53/xmltree_8h" startline="202" endline="204">SetPath</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab01d940cb089234c0d77fd5bc079b1d0" compoundref="d8/d53/xmltree_8h" startline="77">states</references>
        <references refid="de/db7/group__debug_1ga21a35e4a9e56bbe15aded747eb5a7147" compoundref="db/d16/debug_8h" startline="256">UNREACHABLEC</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a1b4a52acf7e25fc2fe96bb447630f563" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::toLeaf</definition>
        <argsstring>(const wxString &amp;name, int id)</argsstring>
        <name>toLeaf</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="156" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="213" bodyend="285"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aa5e8fb3a4679906d49af4a1aa3ea9b7a" compoundref="d8/d53/xmltree_8h" startline="78">create_tree</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a24b0861b388c7da2965a51d41c023345" compoundref="d8/d53/xmltree_8h" startline="198" endline="200">GetPath</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1af111263d0a6ed719dfdc7452f8fa9f0e" compoundref="d8/d53/xmltree_8h" startline="202" endline="204">SetPath</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab01d940cb089234c0d77fd5bc079b1d0" compoundref="d8/d53/xmltree_8h" startline="77">states</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a458d4a2454fe070d2e65e7380a448d84" compoundref="d8/d53/xmltree_8h" startline="149" endline="151">toLeaf</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a90b941ce694241dbae0fb137ab53f2e8" compoundref="d8/d53/xmltree_8h" startline="115" endline="117">Write</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a1c7d585bda642db3d81ddf843006675e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mutaborGUI::xmltree::toFirstLeaf</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>toFirstLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1adc379dccd19791db7b2cae798ecd840d">toFirstLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the first leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from. <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d18/classmutaborGUI_1_1xmltree_1a5ddab2981a96131da52ad4b3e95eaabe" kindref="member">toNextLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="157" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="157" bodyend="159"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a83e34e5e093883f97276281347428d1d" compoundref="d8/d53/xmltree_8h" startline="160" endline="167">toFirstLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a83e34e5e093883f97276281347428d1d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mutaborGUI::xmltree::toFirstLeaf</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>toFirstLeaf</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="160" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="160" bodyend="167"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a1c7d585bda642db3d81ddf843006675e" compoundref="d8/d53/xmltree_8h" startline="157" endline="159">toFirstLeaf</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a7005913f0eaeb51e80523ebd9493cf39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mutaborGUI::xmltree::toFirstLeaf</definition>
        <argsstring>(const std::string &amp;name, std::string &amp;id)</argsstring>
        <name>toFirstLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ac8c3315996067e54399dab28477c43f7">toFirstLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the first leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from.  id (std::string&amp;) reference to a String where the id of the leaf will be stored <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d18/classmutaborGUI_1_1xmltree_1a5ddab2981a96131da52ad4b3e95eaabe" kindref="member">toNextLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="168" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="168" bodyend="174"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a1c7d585bda642db3d81ddf843006675e" compoundref="d8/d53/xmltree_8h" startline="157" endline="159">toFirstLeaf</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a6cac47dd2ec69bed99f2b8ddc7b144f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int mutaborGUI::xmltree::toFirstLeaf</definition>
        <argsstring>(const wxString &amp;name, wxString &amp;id)</argsstring>
        <name>toFirstLeaf</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>wxString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="175" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="287" bodyend="304"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a458d4a2454fe070d2e65e7380a448d84" compoundref="d8/d53/xmltree_8h" startline="149" endline="151">toLeaf</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a5ddab2981a96131da52ad4b3e95eaabe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mutaborGUI::xmltree::toNextLeaf</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>toNextLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a4922f87e05292983971256720d705e19">toNextLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the next leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from. <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d18/classmutaborGUI_1_1xmltree_1a1c7d585bda642db3d81ddf843006675e" kindref="member">toFirstLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="176" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="176" bodyend="178"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a6cce68d9330c22e2cff1da684eb2b3fd" compoundref="d8/d53/xmltree_8h" startline="179" endline="187">toNextLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a6cce68d9330c22e2cff1da684eb2b3fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mutaborGUI::xmltree::toNextLeaf</definition>
        <argsstring>(const wxString &amp;name)</argsstring>
        <name>toNextLeaf</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="179" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="179" bodyend="187"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5ddab2981a96131da52ad4b3e95eaabe" compoundref="d8/d53/xmltree_8h" startline="176" endline="178">toNextLeaf</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a9cb72ac358ccc4edf8802d703c213759" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mutaborGUI::xmltree::toNextLeaf</definition>
        <argsstring>(const std::string &amp;name, std::string &amp;id)</argsstring>
        <name>toNextLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aab94221d2c1f5039dfd3d1da4d5cbd02">toNextLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the next leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from.  id (std::string&amp;) reference to a String where the id of the leaf will be stored <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="dd/d18/classmutaborGUI_1_1xmltree_1a1c7d585bda642db3d81ddf843006675e" kindref="member">toFirstLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="188" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="188" bodyend="194"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5ddab2981a96131da52ad4b3e95eaabe" compoundref="d8/d53/xmltree_8h" startline="176" endline="178">toNextLeaf</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a203b7bca1d29d824f6d96c58c0bcf545" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int mutaborGUI::xmltree::toNextLeaf</definition>
        <argsstring>(const wxString &amp;name, wxString &amp;id)</argsstring>
        <name>toNextLeaf</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>wxString &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="195" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="307" bodyend="334"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="d6/d06/structmutaborGUI_1_1xmltree_1_1state_1afd223f40d100e64c722330ed7448d03b" compoundref="d8/d53/xmltree_8h" startline="67">mutaborGUI::xmltree::state::node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab01d940cb089234c0d77fd5bc079b1d0" compoundref="d8/d53/xmltree_8h" startline="77">states</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1aa160b14a043dbfad6237702fefdcc9b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::toParent</definition>
        <argsstring>(unsigned int count=1)</argsstring>
        <name>toParent</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ac745edc6daafaae2b2fee856bfd4ecdb">toParent</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>This function jumps up in the tree (i.e. towards the root). </para>        </briefdescription>
        <detaileddescription>
<para>count (int) number of nodes to go upward. Default: 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="196" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="337" bodyend="353"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d6/d06/structmutaborGUI_1_1xmltree_1_1state_1afd223f40d100e64c722330ed7448d03b" compoundref="d8/d53/xmltree_8h" startline="67">mutaborGUI::xmltree::state::node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1ab01d940cb089234c0d77fd5bc079b1d0" compoundref="d8/d53/xmltree_8h" startline="77">states</references>
        <references refid="de/db7/group__debug_1ga21a35e4a9e56bbe15aded747eb5a7147" compoundref="db/d16/debug_8h" startline="256">UNREACHABLEC</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a24b0861b388c7da2965a51d41c023345" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>std::string</type>
        <definition>virtual std::string mutaborGUI::xmltree::GetPath</definition>
        <argsstring>()</argsstring>
        <name>GetPath</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a66b9a5fff9a5927df560a680d2f60b4c">GetPath</reimplements>
        <briefdescription>
<para>Return a string representation of the position in the current tree. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to store the current position in the tree. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>std::string</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation of the current path. The concrete representation is implementation dependent and can vary for different tree types. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="198" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="198" bodyend="200"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1af276602e32293a0608ae3a6f9e993bc6" compoundref="de/d4f/xmltree_8cpp" startline="355" endline="363">GetwxPath</references>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a0b997f435049a4960de262b5a2f64341" compoundref="de/d4f/xmltree_8cpp" startline="191" endline="211">toLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1af276602e32293a0608ae3a6f9e993bc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>wxString</type>
        <definition>wxString mutaborGUI::xmltree::GetwxPath</definition>
        <argsstring>()</argsstring>
        <name>GetwxPath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="201" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="355" bodyend="363"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a24b0861b388c7da2965a51d41c023345" compoundref="d8/d53/xmltree_8h" startline="198" endline="200">GetPath</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1af111263d0a6ed719dfdc7452f8fa9f0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::SetPath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>SetPath</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ae388ba2d4260632fa89f2ba608ce4bac">SetPath</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Set the current pointer in the tree. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to store the current position in the tree.  path (std::string) String representation of the new path as returned by <ref refid="dd/d18/classmutaborGUI_1_1xmltree_1a24b0861b388c7da2965a51d41c023345" kindref="member">GetPath()</ref>. The concrete representation is implementation dependent and can vary for different tree types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="202" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="202" bodyend="204"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1af2ef44e61e609668ee2d714cd5b56d04" compoundref="de/d4f/xmltree_8cpp" startline="445" endline="496">DeleteEntry</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a4bb478ccb9753db60c6e4617c0b3678f" compoundref="de/d4f/xmltree_8cpp" startline="498" endline="508">DeleteGroup</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1aafbf88ec887591fc18f63fa2ad6a6209" compoundref="de/d4f/xmltree_8cpp" startline="177" endline="189">HasGroup</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a0b997f435049a4960de262b5a2f64341" compoundref="de/d4f/xmltree_8cpp" startline="191" endline="211">toLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a057594187714d03c31b185e7f04fd4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::SetPath</definition>
        <argsstring>(const wxString &amp;path)</argsstring>
        <name>SetPath</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="205" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="365" bodyend="443"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aa5e8fb3a4679906d49af4a1aa3ea9b7a" compoundref="d8/d53/xmltree_8h" startline="78">create_tree</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a67adcbdffca9c5c893851d26a0be11d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::DeleteEntry</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>DeleteEntry</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a6ad845d20d99cec78dab150926cc1c7d">DeleteEntry</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Delete an entry. </para>        </briefdescription>
        <detaileddescription>
<para>entry path to the entry that shall be deleted </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="211" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1af2ef44e61e609668ee2d714cd5b56d04" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::DeleteEntry</definition>
        <argsstring>(const wxString &amp;path)</argsstring>
        <name>DeleteEntry</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="214" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="445" bodyend="496"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1af111263d0a6ed719dfdc7452f8fa9f0e" compoundref="d8/d53/xmltree_8h" startline="202" endline="204">SetPath</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a1b4ad565306db475c9584a9fc24fbd66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mutaborGUI::xmltree::DeleteGroup</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>DeleteGroup</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a98ad7ace799f9148fce1b7a7d7996a17">DeleteGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Delete an entire group with all childs. </para>        </briefdescription>
        <detaileddescription>
<para>group path to the entry that shall be deleted </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="220" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a4bb478ccb9753db60c6e4617c0b3678f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::DeleteGroup</definition>
        <argsstring>(const wxString &amp;path)</argsstring>
        <name>DeleteGroup</name>
        <param>
          <type>const wxString &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="223" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="498" bodyend="508"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aa5e8fb3a4679906d49af4a1aa3ea9b7a" compoundref="d8/d53/xmltree_8h" startline="78">create_tree</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1af111263d0a6ed719dfdc7452f8fa9f0e" compoundref="d8/d53/xmltree_8h" startline="202" endline="204">SetPath</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxXmlProperty *</type>
        <definition>wxXmlProperty * mutaborGUI::xmltree::GetProperty</definition>
        <argsstring>(wxString name, bool create)</argsstring>
        <name>GetProperty</name>
        <param>
          <type>wxString</type>
          <declname>name</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>create</declname>
        </param>
        <briefdescription>
<para>Get an XML attribute name of the node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the property. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>create</parametername>
</parameternamelist>
<parameterdescription>
<para>shall it be created?</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the corresponding object.</para></simplesect>
<simplesect kind="note"><para>as we normalize the name anyway, we copy the object during the call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="237" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="510" bodyend="540"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a7eccd35edbed709bb0f897355ba243be" compoundref="de/d4f/xmltree_8cpp" startline="66" endline="74">Read</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a54c6c584cb3450f405908b40a012470c" compoundref="de/d4f/xmltree_8cpp" startline="129" endline="134">Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1a4955b074b5a8fced688c2af3a5303c45" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxXmlProperty *</type>
        <definition>wxXmlProperty * mutaborGUI::xmltree::SetProperty</definition>
        <argsstring>(wxString name, const wxString &amp;value)</argsstring>
        <name>SetProperty</name>
        <param>
          <type>wxString</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const wxString &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Set an XML attribute of the node. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the property. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>new value</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the corresponding object.</para></simplesect>
<simplesect kind="note"><para>as we normalize the name anyway, we copy the object during the call. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="250" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="541" bodyend="573"/>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" compoundref="d8/d53/xmltree_8h" startline="80">current_node</references>
        <references refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" compoundref="de/d4f/xmltree_8cpp" startline="576" endline="578">NormalizeName</references>
      </memberdef>
      <memberdef kind="function" id="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mutaborGUI::xmltree::NormalizeName</definition>
        <argsstring>(wxString &amp;name)</argsstring>
        <name>NormalizeName</name>
        <param>
          <type>wxString &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="253" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.cpp" bodystart="576" bodyend="578"/>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" compoundref="de/d4f/xmltree_8cpp" startline="510" endline="540">GetProperty</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1aafbf88ec887591fc18f63fa2ad6a6209" compoundref="de/d4f/xmltree_8cpp" startline="177" endline="189">HasGroup</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1ad024bab622d01c601817973e5a264d8a" compoundref="de/d4f/xmltree_8cpp" startline="110" endline="127">Read</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a4955b074b5a8fced688c2af3a5303c45" compoundref="de/d4f/xmltree_8cpp" startline="541" endline="573">SetProperty</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a6cac47dd2ec69bed99f2b8ddc7b144f5" compoundref="de/d4f/xmltree_8cpp" startline="287" endline="304">toFirstLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a0b997f435049a4960de262b5a2f64341" compoundref="de/d4f/xmltree_8cpp" startline="191" endline="211">toLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a203b7bca1d29d824f6d96c58c0bcf545" compoundref="de/d4f/xmltree_8cpp" startline="307" endline="334">toNextLeaf</referencedby>
        <referencedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a97be4138936902b24440b02d72a9e966" compoundref="de/d4f/xmltree_8cpp" startline="157" endline="175">Write</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="5643">
        <label>wxXmlDocument</label>
      </node>
      <node id="5641">
        <label>mutaborGUI::xmltree</label>
        <link refid="dd/d18/classmutaborGUI_1_1xmltree"/>
        <childnode refid="5642" relation="public-inheritance">
        </childnode>
        <childnode refid="5643" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5642">
        <label>mutabor::tree_storage</label>
        <link refid="da/de5/classmutabor_1_1tree__storage"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5646">
        <label>wxXmlDocument</label>
      </node>
      <node id="5647">
        <label>std::stack&lt; mutaborGUI::xmltree::state &gt;</label>
        <childnode refid="5648" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="5644">
        <label>mutaborGUI::xmltree</label>
        <link refid="dd/d18/classmutaborGUI_1_1xmltree"/>
        <childnode refid="5645" relation="public-inheritance">
        </childnode>
        <childnode refid="5646" relation="public-inheritance">
        </childnode>
        <childnode refid="5647" relation="usage">
          <edgelabel>states</edgelabel>
        </childnode>
      </node>
      <node id="5648">
        <label>mutaborGUI::xmltree::state</label>
        <link refid="d6/d06/structmutaborGUI_1_1xmltree_1_1state"/>
      </node>
      <node id="5645">
        <label>mutabor::tree_storage</label>
        <link refid="da/de5/classmutabor_1_1tree__storage"/>
      </node>
    </collaborationgraph>
    <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="54" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="52" bodyend="256"/>
    <listofallmembers>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1aa5e8fb3a4679906d49af4a1aa3ea9b7a" prot="private" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>create_tree</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a5a1656e6f4ec5ab893dc88016a3ffea2" prot="private" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>current_node</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a67adcbdffca9c5c893851d26a0be11d4" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>DeleteEntry</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1af2ef44e61e609668ee2d714cd5b56d04" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>DeleteEntry</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a1b4ad565306db475c9584a9fc24fbd66" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>DeleteGroup</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a4bb478ccb9753db60c6e4617c0b3678f" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>DeleteGroup</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a2d683734ce8a725a45c7e3e628190ecb" prot="private" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>doc</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a24b0861b388c7da2965a51d41c023345" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>GetPath</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a22986e6cb745ca9b0cd59e1ccbcf4d2e" prot="protected" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>GetProperty</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1af276602e32293a0608ae3a6f9e993bc6" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>GetwxPath</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1addaa112284da973ac859ab91b5ceca1e" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>HasGroup</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a6a71a6a9ae0c4cc7fb806609c4a43138" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>HasGroup</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a343342a09f97294909f4d541385fdbae" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>HasGroup</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1aafbf88ec887591fc18f63fa2ad6a6209" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>HasGroup</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a8ccbe80eefd6786576ed84a7963fef84" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Load</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1aa933d64b433f892549b871ea75b9416c" prot="private" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>node_type</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1aad7ec209dcdf5b091caab254d760c706" prot="protected" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>NormalizeName</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a2c4eb00c2eca45133b11a4e3261db3b8" prot="private" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>prop_type</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1ab2e676d2b5719f0882b04e9e88352c7e" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a5b7d7cfed8e1134c4d4264b7b8337517" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a0652b0ca10a45e1292a9913b8a26ba69" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a48c52978567b936095e33c06bf75a1f2" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a7eccd35edbed709bb0f897355ba243be" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a77fdad61a5204487dc3c550a3c6eb5ec" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1afc4a108e1919780520f402ed5a00d83d" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a4ee0d3df1dfed791ca4a8b354246de45" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a1ab4c4207667b1ecb866b6e62f5580a3" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1ad024bab622d01c601817973e5a264d8a" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1afbd9481afd5350c33f211c1db801d30a" prot="public" virt="non-virtual" ambiguityscope="mutabor::tree_storage::"><scope>mutaborGUI::xmltree</scope><name>Read</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1af111263d0a6ed719dfdc7452f8fa9f0e" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>SetPath</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a057594187714d03c31b185e7f04fd4d4" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>SetPath</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a4955b074b5a8fced688c2af3a5303c45" prot="protected" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>SetProperty</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1ab01d940cb089234c0d77fd5bc079b1d0" prot="private" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>states</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a1c7d585bda642db3d81ddf843006675e" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toFirstLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a83e34e5e093883f97276281347428d1d" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toFirstLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a7005913f0eaeb51e80523ebd9493cf39" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toFirstLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a6cac47dd2ec69bed99f2b8ddc7b144f5" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toFirstLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a458d4a2454fe070d2e65e7380a448d84" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a44f62ad617d7ab83482074ac1c1445d6" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a0b997f435049a4960de262b5a2f64341" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a1b4a52acf7e25fc2fe96bb447630f563" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a5ddab2981a96131da52ad4b3e95eaabe" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toNextLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a6cce68d9330c22e2cff1da684eb2b3fd" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toNextLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a9cb72ac358ccc4edf8802d703c213759" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toNextLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a203b7bca1d29d824f6d96c58c0bcf545" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toNextLeaf</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1aa160b14a043dbfad6237702fefdcc9b4" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>toParent</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a32c5f4c75c72fc85748e4a4648ca0bff" prot="public" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>tree_storage</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a90b941ce694241dbae0fb137ab53f2e8" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a765eb8b49a8cd2c87b0f7320d97846e1" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1ac1c89b3e32618b43baf4a3f41c91e71f" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1ab88397c441add0eceee251b7ca92c701" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a54c6c584cb3450f405908b40a012470c" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a1c8569850a38f2801d2dbac6d29e0937" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a0acce7f0736518e9821405b36ce9a980" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a99d1213187809697514f7b0c9a2350cb" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1aa2ede2b861d922514dc3fe59fb2a68a9" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a97be4138936902b24440b02d72a9e966" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>Write</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a614f224434d9960a1110e21300a1c175" prot="public" virt="non-virtual"><scope>mutaborGUI::xmltree</scope><name>xmltree</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a27f2d1623e56f38ddfa4bd75ad8e7cf5" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>~tree_storage</name></member>
      <member refid="dd/d18/classmutaborGUI_1_1xmltree_1a81d18fd35e516347f3f619091c0ce96f" prot="public" virt="virtual"><scope>mutaborGUI::xmltree</scope><name>~xmltree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
