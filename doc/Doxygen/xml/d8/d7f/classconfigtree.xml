<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="d8/d7f/classconfigtree" kind="class" prot="public">
    <compoundname>configtree</compoundname>
    <basecompoundref refid="da/de5/classmutabor_1_1tree__storage" prot="public" virt="non-virtual">mutabor::tree_storage</basecompoundref>
    <includes refid="d5/d6b/configtree_8h" local="no">configtree.h</includes>
    <innerclass refid="d9/de4/structconfigtree_1_1state" prot="private">configtree::state</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" prot="private" static="no" mutable="no">
        <type>wxConfigBase *</type>
        <definition>wxConfigBase* configtree::config</definition>
        <argsstring></argsstring>
        <name>config</name>
        <briefdescription>
<para>configuration object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="53" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="53" bodyend="-1"/>
        <referencedby refid="d8/d7f/classconfigtree_1a438091cff1f3fab4faebf188a836fe5e" compoundref="d5/d6b/configtree_8h" startline="140" endline="143">DeleteEntry</referencedby>
        <referencedby refid="d8/d7f/classconfigtree_1a9e0be92b21bcd08e00882201e55a4708" compoundref="d5/d6b/configtree_8h" startline="149" endline="152">DeleteGroup</referencedby>
        <referencedby refid="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814" compoundref="d4/d26/configtree_8cpp" startline="233" endline="236">GetPath</referencedby>
        <referencedby refid="d1/d44/group__config_1gaaf915bc053977a3dfa65de95db183edd" compoundref="d4/d26/configtree_8cpp" startline="82" endline="85">HasGroup</referencedby>
        <referencedby refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">Read</referencedby>
        <referencedby refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" compoundref="d4/d26/configtree_8cpp" startline="238" endline="242">SetPath</referencedby>
        <referencedby refid="d1/d44/group__config_1ga9e81e9f5d9925568aa9f092133487e99" compoundref="d4/d26/configtree_8cpp" startline="126" endline="156">toFirstLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">toLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga7ecd104f2b17acda6c1300fc08a44b80" compoundref="d4/d26/configtree_8cpp" startline="159" endline="197">toNextLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga3b8d3fac8b8769cc93ead97d80ad0359" compoundref="d4/d26/configtree_8cpp" startline="200" endline="231">toParent</referencedby>
        <referencedby refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">Write</referencedby>
        <referencedby refid="d8/d7f/classconfigtree_1aded40700c5fba96cc14edd1850240eb5" compoundref="d5/d6b/configtree_8h" startline="85" endline="88">~configtree</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/d7f/classconfigtree_1a43773f565fcef03e028ace8cab1ffd47" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool configtree::deleteconfig</definition>
        <argsstring></argsstring>
        <name>deleteconfig</name>
        <briefdescription>
<para>true if the config is private and must be deleted on deletion </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="54" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="54" bodyend="-1"/>
        <referencedby refid="d8/d7f/classconfigtree_1aded40700c5fba96cc14edd1850240eb5" compoundref="d5/d6b/configtree_8h" startline="85" endline="88">~configtree</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" prot="private" static="no" mutable="no">
        <type>std::stack&lt; <ref refid="d9/de4/structconfigtree_1_1state" kindref="compound">state</ref> &gt;</type>
        <definition>std::stack&lt;state&gt; configtree::states</definition>
        <argsstring></argsstring>
        <name>states</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="79" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="79" bodyend="-1"/>
        <referencedby refid="d1/d44/group__config_1ga9e81e9f5d9925568aa9f092133487e99" compoundref="d4/d26/configtree_8cpp" startline="126" endline="156">toFirstLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">toLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga7ecd104f2b17acda6c1300fc08a44b80" compoundref="d4/d26/configtree_8cpp" startline="159" endline="197">toNextLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga3b8d3fac8b8769cc93ead97d80ad0359" compoundref="d4/d26/configtree_8cpp" startline="200" endline="231">toParent</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d8/d7f/classconfigtree_1af2ee639306a689da5b40f197611aac21" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>configtree::configtree</definition>
        <argsstring>(wxConfigBase *conf, bool ownconfig=false)</argsstring>
        <name>configtree</name>
        <param>
          <type>wxConfigBase *</type>
          <declname>conf</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ownconfig</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="81" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d8/d7f/classconfigtree_1aded40700c5fba96cc14edd1850240eb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual configtree::~configtree</definition>
        <argsstring>()</argsstring>
        <name>~configtree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="85" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="85" bodyend="88"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d8/d7f/classconfigtree_1a43773f565fcef03e028ace8cab1ffd47" compoundref="d5/d6b/configtree_8h" startline="54">deleteconfig</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>long configtree::Read</definition>
        <argsstring>(const std::string &amp;key, long defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aab2b2939a0c886921cb0e9708bfa156d">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a long integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (long) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="90" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="31" bodyend="34"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <referencedby refid="d1/d44/group__config_1gad96aa9797f889a9d6ecbec1eb4233f4a" compoundref="d4/d26/configtree_8cpp" startline="36" endline="39">Read</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gad96aa9797f889a9d6ecbec1eb4233f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double configtree::Read</definition>
        <argsstring>(const std::string &amp;key, double defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ad1a8dfe20676083943e78efa945cfc5a">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a double value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (double) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="91" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="36" bodyend="39"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">Read</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga529e68ab3f636c7d173f6e950c6f3d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int configtree::Read</definition>
        <argsstring>(const std::string &amp;key, int defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1abba4caa9044e3eb42090bd7f6c6ac2a9">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads an integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (int) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="92" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="41" bodyend="44"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">Read</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga6354805b32c631e30bcca58bb670d2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool configtree::Read</definition>
        <argsstring>(const std::string &amp;key, bool defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a9dc6fc8b2c07dcb47b703ef620ac50a8">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a boolean value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (bool) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="93" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="46" bodyend="49"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">Read</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gae369f7f5f1d2e2289d9e684ebf4c8bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string configtree::Read</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ab8f12d8a67c07a1f55e4661d8c865980">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a string value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (std::string&amp;) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="94" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="51" bodyend="55"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">Read</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, long value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a331885e032f43ebe53a492268bab377a">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a long integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (long) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="96" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="57" bodyend="60"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <referencedby refid="d1/d44/group__config_1gab1da141764ae067c213836568dea99c0" compoundref="d4/d26/configtree_8cpp" startline="62" endline="65">Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gab1da141764ae067c213836568dea99c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, double value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ae97b8f43989a47d65f8cafe7d744e615">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a double value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (double) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="97" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="62" bodyend="65"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">Write</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga1fab03e10498d3cf22d24fecbbe9c499" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, int value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a4911dd7c9b659cf9a08402401fa239d0">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes an integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (int) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="98" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="67" bodyend="70"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">Write</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga2db5cf35978f2f44d6ac827141367334" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, bool value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1abd598e75bd3238b94d2c58e3bd04aafc">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a boolean value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (bool) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="99" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="72" bodyend="75"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">Write</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga3821940989d496fb3812adf251761539" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a1485fda2de1bad0b29c649c00dae55f7">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a string value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (std::string&amp;) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="100" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="77" bodyend="80"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">Write</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gaaf915bc053977a3dfa65de95db183edd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool configtree::HasGroup</definition>
        <argsstring>(const std::string &amp;subdir) const </argsstring>
        <name>HasGroup</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ab94d21edc9dc97e0e1b4b11701314fe2">HasGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Checks if the tree has a branch with the given name. </para>        </briefdescription>
        <detaileddescription>
<para>subdir (std::string&amp;) subdirectory to check for. <simplesect kind="return"><para>true if the current node has a leaf with the given name which is a node itself. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="102" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="82" bodyend="85"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::toLeaf</definition>
        <argsstring>(const std::string &amp;subdir)</argsstring>
        <name>toLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aff36a4266f985cc8c5c5c4f356a63d75">toLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>subdir</declname>
        </param>
        <briefdescription>
<para>Changes the current node downwards. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered like a subdirectory in a file system.  subdir (std::string&amp;) subdirectory to be written to. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="103" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="87" bodyend="107"/>
        <references refid="d9/de4/structconfigtree_1_1state_1ad4514ef56c2bdbcb6b7c4dabd7f043f8" compoundref="d5/d6b/configtree_8h" startline="62">configtree::state::chdepth</references>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814" compoundref="d4/d26/configtree_8cpp" startline="233" endline="236">GetPath</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a323934dc786f32ba266a202b746f49ff" compoundref="d5/d6b/configtree_8h" startline="66">configtree::state::group</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a96c937da41adcfcb941a1b782e869a71" compoundref="d5/d6b/configtree_8h" startline="63">configtree::state::leafid</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a777737892758fea84c7ce5a975d175d1" compoundref="d5/d6b/configtree_8h" startline="65">configtree::state::oldpath</references>
        <references refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" compoundref="d4/d26/configtree_8cpp" startline="238" endline="242">SetPath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">states</references>
        <references refid="de/db7/group__debug_1ga21a35e4a9e56bbe15aded747eb5a7147" compoundref="db/d16/debug_8h" startline="256">UNREACHABLEC</references>
        <referencedby refid="d1/d44/group__config_1ga9e81e9f5d9925568aa9f092133487e99" compoundref="d4/d26/configtree_8cpp" startline="126" endline="156">toFirstLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1gaa68386bab67e062b52b999f7a7552784" compoundref="d4/d26/configtree_8cpp" startline="109" endline="124">toLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gaa68386bab67e062b52b999f7a7552784" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::toLeaf</definition>
        <argsstring>(const std::string &amp;name, int id)</argsstring>
        <name>toLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a3470bb3b8124602d7a2cff0c67a94f2d">toLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downwards. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id. if the id is negative, it will create a new item.  subdir (std::string&amp;) name of the entity to be written to.  id (int) id of the current object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="104" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="109" bodyend="124"/>
        <references refid="d9/de4/structconfigtree_1_1state_1ad4514ef56c2bdbcb6b7c4dabd7f043f8" compoundref="d5/d6b/configtree_8h" startline="62">configtree::state::chdepth</references>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a323934dc786f32ba266a202b746f49ff" compoundref="d5/d6b/configtree_8h" startline="66">configtree::state::group</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a96c937da41adcfcb941a1b782e869a71" compoundref="d5/d6b/configtree_8h" startline="63">configtree::state::leafid</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a777737892758fea84c7ce5a975d175d1" compoundref="d5/d6b/configtree_8h" startline="65">configtree::state::oldpath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">states</references>
        <references refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">toLeaf</references>
      </memberdef>
      <memberdef kind="function" id="d8/d7f/classconfigtree_1aa57465d8f332a55581b8af26b4de2aef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int configtree::toFirstLeaf</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>toFirstLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1adc379dccd19791db7b2cae798ecd840d">toFirstLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the first leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from. <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="d8/d7f/classconfigtree_1ac9c99afb8cda8e8cde3d7cf5b85e03bd" kindref="member">toNextLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="105" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="105" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga9e81e9f5d9925568aa9f092133487e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int configtree::toFirstLeaf</definition>
        <argsstring>(const std::string &amp;name, std::string &amp;id)</argsstring>
        <name>toFirstLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ac8c3315996067e54399dab28477c43f7">toFirstLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the first leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from.  id (std::string&amp;) reference to a String where the id of the leaf will be stored <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="d8/d7f/classconfigtree_1ac9c99afb8cda8e8cde3d7cf5b85e03bd" kindref="member">toNextLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="117" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="126" bodyend="156"/>
        <references refid="d9/de4/structconfigtree_1_1state_1ad4514ef56c2bdbcb6b7c4dabd7f043f8" compoundref="d5/d6b/configtree_8h" startline="62">configtree::state::chdepth</references>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a323934dc786f32ba266a202b746f49ff" compoundref="d5/d6b/configtree_8h" startline="66">configtree::state::group</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a96c937da41adcfcb941a1b782e869a71" compoundref="d5/d6b/configtree_8h" startline="63">configtree::state::leafid</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a777737892758fea84c7ce5a975d175d1" compoundref="d5/d6b/configtree_8h" startline="65">configtree::state::oldpath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">states</references>
        <references refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">toLeaf</references>
      </memberdef>
      <memberdef kind="function" id="d8/d7f/classconfigtree_1ac9c99afb8cda8e8cde3d7cf5b85e03bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int configtree::toNextLeaf</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>toNextLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a4922f87e05292983971256720d705e19">toNextLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the next leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from. <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="d8/d7f/classconfigtree_1aa57465d8f332a55581b8af26b4de2aef" kindref="member">toFirstLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="118" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="118" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga7ecd104f2b17acda6c1300fc08a44b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int configtree::toNextLeaf</definition>
        <argsstring>(const std::string &amp;name, std::string &amp;id)</argsstring>
        <name>toNextLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aab94221d2c1f5039dfd3d1da4d5cbd02">toNextLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the next leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from.  id (std::string&amp;) reference to a String where the id of the leaf will be stored <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="d8/d7f/classconfigtree_1aa57465d8f332a55581b8af26b4de2aef" kindref="member">toFirstLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="130" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="159" bodyend="197"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" compoundref="d4/d26/configtree_8cpp" startline="238" endline="242">SetPath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">states</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga3b8d3fac8b8769cc93ead97d80ad0359" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::toParent</definition>
        <argsstring>(unsigned int count=1)</argsstring>
        <name>toParent</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ac745edc6daafaae2b2fee856bfd4ecdb">toParent</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>This function jumps up in the tree (i.e. towards the root). </para>        </briefdescription>
        <detaileddescription>
<para>count (int) number of nodes to go upward. Default: 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="131" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="200" bodyend="231"/>
        <references refid="d9/de4/structconfigtree_1_1state_1ad4514ef56c2bdbcb6b7c4dabd7f043f8" compoundref="d5/d6b/configtree_8h" startline="62">configtree::state::chdepth</references>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a323934dc786f32ba266a202b746f49ff" compoundref="d5/d6b/configtree_8h" startline="66">configtree::state::group</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a96c937da41adcfcb941a1b782e869a71" compoundref="d5/d6b/configtree_8h" startline="63">configtree::state::leafid</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a777737892758fea84c7ce5a975d175d1" compoundref="d5/d6b/configtree_8h" startline="65">configtree::state::oldpath</references>
        <references refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" compoundref="d4/d26/configtree_8cpp" startline="238" endline="242">SetPath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">states</references>
        <references refid="de/db7/group__debug_1ga21a35e4a9e56bbe15aded747eb5a7147" compoundref="db/d16/debug_8h" startline="256">UNREACHABLEC</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string configtree::GetPath</definition>
        <argsstring>()</argsstring>
        <name>GetPath</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a66b9a5fff9a5927df560a680d2f60b4c">GetPath</reimplements>
        <briefdescription>
<para>Return a string representation of the position in the current tree. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to store the current position in the tree. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>std::string</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation of the current path. The concrete representation is implementation dependent and can vary for different tree types. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="133" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="233" bodyend="236"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <referencedby refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">toLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::SetPath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>SetPath</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ae388ba2d4260632fa89f2ba608ce4bac">SetPath</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Set the current pointer in the tree. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to store the current position in the tree.  path (std::string) String representation of the new path as returned by <ref refid="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814" kindref="member">GetPath()</ref>. The concrete representation is implementation dependent and can vary for different tree types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="134" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="238" bodyend="242"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <referencedby refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">toLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga7ecd104f2b17acda6c1300fc08a44b80" compoundref="d4/d26/configtree_8cpp" startline="159" endline="197">toNextLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga3b8d3fac8b8769cc93ead97d80ad0359" compoundref="d4/d26/configtree_8cpp" startline="200" endline="231">toParent</referencedby>
      </memberdef>
      <memberdef kind="function" id="d8/d7f/classconfigtree_1a438091cff1f3fab4faebf188a836fe5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void configtree::DeleteEntry</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>DeleteEntry</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a6ad845d20d99cec78dab150926cc1c7d">DeleteEntry</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Delete an entry. </para>        </briefdescription>
        <detaileddescription>
<para>entry path to the entry that shall be deleted </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="140" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="140" bodyend="143"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
      </memberdef>
      <memberdef kind="function" id="d8/d7f/classconfigtree_1a9e0be92b21bcd08e00882201e55a4708" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void configtree::DeleteGroup</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>DeleteGroup</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a98ad7ace799f9148fce1b7a7d7996a17">DeleteGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Delete an entire group with all childs. </para>        </briefdescription>
        <detaileddescription>
<para>group path to the entry that shall be deleted </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="149" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="149" bodyend="152"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">config</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3378">
        <label>configtree</label>
        <link refid="d8/d7f/classconfigtree"/>
        <childnode refid="3379" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3379">
        <label>mutabor::tree_storage</label>
        <link refid="da/de5/classmutabor_1_1tree__storage"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3383">
        <label>configtree::state</label>
        <link refid="d9/de4/structconfigtree_1_1state"/>
      </node>
      <node id="3382">
        <label>std::stack&lt; configtree::state &gt;</label>
        <childnode refid="3383" relation="usage">
          <edgelabel>elements</edgelabel>
        </childnode>
      </node>
      <node id="3380">
        <label>configtree</label>
        <link refid="d8/d7f/classconfigtree"/>
        <childnode refid="3381" relation="public-inheritance">
        </childnode>
        <childnode refid="3382" relation="usage">
          <edgelabel>states</edgelabel>
        </childnode>
      </node>
      <node id="3381">
        <label>mutabor::tree_storage</label>
        <link refid="da/de5/classmutabor_1_1tree__storage"/>
      </node>
    </collaborationgraph>
    <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="52" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="51" bodyend="153"/>
    <listofallmembers>
      <member refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" prot="private" virt="non-virtual"><scope>configtree</scope><name>config</name></member>
      <member refid="d8/d7f/classconfigtree_1af2ee639306a689da5b40f197611aac21" prot="public" virt="non-virtual"><scope>configtree</scope><name>configtree</name></member>
      <member refid="d8/d7f/classconfigtree_1a43773f565fcef03e028ace8cab1ffd47" prot="private" virt="non-virtual"><scope>configtree</scope><name>deleteconfig</name></member>
      <member refid="d8/d7f/classconfigtree_1a438091cff1f3fab4faebf188a836fe5e" prot="public" virt="virtual"><scope>configtree</scope><name>DeleteEntry</name></member>
      <member refid="d8/d7f/classconfigtree_1a9e0be92b21bcd08e00882201e55a4708" prot="public" virt="virtual"><scope>configtree</scope><name>DeleteGroup</name></member>
      <member refid="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814" prot="public" virt="virtual"><scope>configtree</scope><name>GetPath</name></member>
      <member refid="d1/d44/group__config_1gaaf915bc053977a3dfa65de95db183edd" prot="public" virt="virtual"><scope>configtree</scope><name>HasGroup</name></member>
      <member refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" prot="public" virt="virtual"><scope>configtree</scope><name>Read</name></member>
      <member refid="d1/d44/group__config_1gad96aa9797f889a9d6ecbec1eb4233f4a" prot="public" virt="virtual"><scope>configtree</scope><name>Read</name></member>
      <member refid="d1/d44/group__config_1ga529e68ab3f636c7d173f6e950c6f3d06" prot="public" virt="virtual"><scope>configtree</scope><name>Read</name></member>
      <member refid="d1/d44/group__config_1ga6354805b32c631e30bcca58bb670d2e2" prot="public" virt="virtual"><scope>configtree</scope><name>Read</name></member>
      <member refid="d1/d44/group__config_1gae369f7f5f1d2e2289d9e684ebf4c8bb8" prot="public" virt="virtual"><scope>configtree</scope><name>Read</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1afbd9481afd5350c33f211c1db801d30a" prot="public" virt="non-virtual" ambiguityscope="mutabor::tree_storage::"><scope>configtree</scope><name>Read</name></member>
      <member refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" prot="public" virt="virtual"><scope>configtree</scope><name>SetPath</name></member>
      <member refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" prot="private" virt="non-virtual"><scope>configtree</scope><name>states</name></member>
      <member refid="d8/d7f/classconfigtree_1aa57465d8f332a55581b8af26b4de2aef" prot="public" virt="virtual"><scope>configtree</scope><name>toFirstLeaf</name></member>
      <member refid="d1/d44/group__config_1ga9e81e9f5d9925568aa9f092133487e99" prot="public" virt="virtual"><scope>configtree</scope><name>toFirstLeaf</name></member>
      <member refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" prot="public" virt="virtual"><scope>configtree</scope><name>toLeaf</name></member>
      <member refid="d1/d44/group__config_1gaa68386bab67e062b52b999f7a7552784" prot="public" virt="virtual"><scope>configtree</scope><name>toLeaf</name></member>
      <member refid="d8/d7f/classconfigtree_1ac9c99afb8cda8e8cde3d7cf5b85e03bd" prot="public" virt="virtual"><scope>configtree</scope><name>toNextLeaf</name></member>
      <member refid="d1/d44/group__config_1ga7ecd104f2b17acda6c1300fc08a44b80" prot="public" virt="virtual"><scope>configtree</scope><name>toNextLeaf</name></member>
      <member refid="d1/d44/group__config_1ga3b8d3fac8b8769cc93ead97d80ad0359" prot="public" virt="virtual"><scope>configtree</scope><name>toParent</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a32c5f4c75c72fc85748e4a4648ca0bff" prot="public" virt="non-virtual"><scope>configtree</scope><name>tree_storage</name></member>
      <member refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" prot="public" virt="virtual"><scope>configtree</scope><name>Write</name></member>
      <member refid="d1/d44/group__config_1gab1da141764ae067c213836568dea99c0" prot="public" virt="virtual"><scope>configtree</scope><name>Write</name></member>
      <member refid="d1/d44/group__config_1ga1fab03e10498d3cf22d24fecbbe9c499" prot="public" virt="virtual"><scope>configtree</scope><name>Write</name></member>
      <member refid="d1/d44/group__config_1ga2db5cf35978f2f44d6ac827141367334" prot="public" virt="virtual"><scope>configtree</scope><name>Write</name></member>
      <member refid="d1/d44/group__config_1ga3821940989d496fb3812adf251761539" prot="public" virt="virtual"><scope>configtree</scope><name>Write</name></member>
      <member refid="d8/d7f/classconfigtree_1aded40700c5fba96cc14edd1850240eb5" prot="public" virt="virtual"><scope>configtree</scope><name>~configtree</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a27f2d1623e56f38ddfa4bd75ad8e7cf5" prot="public" virt="virtual"><scope>configtree</scope><name>~tree_storage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
