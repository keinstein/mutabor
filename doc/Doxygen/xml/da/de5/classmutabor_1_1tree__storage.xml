<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="da/de5/classmutabor_1_1tree__storage" kind="class" prot="public" abstract="yes">
    <compoundname>mutabor::tree_storage</compoundname>
    <derivedcompoundref refid="d8/d7f/classconfigtree" prot="public" virt="non-virtual">configtree</derivedcompoundref>
    <derivedcompoundref refid="dd/d18/classmutaborGUI_1_1xmltree" prot="public" virt="non-virtual">mutaborGUI::xmltree</derivedcompoundref>
    <includes refid="db/dbe/treestorage_8h" local="no">treestorage.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a32c5f4c75c72fc85748e4a4648ca0bff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mutabor::tree_storage::tree_storage</definition>
        <argsstring>()</argsstring>
        <name>tree_storage</name>
        <briefdescription>
<para>default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="64" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a27f2d1623e56f38ddfa4bd75ad8e7cf5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual mutabor::tree_storage::~tree_storage</definition>
        <argsstring>()</argsstring>
        <name>~tree_storage</name>
        <briefdescription>
<para>virtual destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="67" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1aab2b2939a0c886921cb0e9708bfa156d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>long</type>
        <definition>virtual long mutabor::tree_storage::Read</definition>
        <argsstring>(const std::string &amp;key, long defval)=0</argsstring>
        <name>Read</name>
        <reimplementedby refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3">Read</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1ab2e676d2b5719f0882b04e9e88352c7e">Read</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a long integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (long) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="75" column="1"/>
        <referencedby refid="d5/d27/classmutabor_1_1CommonFileOutputDevice_1a9119337e1ce1171453937dad0436204f" compoundref="d9/d6a/CommonFileDevice-inlines_8h" startline="72" endline="81">mutabor::CommonFileOutputDevice::Load</referencedby>
        <referencedby refid="dd/de6/classmutabor_1_1OutputGis_1a7482ffe26bfb44849c73ff441988cbdf" compoundref="db/d78/DevGIS_8cpp" startline="211" endline="218">mutabor::OutputGis::Load</referencedby>
        <referencedby refid="d5/dee/group__route_1gaa1eefe81dfc1036f5f7dd578dfb2aff8" compoundref="d8/dfb/Route_8cpp" startline="88" endline="100">mutabor::TRouteClass&lt; I, O, B &gt;::Load</referencedby>
        <referencedby refid="dd/d3c/classmutabor_1_1CommonFileInputDevice_1a1f853e58525a5ff67937c48a208b7670" compoundref="d9/d6a/CommonFileDevice-inlines_8h" startline="129" endline="138">mutabor::CommonFileInputDevice::Load</referencedby>
        <referencedby refid="df/d08/classmutaborGUI_1_1BoxData_1a952a6448ed833fabf227d2dea6d809cb" compoundref="d2/dd3/GUIBoxData_8cpp" startline="270" endline="280">mutaborGUI::BoxData::Load</referencedby>
        <referencedby refid="d7/d7b/classmutabor_1_1OutputMidiPort_1af99fc0245eac479b47629ce1a6cb07f3" compoundref="df/d8f/DevMidi_8cpp" startline="94" endline="106">mutabor::OutputMidiPort::Load</referencedby>
        <referencedby refid="d2/dea/classmutabor_1_1InputMidiPort_1a89584d87c83b2877a96fea2b46e7e7a3" compoundref="df/d8f/DevMidi_8cpp" startline="268" endline="281">mutabor::InputMidiPort::Load</referencedby>
        <referencedby refid="d5/d5f/classmutabor_1_1OutputMidiFile_1a85e0f75c86bb35421a7b780877427744" compoundref="d0/d6b/DevMidF_8cpp" startline="287" endline="295">mutabor::OutputMidiFile::Load</referencedby>
        <referencedby refid="d6/d12/classmutabor_1_1InputMidiFile_1a79fc7f29bcff21db0af9043bf00f8797" compoundref="d0/d6b/DevMidF_8cpp" startline="438" endline="516">mutabor::InputMidiFile::Load</referencedby>
        <referencedby refid="d5/dee/group__route_1gadb66e7b7d79f26402ffb5ae5c82e9bc8" compoundref="dd/dc6/Box_8cpp" startline="965" endline="985">mutabor::BoxFactory::LoadBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1ga258cd4bc238074cb6834c10248c0f3fa" compoundref="d2/dc0/Device_8cpp" startline="587" endline="618">mutabor::DeviceFactory::LoadInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gabd6e84a77a79c3ca0960442ed17f6b51" compoundref="d2/dc0/Device_8cpp" startline="534" endline="562">mutabor::DeviceFactory::LoadOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga87ced6bf8715054517f72a0dcb433d8c" compoundref="d8/dfb/Route_8cpp" startline="247" endline="278">mutabor::TRouteClass&lt; I, O, B &gt;::LoadRoutes</referencedby>
        <referencedby refid="da/de5/classmutabor_1_1tree__storage_1afbd9481afd5350c33f211c1db801d30a" compoundref="db/dbe/treestorage_8h" startline="108" endline="111">Read</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1ad1a8dfe20676083943e78efa945cfc5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double mutabor::tree_storage::Read</definition>
        <argsstring>(const std::string &amp;key, double defval)=0</argsstring>
        <name>Read</name>
        <reimplementedby refid="d1/d44/group__config_1gad96aa9797f889a9d6ecbec1eb4233f4a">Read</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a5b7d7cfed8e1134c4d4264b7b8337517">Read</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a double value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (double) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="83" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1abba4caa9044e3eb42090bd7f6c6ac2a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int mutabor::tree_storage::Read</definition>
        <argsstring>(const std::string &amp;key, int defval)=0</argsstring>
        <name>Read</name>
        <reimplementedby refid="d1/d44/group__config_1ga529e68ab3f636c7d173f6e950c6f3d06">Read</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a0652b0ca10a45e1292a9913b8a26ba69">Read</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads an integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (int) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a9dc6fc8b2c07dcb47b703ef620ac50a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool mutabor::tree_storage::Read</definition>
        <argsstring>(const std::string &amp;key, bool defval)=0</argsstring>
        <name>Read</name>
        <reimplementedby refid="d1/d44/group__config_1ga6354805b32c631e30bcca58bb670d2e2">Read</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a48c52978567b936095e33c06bf75a1f2">Read</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a boolean value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (bool) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1ab8f12d8a67c07a1f55e4661d8c865980" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string mutabor::tree_storage::Read</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;defval)=0</argsstring>
        <name>Read</name>
        <reimplementedby refid="d1/d44/group__config_1gae369f7f5f1d2e2289d9e684ebf4c8bb8">Read</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a1ab4c4207667b1ecb866b6e62f5580a3">Read</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a string value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (std::string&amp;) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1afbd9481afd5350c33f211c1db801d30a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mutabor::tree_storage::Read</definition>
        <argsstring>(const std::string &amp;key, const char *defval)</argsstring>
        <name>Read</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="108" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" bodystart="108" bodyend="111"/>
        <references refid="da/de5/classmutabor_1_1tree__storage_1aab2b2939a0c886921cb0e9708bfa156d">Read</references>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a331885e032f43ebe53a492268bab377a" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::Write</definition>
        <argsstring>(const std::string &amp;key, long value)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd">Write</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a90b941ce694241dbae0fb137ab53f2e8">Write</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a long integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (long) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="118" column="1"/>
        <referencedby refid="d5/d27/classmutabor_1_1CommonFileOutputDevice_1a572270a4299a15982d3bf858666ddba0" compoundref="d9/d6a/CommonFileDevice-inlines_8h" startline="56" endline="65">mutabor::CommonFileOutputDevice::Save</referencedby>
        <referencedby refid="dd/de6/classmutabor_1_1OutputGis_1a5238013279f1d14d5ffab06444e5952c" compoundref="db/d78/DevGIS_8cpp" startline="180" endline="187">mutabor::OutputGis::Save</referencedby>
        <referencedby refid="d5/dee/group__route_1gae3b27d9f1b4c9652482e8c8a49c2c570" compoundref="d8/dfb/Route_8cpp" startline="71" endline="85">mutabor::TRouteClass&lt; I, O, B &gt;::Save</referencedby>
        <referencedby refid="dd/d3c/classmutabor_1_1CommonFileInputDevice_1aebd2d366f92f7fcb3fda5c3ffd7fa2a3" compoundref="d9/d6a/CommonFileDevice-inlines_8h" startline="113" endline="122">mutabor::CommonFileInputDevice::Save</referencedby>
        <referencedby refid="df/d08/classmutaborGUI_1_1BoxData_1a89d8f42074f02083df8327976c6d2700" compoundref="d2/dd3/GUIBoxData_8cpp" startline="260" endline="268">mutaborGUI::BoxData::Save</referencedby>
        <referencedby refid="d7/d7b/classmutabor_1_1OutputMidiPort_1a1d648b4bb4ca5d09e987d242ab721c70" compoundref="df/d8f/DevMidi_8cpp" startline="63" endline="68">mutabor::OutputMidiPort::Save</referencedby>
        <referencedby refid="d2/dea/classmutabor_1_1InputMidiPort_1aaa4af14652364420cff3b3f045dff0c8" compoundref="df/d8f/DevMidi_8cpp" startline="224" endline="232">mutabor::InputMidiPort::Save</referencedby>
        <referencedby refid="d5/d5f/classmutabor_1_1OutputMidiFile_1a6edbcd23203804c50bf66e0c50cb357f" compoundref="d0/d6b/DevMidF_8cpp" startline="253" endline="261">mutabor::OutputMidiFile::Save</referencedby>
        <referencedby refid="d6/d12/classmutabor_1_1InputMidiFile_1a6146930f86cbd9c73933d50c1543fcc7" compoundref="d0/d6b/DevMidF_8cpp" startline="406" endline="428">mutabor::InputMidiFile::Save</referencedby>
        <referencedby refid="d5/dee/group__route_1gac12082bf0a070d44b66f36e28cfa11bd" compoundref="dd/dc6/Box_8cpp" startline="987" endline="1008">mutabor::BoxFactory::SaveBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1gae8161f3d5d3a0cbb02c724b6d8515e53" compoundref="d2/dc0/Device_8cpp" startline="620" endline="642">mutabor::DeviceFactory::SaveInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga4e80ba5e5d5fb69eba97cd43d9ffbd95" compoundref="d2/dc0/Device_8cpp" startline="564" endline="585">mutabor::DeviceFactory::SaveOutputDevices</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1ae97b8f43989a47d65f8cafe7d744e615" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::Write</definition>
        <argsstring>(const std::string &amp;key, double value)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="d1/d44/group__config_1gab1da141764ae067c213836568dea99c0">Write</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a765eb8b49a8cd2c87b0f7320d97846e1">Write</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a double value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (double) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a4911dd7c9b659cf9a08402401fa239d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::Write</definition>
        <argsstring>(const std::string &amp;key, int value)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="d1/d44/group__config_1ga1fab03e10498d3cf22d24fecbbe9c499">Write</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1ac1c89b3e32618b43baf4a3f41c91e71f">Write</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes an integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (int) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1abd598e75bd3238b94d2c58e3bd04aafc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::Write</definition>
        <argsstring>(const std::string &amp;key, bool value)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="d1/d44/group__config_1ga2db5cf35978f2f44d6ac827141367334">Write</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1ab88397c441add0eceee251b7ca92c701">Write</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a boolean value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (bool) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a1485fda2de1bad0b29c649c00dae55f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::Write</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="d1/d44/group__config_1ga3821940989d496fb3812adf251761539">Write</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1aa2ede2b861d922514dc3fe59fb2a68a9">Write</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a string value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (std::string&amp;) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1ab94d21edc9dc97e0e1b4b11701314fe2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool mutabor::tree_storage::HasGroup</definition>
        <argsstring>(const std::string &amp;) const =0</argsstring>
        <name>HasGroup</name>
        <reimplementedby refid="d1/d44/group__config_1gaaf915bc053977a3dfa65de95db183edd">HasGroup</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1addaa112284da973ac859ab91b5ceca1e">HasGroup</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Checks if the tree has a branch with the given name. </para>        </briefdescription>
        <detaileddescription>
<para>subdir (std::string&amp;) subdirectory to check for. <simplesect kind="return"><para>true if the current node has a leaf with the given name which is a node itself. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1aff36a4266f985cc8c5c5c4f356a63d75" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::toLeaf</definition>
        <argsstring>(const std::string &amp;subdir)=0</argsstring>
        <name>toLeaf</name>
        <reimplementedby refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347">toLeaf</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a458d4a2454fe070d2e65e7380a448d84">toLeaf</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>subdir</declname>
        </param>
        <briefdescription>
<para>Changes the current node downwards. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered like a subdirectory in a file system.  subdir (std::string&amp;) subdirectory to be written to. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="160" column="1"/>
        <referencedby refid="d5/dee/group__route_1gae7d8b2c6ad14d3d94718377969abcd8c" compoundref="d8/dfb/Route_8cpp" startline="573" endline="587">mutabor::RouteFactory::DoLoadRoutes</referencedby>
        <referencedby refid="d5/dee/group__route_1gaf17cf4768d8fb8cc93dc827b40153605" compoundref="d8/dfb/Route_8cpp" startline="589" endline="612">mutabor::RouteFactory::DoSaveRoutes</referencedby>
        <referencedby refid="dd/de6/classmutabor_1_1OutputGis_1af5a4bcf7fc9f5efc60db5db8a5dbebaf" compoundref="db/d78/DevGIS_8cpp" startline="226" endline="236">mutabor::OutputGis::Load</referencedby>
        <referencedby refid="dc/da1/classmutabor_1_1InputGis_1ac67841f0c9bae7577c4260994e0135fc" compoundref="db/d78/DevGIS_8cpp" startline="269" endline="278">mutabor::InputGis::Load</referencedby>
        <referencedby refid="d7/d7b/classmutabor_1_1OutputMidiPort_1a64108f9c014fde8f01bfbcb7ae97313f" compoundref="df/d8f/DevMidi_8cpp" startline="114" endline="149">mutabor::OutputMidiPort::Load</referencedby>
        <referencedby refid="d2/dea/classmutabor_1_1InputMidiPort_1a99976206c63a46dc0874925920a33ddb" compoundref="df/d8f/DevMidi_8cpp" startline="289" endline="365">mutabor::InputMidiPort::Load</referencedby>
        <referencedby refid="d5/d5f/classmutabor_1_1OutputMidiFile_1a292e5e82cd90d703c12a081ca7b3ec0e" compoundref="d0/d6b/DevMidF_8cpp" startline="303" endline="337">mutabor::OutputMidiFile::Load</referencedby>
        <referencedby refid="d6/d12/classmutabor_1_1InputMidiFile_1a79fc7f29bcff21db0af9043bf00f8797" compoundref="d0/d6b/DevMidF_8cpp" startline="438" endline="516">mutabor::InputMidiFile::Load</referencedby>
        <referencedby refid="d5/dee/group__route_1gadb66e7b7d79f26402ffb5ae5c82e9bc8" compoundref="dd/dc6/Box_8cpp" startline="965" endline="985">mutabor::BoxFactory::LoadBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1ga258cd4bc238074cb6834c10248c0f3fa" compoundref="d2/dc0/Device_8cpp" startline="587" endline="618">mutabor::DeviceFactory::LoadInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gabd6e84a77a79c3ca0960442ed17f6b51" compoundref="d2/dc0/Device_8cpp" startline="534" endline="562">mutabor::DeviceFactory::LoadOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga87ced6bf8715054517f72a0dcb433d8c" compoundref="d8/dfb/Route_8cpp" startline="247" endline="278">mutabor::TRouteClass&lt; I, O, B &gt;::LoadRoutes</referencedby>
        <referencedby refid="dd/de6/classmutabor_1_1OutputGis_1ad7b49c55c64964b95fccd580f2b27771" compoundref="db/d78/DevGIS_8cpp" startline="195" endline="205">mutabor::OutputGis::Save</referencedby>
        <referencedby refid="dc/da1/classmutabor_1_1InputGis_1ac8990a1c448400d582db2fc4b9262169" compoundref="db/d78/DevGIS_8cpp" startline="252" endline="261">mutabor::InputGis::Save</referencedby>
        <referencedby refid="d7/d7b/classmutabor_1_1OutputMidiPort_1a34c460bc0275c3a6708dd837e50e3bbe" compoundref="df/d8f/DevMidi_8cpp" startline="76" endline="89">mutabor::OutputMidiPort::Save</referencedby>
        <referencedby refid="d2/dea/classmutabor_1_1InputMidiPort_1aa1052c5c84b7b2d1119b719a971fc7ef" compoundref="df/d8f/DevMidi_8cpp" startline="240" endline="262">mutabor::InputMidiPort::Save</referencedby>
        <referencedby refid="d5/d5f/classmutabor_1_1OutputMidiFile_1ae0aa8de74b9cbe7c5906b0a2d433cdce" compoundref="d0/d6b/DevMidF_8cpp" startline="269" endline="281">mutabor::OutputMidiFile::Save</referencedby>
        <referencedby refid="d6/d12/classmutabor_1_1InputMidiFile_1a6146930f86cbd9c73933d50c1543fcc7" compoundref="d0/d6b/DevMidF_8cpp" startline="406" endline="428">mutabor::InputMidiFile::Save</referencedby>
        <referencedby refid="d5/dee/group__route_1gac12082bf0a070d44b66f36e28cfa11bd" compoundref="dd/dc6/Box_8cpp" startline="987" endline="1008">mutabor::BoxFactory::SaveBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1gae8161f3d5d3a0cbb02c724b6d8515e53" compoundref="d2/dc0/Device_8cpp" startline="620" endline="642">mutabor::DeviceFactory::SaveInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga4e80ba5e5d5fb69eba97cd43d9ffbd95" compoundref="d2/dc0/Device_8cpp" startline="564" endline="585">mutabor::DeviceFactory::SaveOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gad17e61b049b311b1878679297b324cc9" compoundref="d8/dfb/Route_8cpp" startline="227" endline="244">mutabor::TRouteClass&lt; I, O, B &gt;::SaveRoutes</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a3470bb3b8124602d7a2cff0c67a94f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::toLeaf</definition>
        <argsstring>(const std::string &amp;name, int id)=0</argsstring>
        <name>toLeaf</name>
        <reimplementedby refid="d1/d44/group__config_1gaa68386bab67e062b52b999f7a7552784">toLeaf</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a44f62ad617d7ab83482074ac1c1445d6">toLeaf</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downwards. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id. if the id is negative, it will create a new item.  subdir (std::string&amp;) name of the entity to be written to.  id (int) id of the current object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1adc379dccd19791db7b2cae798ecd840d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int mutabor::tree_storage::toFirstLeaf</definition>
        <argsstring>(const std::string &amp;name)=0</argsstring>
        <name>toFirstLeaf</name>
        <reimplementedby refid="d8/d7f/classconfigtree_1aa57465d8f332a55581b8af26b4de2aef">toFirstLeaf</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a1c7d585bda642db3d81ddf843006675e">toFirstLeaf</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the first leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from. <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="da/de5/classmutabor_1_1tree__storage_1a4922f87e05292983971256720d705e19" kindref="member">toNextLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="178" column="1"/>
        <referencedby refid="d5/dee/group__route_1gadb66e7b7d79f26402ffb5ae5c82e9bc8" compoundref="dd/dc6/Box_8cpp" startline="965" endline="985">mutabor::BoxFactory::LoadBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1ga258cd4bc238074cb6834c10248c0f3fa" compoundref="d2/dc0/Device_8cpp" startline="587" endline="618">mutabor::DeviceFactory::LoadInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gabd6e84a77a79c3ca0960442ed17f6b51" compoundref="d2/dc0/Device_8cpp" startline="534" endline="562">mutabor::DeviceFactory::LoadOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga87ced6bf8715054517f72a0dcb433d8c" compoundref="d8/dfb/Route_8cpp" startline="247" endline="278">mutabor::TRouteClass&lt; I, O, B &gt;::LoadRoutes</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1ac8c3315996067e54399dab28477c43f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int mutabor::tree_storage::toFirstLeaf</definition>
        <argsstring>(const std::string &amp;name, std::string &amp;id)=0</argsstring>
        <name>toFirstLeaf</name>
        <reimplementedby refid="d1/d44/group__config_1ga9e81e9f5d9925568aa9f092133487e99">toFirstLeaf</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a7005913f0eaeb51e80523ebd9493cf39">toFirstLeaf</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the first leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from.  id (std::string&amp;) reference to a String where the id of the leaf will be stored <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="da/de5/classmutabor_1_1tree__storage_1a4922f87e05292983971256720d705e19" kindref="member">toNextLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a4922f87e05292983971256720d705e19" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int mutabor::tree_storage::toNextLeaf</definition>
        <argsstring>(const std::string &amp;name)=0</argsstring>
        <name>toNextLeaf</name>
        <reimplementedby refid="d8/d7f/classconfigtree_1ac9c99afb8cda8e8cde3d7cf5b85e03bd">toNextLeaf</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a5ddab2981a96131da52ad4b3e95eaabe">toNextLeaf</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the next leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from. <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="da/de5/classmutabor_1_1tree__storage_1adc379dccd19791db7b2cae798ecd840d" kindref="member">toFirstLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="198" column="1"/>
        <referencedby refid="d5/dee/group__route_1gadb66e7b7d79f26402ffb5ae5c82e9bc8" compoundref="dd/dc6/Box_8cpp" startline="965" endline="985">mutabor::BoxFactory::LoadBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1ga258cd4bc238074cb6834c10248c0f3fa" compoundref="d2/dc0/Device_8cpp" startline="587" endline="618">mutabor::DeviceFactory::LoadInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gabd6e84a77a79c3ca0960442ed17f6b51" compoundref="d2/dc0/Device_8cpp" startline="534" endline="562">mutabor::DeviceFactory::LoadOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga87ced6bf8715054517f72a0dcb433d8c" compoundref="d8/dfb/Route_8cpp" startline="247" endline="278">mutabor::TRouteClass&lt; I, O, B &gt;::LoadRoutes</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1aab94221d2c1f5039dfd3d1da4d5cbd02" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>int</type>
        <definition>virtual int mutabor::tree_storage::toNextLeaf</definition>
        <argsstring>(const std::string &amp;name, std::string &amp;id)=0</argsstring>
        <name>toNextLeaf</name>
        <reimplementedby refid="d1/d44/group__config_1ga7ecd104f2b17acda6c1300fc08a44b80">toNextLeaf</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a9cb72ac358ccc4edf8802d703c213759">toNextLeaf</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the next leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from.  id (std::string&amp;) reference to a String where the id of the leaf will be stored <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="da/de5/classmutabor_1_1tree__storage_1adc379dccd19791db7b2cae798ecd840d" kindref="member">toFirstLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1ac745edc6daafaae2b2fee856bfd4ecdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::toParent</definition>
        <argsstring>(unsigned int count=1)=0</argsstring>
        <name>toParent</name>
        <reimplementedby refid="d1/d44/group__config_1ga3b8d3fac8b8769cc93ead97d80ad0359">toParent</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1aa160b14a043dbfad6237702fefdcc9b4">toParent</reimplementedby>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>This function jumps up in the tree (i.e. towards the root). </para>        </briefdescription>
        <detaileddescription>
<para>count (int) number of nodes to go upward. Default: 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="214" column="1"/>
        <referencedby refid="d5/dee/group__route_1gae7d8b2c6ad14d3d94718377969abcd8c" compoundref="d8/dfb/Route_8cpp" startline="573" endline="587">mutabor::RouteFactory::DoLoadRoutes</referencedby>
        <referencedby refid="d5/dee/group__route_1gaf17cf4768d8fb8cc93dc827b40153605" compoundref="d8/dfb/Route_8cpp" startline="589" endline="612">mutabor::RouteFactory::DoSaveRoutes</referencedby>
        <referencedby refid="dd/de6/classmutabor_1_1OutputGis_1af5a4bcf7fc9f5efc60db5db8a5dbebaf" compoundref="db/d78/DevGIS_8cpp" startline="226" endline="236">mutabor::OutputGis::Load</referencedby>
        <referencedby refid="dc/da1/classmutabor_1_1InputGis_1ac67841f0c9bae7577c4260994e0135fc" compoundref="db/d78/DevGIS_8cpp" startline="269" endline="278">mutabor::InputGis::Load</referencedby>
        <referencedby refid="d7/d7b/classmutabor_1_1OutputMidiPort_1a64108f9c014fde8f01bfbcb7ae97313f" compoundref="df/d8f/DevMidi_8cpp" startline="114" endline="149">mutabor::OutputMidiPort::Load</referencedby>
        <referencedby refid="d2/dea/classmutabor_1_1InputMidiPort_1a99976206c63a46dc0874925920a33ddb" compoundref="df/d8f/DevMidi_8cpp" startline="289" endline="365">mutabor::InputMidiPort::Load</referencedby>
        <referencedby refid="d5/d5f/classmutabor_1_1OutputMidiFile_1a292e5e82cd90d703c12a081ca7b3ec0e" compoundref="d0/d6b/DevMidF_8cpp" startline="303" endline="337">mutabor::OutputMidiFile::Load</referencedby>
        <referencedby refid="d6/d12/classmutabor_1_1InputMidiFile_1a79fc7f29bcff21db0af9043bf00f8797" compoundref="d0/d6b/DevMidF_8cpp" startline="438" endline="516">mutabor::InputMidiFile::Load</referencedby>
        <referencedby refid="d5/dee/group__route_1gadb66e7b7d79f26402ffb5ae5c82e9bc8" compoundref="dd/dc6/Box_8cpp" startline="965" endline="985">mutabor::BoxFactory::LoadBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1ga258cd4bc238074cb6834c10248c0f3fa" compoundref="d2/dc0/Device_8cpp" startline="587" endline="618">mutabor::DeviceFactory::LoadInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gabd6e84a77a79c3ca0960442ed17f6b51" compoundref="d2/dc0/Device_8cpp" startline="534" endline="562">mutabor::DeviceFactory::LoadOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga87ced6bf8715054517f72a0dcb433d8c" compoundref="d8/dfb/Route_8cpp" startline="247" endline="278">mutabor::TRouteClass&lt; I, O, B &gt;::LoadRoutes</referencedby>
        <referencedby refid="dd/de6/classmutabor_1_1OutputGis_1ad7b49c55c64964b95fccd580f2b27771" compoundref="db/d78/DevGIS_8cpp" startline="195" endline="205">mutabor::OutputGis::Save</referencedby>
        <referencedby refid="dc/da1/classmutabor_1_1InputGis_1ac8990a1c448400d582db2fc4b9262169" compoundref="db/d78/DevGIS_8cpp" startline="252" endline="261">mutabor::InputGis::Save</referencedby>
        <referencedby refid="d7/d7b/classmutabor_1_1OutputMidiPort_1a34c460bc0275c3a6708dd837e50e3bbe" compoundref="df/d8f/DevMidi_8cpp" startline="76" endline="89">mutabor::OutputMidiPort::Save</referencedby>
        <referencedby refid="d2/dea/classmutabor_1_1InputMidiPort_1aa1052c5c84b7b2d1119b719a971fc7ef" compoundref="df/d8f/DevMidi_8cpp" startline="240" endline="262">mutabor::InputMidiPort::Save</referencedby>
        <referencedby refid="d5/d5f/classmutabor_1_1OutputMidiFile_1ae0aa8de74b9cbe7c5906b0a2d433cdce" compoundref="d0/d6b/DevMidF_8cpp" startline="269" endline="281">mutabor::OutputMidiFile::Save</referencedby>
        <referencedby refid="d6/d12/classmutabor_1_1InputMidiFile_1a6146930f86cbd9c73933d50c1543fcc7" compoundref="d0/d6b/DevMidF_8cpp" startline="406" endline="428">mutabor::InputMidiFile::Save</referencedby>
        <referencedby refid="d5/dee/group__route_1gac12082bf0a070d44b66f36e28cfa11bd" compoundref="dd/dc6/Box_8cpp" startline="987" endline="1008">mutabor::BoxFactory::SaveBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1gae8161f3d5d3a0cbb02c724b6d8515e53" compoundref="d2/dc0/Device_8cpp" startline="620" endline="642">mutabor::DeviceFactory::SaveInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga4e80ba5e5d5fb69eba97cd43d9ffbd95" compoundref="d2/dc0/Device_8cpp" startline="564" endline="585">mutabor::DeviceFactory::SaveOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gad17e61b049b311b1878679297b324cc9" compoundref="d8/dfb/Route_8cpp" startline="227" endline="244">mutabor::TRouteClass&lt; I, O, B &gt;::SaveRoutes</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a66b9a5fff9a5927df560a680d2f60b4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string mutabor::tree_storage::GetPath</definition>
        <argsstring>()=0</argsstring>
        <name>GetPath</name>
        <reimplementedby refid="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814">GetPath</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a24b0861b388c7da2965a51d41c023345">GetPath</reimplementedby>
        <briefdescription>
<para>Return a string representation of the position in the current tree. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to store the current position in the tree. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>std::string</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation of the current path. The concrete representation is implementation dependent and can vary for different tree types. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="222" column="1"/>
        <referencedby refid="d5/dee/group__route_1gae7d8b2c6ad14d3d94718377969abcd8c" compoundref="d8/dfb/Route_8cpp" startline="573" endline="587">mutabor::RouteFactory::DoLoadRoutes</referencedby>
        <referencedby refid="d5/dee/group__route_1gaf17cf4768d8fb8cc93dc827b40153605" compoundref="d8/dfb/Route_8cpp" startline="589" endline="612">mutabor::RouteFactory::DoSaveRoutes</referencedby>
        <referencedby refid="d5/d27/classmutabor_1_1CommonFileOutputDevice_1a9119337e1ce1171453937dad0436204f" compoundref="d9/d6a/CommonFileDevice-inlines_8h" startline="72" endline="81">mutabor::CommonFileOutputDevice::Load</referencedby>
        <referencedby refid="dd/de6/classmutabor_1_1OutputGis_1a7482ffe26bfb44849c73ff441988cbdf" compoundref="db/d78/DevGIS_8cpp" startline="211" endline="218">mutabor::OutputGis::Load</referencedby>
        <referencedby refid="d5/dee/group__route_1gaa1eefe81dfc1036f5f7dd578dfb2aff8" compoundref="d8/dfb/Route_8cpp" startline="88" endline="100">mutabor::TRouteClass&lt; I, O, B &gt;::Load</referencedby>
        <referencedby refid="dd/d3c/classmutabor_1_1CommonFileInputDevice_1a1f853e58525a5ff67937c48a208b7670" compoundref="d9/d6a/CommonFileDevice-inlines_8h" startline="129" endline="138">mutabor::CommonFileInputDevice::Load</referencedby>
        <referencedby refid="dc/da1/classmutabor_1_1InputGis_1ac67841f0c9bae7577c4260994e0135fc" compoundref="db/d78/DevGIS_8cpp" startline="269" endline="278">mutabor::InputGis::Load</referencedby>
        <referencedby refid="d7/d7b/classmutabor_1_1OutputMidiPort_1af99fc0245eac479b47629ce1a6cb07f3" compoundref="df/d8f/DevMidi_8cpp" startline="94" endline="106">mutabor::OutputMidiPort::Load</referencedby>
        <referencedby refid="d2/dea/classmutabor_1_1InputMidiPort_1a89584d87c83b2877a96fea2b46e7e7a3" compoundref="df/d8f/DevMidi_8cpp" startline="268" endline="281">mutabor::InputMidiPort::Load</referencedby>
        <referencedby refid="d5/d5f/classmutabor_1_1OutputMidiFile_1a85e0f75c86bb35421a7b780877427744" compoundref="d0/d6b/DevMidF_8cpp" startline="287" endline="295">mutabor::OutputMidiFile::Load</referencedby>
        <referencedby refid="d6/d12/classmutabor_1_1InputMidiFile_1a79fc7f29bcff21db0af9043bf00f8797" compoundref="d0/d6b/DevMidF_8cpp" startline="438" endline="516">mutabor::InputMidiFile::Load</referencedby>
        <referencedby refid="d5/dee/group__route_1gadb66e7b7d79f26402ffb5ae5c82e9bc8" compoundref="dd/dc6/Box_8cpp" startline="965" endline="985">mutabor::BoxFactory::LoadBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1ga258cd4bc238074cb6834c10248c0f3fa" compoundref="d2/dc0/Device_8cpp" startline="587" endline="618">mutabor::DeviceFactory::LoadInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gabd6e84a77a79c3ca0960442ed17f6b51" compoundref="d2/dc0/Device_8cpp" startline="534" endline="562">mutabor::DeviceFactory::LoadOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga87ced6bf8715054517f72a0dcb433d8c" compoundref="d8/dfb/Route_8cpp" startline="247" endline="278">mutabor::TRouteClass&lt; I, O, B &gt;::LoadRoutes</referencedby>
        <referencedby refid="d5/d27/classmutabor_1_1CommonFileOutputDevice_1a572270a4299a15982d3bf858666ddba0" compoundref="d9/d6a/CommonFileDevice-inlines_8h" startline="56" endline="65">mutabor::CommonFileOutputDevice::Save</referencedby>
        <referencedby refid="dd/de6/classmutabor_1_1OutputGis_1a5238013279f1d14d5ffab06444e5952c" compoundref="db/d78/DevGIS_8cpp" startline="180" endline="187">mutabor::OutputGis::Save</referencedby>
        <referencedby refid="d5/dee/group__route_1gae3b27d9f1b4c9652482e8c8a49c2c570" compoundref="d8/dfb/Route_8cpp" startline="71" endline="85">mutabor::TRouteClass&lt; I, O, B &gt;::Save</referencedby>
        <referencedby refid="dd/d3c/classmutabor_1_1CommonFileInputDevice_1aebd2d366f92f7fcb3fda5c3ffd7fa2a3" compoundref="d9/d6a/CommonFileDevice-inlines_8h" startline="113" endline="122">mutabor::CommonFileInputDevice::Save</referencedby>
        <referencedby refid="dc/da1/classmutabor_1_1InputGis_1ac8990a1c448400d582db2fc4b9262169" compoundref="db/d78/DevGIS_8cpp" startline="252" endline="261">mutabor::InputGis::Save</referencedby>
        <referencedby refid="d7/d7b/classmutabor_1_1OutputMidiPort_1a34c460bc0275c3a6708dd837e50e3bbe" compoundref="df/d8f/DevMidi_8cpp" startline="76" endline="89">mutabor::OutputMidiPort::Save</referencedby>
        <referencedby refid="d2/dea/classmutabor_1_1InputMidiPort_1aaa4af14652364420cff3b3f045dff0c8" compoundref="df/d8f/DevMidi_8cpp" startline="224" endline="232">mutabor::InputMidiPort::Save</referencedby>
        <referencedby refid="d5/d5f/classmutabor_1_1OutputMidiFile_1a6edbcd23203804c50bf66e0c50cb357f" compoundref="d0/d6b/DevMidF_8cpp" startline="253" endline="261">mutabor::OutputMidiFile::Save</referencedby>
        <referencedby refid="d6/d12/classmutabor_1_1InputMidiFile_1a6146930f86cbd9c73933d50c1543fcc7" compoundref="d0/d6b/DevMidF_8cpp" startline="406" endline="428">mutabor::InputMidiFile::Save</referencedby>
        <referencedby refid="d5/dee/group__route_1gac12082bf0a070d44b66f36e28cfa11bd" compoundref="dd/dc6/Box_8cpp" startline="987" endline="1008">mutabor::BoxFactory::SaveBoxes</referencedby>
        <referencedby refid="d5/dee/group__route_1gae8161f3d5d3a0cbb02c724b6d8515e53" compoundref="d2/dc0/Device_8cpp" startline="620" endline="642">mutabor::DeviceFactory::SaveInputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1ga4e80ba5e5d5fb69eba97cd43d9ffbd95" compoundref="d2/dc0/Device_8cpp" startline="564" endline="585">mutabor::DeviceFactory::SaveOutputDevices</referencedby>
        <referencedby refid="d5/dee/group__route_1gad17e61b049b311b1878679297b324cc9" compoundref="d8/dfb/Route_8cpp" startline="227" endline="244">mutabor::TRouteClass&lt; I, O, B &gt;::SaveRoutes</referencedby>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1ae388ba2d4260632fa89f2ba608ce4bac" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::SetPath</definition>
        <argsstring>(const std::string &amp;path)=0</argsstring>
        <name>SetPath</name>
        <reimplementedby refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1">SetPath</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1af111263d0a6ed719dfdc7452f8fa9f0e">SetPath</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Set the current pointer in the tree. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to store the current position in the tree.  path (std::string) String representation of the new path as returned by <ref refid="da/de5/classmutabor_1_1tree__storage_1a66b9a5fff9a5927df560a680d2f60b4c" kindref="member">GetPath()</ref>. The concrete representation is implementation dependent and can vary for different tree types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a6ad845d20d99cec78dab150926cc1c7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::DeleteEntry</definition>
        <argsstring>(const std::string &amp;path)=0</argsstring>
        <name>DeleteEntry</name>
        <reimplementedby refid="d8/d7f/classconfigtree_1a438091cff1f3fab4faebf188a836fe5e">DeleteEntry</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a67adcbdffca9c5c893851d26a0be11d4">DeleteEntry</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Delete an entry. </para>        </briefdescription>
        <detaileddescription>
<para>entry path to the entry that shall be deleted </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="236" column="1"/>
      </memberdef>
      <memberdef kind="function" id="da/de5/classmutabor_1_1tree__storage_1a98ad7ace799f9148fce1b7a7d7996a17" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mutabor::tree_storage::DeleteGroup</definition>
        <argsstring>(const std::string &amp;path)=0</argsstring>
        <name>DeleteGroup</name>
        <reimplementedby refid="d8/d7f/classconfigtree_1a9e0be92b21bcd08e00882201e55a4708">DeleteGroup</reimplementedby>
        <reimplementedby refid="dd/d18/classmutaborGUI_1_1xmltree_1a1b4ad565306db475c9584a9fc24fbd66">DeleteGroup</reimplementedby>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Delete an entire group with all childs. </para>        </briefdescription>
        <detaileddescription>
<para>group path to the entry that shall be deleted </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="242" column="1"/>
        <referencedby refid="d5/dee/group__route_1gaf17cf4768d8fb8cc93dc827b40153605" compoundref="d8/dfb/Route_8cpp" startline="589" endline="612">mutabor::RouteFactory::DoSaveRoutes</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Class <ref refid="da/de5/classmutabor_1_1tree__storage" kindref="compound">tree_storage</ref> proviedes an interface for classes providing tree based storage. </para>    </briefdescription>
    <detaileddescription>
<para>This class is an abstract class. subclass it to provide some storage technology, which can be used for routing and other options. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5543">
        <label>configtree</label>
        <link refid="d8/d7f/classconfigtree"/>
        <childnode refid="5542" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5544">
        <label>mutaborGUI::xmltree</label>
        <link refid="dd/d18/classmutaborGUI_1_1xmltree"/>
        <childnode refid="5542" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5542">
        <label>mutabor::tree_storage</label>
        <link refid="da/de5/classmutabor_1_1tree__storage"/>
      </node>
    </inheritancegraph>
    <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="61" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" bodystart="60" bodyend="243"/>
    <listofallmembers>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a6ad845d20d99cec78dab150926cc1c7d" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>DeleteEntry</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a98ad7ace799f9148fce1b7a7d7996a17" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>DeleteGroup</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a66b9a5fff9a5927df560a680d2f60b4c" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>GetPath</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1ab94d21edc9dc97e0e1b4b11701314fe2" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>HasGroup</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1aab2b2939a0c886921cb0e9708bfa156d" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Read</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1ad1a8dfe20676083943e78efa945cfc5a" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Read</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1abba4caa9044e3eb42090bd7f6c6ac2a9" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Read</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a9dc6fc8b2c07dcb47b703ef620ac50a8" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Read</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1ab8f12d8a67c07a1f55e4661d8c865980" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Read</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1afbd9481afd5350c33f211c1db801d30a" prot="public" virt="non-virtual"><scope>mutabor::tree_storage</scope><name>Read</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1ae388ba2d4260632fa89f2ba608ce4bac" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>SetPath</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1adc379dccd19791db7b2cae798ecd840d" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>toFirstLeaf</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1ac8c3315996067e54399dab28477c43f7" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>toFirstLeaf</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1aff36a4266f985cc8c5c5c4f356a63d75" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>toLeaf</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a3470bb3b8124602d7a2cff0c67a94f2d" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>toLeaf</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a4922f87e05292983971256720d705e19" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>toNextLeaf</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1aab94221d2c1f5039dfd3d1da4d5cbd02" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>toNextLeaf</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1ac745edc6daafaae2b2fee856bfd4ecdb" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>toParent</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a32c5f4c75c72fc85748e4a4648ca0bff" prot="public" virt="non-virtual"><scope>mutabor::tree_storage</scope><name>tree_storage</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a331885e032f43ebe53a492268bab377a" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Write</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1ae97b8f43989a47d65f8cafe7d744e615" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Write</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a4911dd7c9b659cf9a08402401fa239d0" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Write</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1abd598e75bd3238b94d2c58e3bd04aafc" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Write</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a1485fda2de1bad0b29c649c00dae55f7" prot="public" virt="pure-virtual"><scope>mutabor::tree_storage</scope><name>Write</name></member>
      <member refid="da/de5/classmutabor_1_1tree__storage_1a27f2d1623e56f38ddfa4bd75ad8e7cf5" prot="public" virt="virtual"><scope>mutabor::tree_storage</scope><name>~tree_storage</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
