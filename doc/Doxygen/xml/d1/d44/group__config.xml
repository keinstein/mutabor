<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="d1/d44/group__config" kind="group">
    <compoundname>config</compoundname>
    <title>Configuration system</title>
    <innerclass refid="d8/d7f/classconfigtree" prot="public">configtree</innerclass>
    <innernamespace refid="d6/daa/namespacemutabor">mutabor</innernamespace>
    <innernamespace refid="db/d94/namespacemutaborGUI">mutaborGUI</innernamespace>
      <sectiondef kind="func">
      <memberdef kind="function" id="d1/d44/group__config_1ga4747a75b047bbe12eb19098def8568ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void LoadRoutes</definition>
        <argsstring>(wxConfigBase *config)</argsstring>
        <name>LoadRoutes</name>
        <param>
          <type>wxConfigBase *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="155" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="155" bodyend="159"/>
        <references refid="d5/dee/group__route_1ga8ffdbcbb93567fd8aea32fcb8a09bafe" compoundref="d1/d65/Route_8h" startline="656" endline="662">mutabor::RouteFactory::LoadRoutes</references>
        <referencedby refid="df/dd1/group__GUI_1gac8c56c621ee1c64b7b506ebe7d8aff76" compoundref="d5/d1c/MutApp_8cpp" startline="87" endline="1537">IMPLEMENT_APP</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga711cccb60856959ada469b72a188047d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void SaveRoutes</definition>
        <argsstring>(wxConfigBase *config)</argsstring>
        <name>SaveRoutes</name>
        <param>
          <type>wxConfigBase *</type>
          <declname>config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="161" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="161" bodyend="165"/>
        <references refid="d5/dee/group__route_1ga7967d16e41377608b99ae06048d60254" compoundref="d1/d65/Route_8h" startline="667" endline="673">mutabor::RouteFactory::SaveRoutes</references>
        <referencedby refid="df/dd1/group__GUI_1gac8c56c621ee1c64b7b506ebe7d8aff76" compoundref="d5/d1c/MutApp_8cpp" startline="87" endline="1537">IMPLEMENT_APP</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>long configtree::Read</definition>
        <argsstring>(const std::string &amp;key, long defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aab2b2939a0c886921cb0e9708bfa156d">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a long integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (long) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="90" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="31" bodyend="34"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <referencedby refid="d1/d44/group__config_1gad96aa9797f889a9d6ecbec1eb4233f4a" compoundref="d4/d26/configtree_8cpp" startline="36" endline="39">configtree::Read</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gad96aa9797f889a9d6ecbec1eb4233f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double configtree::Read</definition>
        <argsstring>(const std::string &amp;key, double defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ad1a8dfe20676083943e78efa945cfc5a">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a double value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (double) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="91" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="36" bodyend="39"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">configtree::Read</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga529e68ab3f636c7d173f6e950c6f3d06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int configtree::Read</definition>
        <argsstring>(const std::string &amp;key, int defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1abba4caa9044e3eb42090bd7f6c6ac2a9">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads an integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (int) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="92" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="41" bodyend="44"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">configtree::Read</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga6354805b32c631e30bcca58bb670d2e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool configtree::Read</definition>
        <argsstring>(const std::string &amp;key, bool defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a9dc6fc8b2c07dcb47b703ef620ac50a8">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a boolean value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (bool) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="93" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="46" bodyend="49"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">configtree::Read</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gae369f7f5f1d2e2289d9e684ebf4c8bb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string configtree::Read</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;defval)</argsstring>
        <name>Read</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ab8f12d8a67c07a1f55e4661d8c865980">Read</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>defval</declname>
        </param>
        <briefdescription>
<para>Reads a string value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  defval (std::string&amp;) default value, if the leaf is not availlable <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>read or defval, if the leaf does not exist. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="94" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="51" bodyend="55"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="d1/d44/group__config_1gade24afb74a0a794fad93306fc154b8a3" compoundref="d4/d26/configtree_8cpp" startline="31" endline="34">configtree::Read</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, long value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a331885e032f43ebe53a492268bab377a">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a long integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (long) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="96" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="57" bodyend="60"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <referencedby refid="d1/d44/group__config_1gab1da141764ae067c213836568dea99c0" compoundref="d4/d26/configtree_8cpp" startline="62" endline="65">configtree::Write</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gab1da141764ae067c213836568dea99c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, double value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ae97b8f43989a47d65f8cafe7d744e615">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a double value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (double) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="97" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="62" bodyend="65"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">configtree::Write</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga1fab03e10498d3cf22d24fecbbe9c499" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, int value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a4911dd7c9b659cf9a08402401fa239d0">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes an integer value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (int) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="98" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="67" bodyend="70"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">configtree::Write</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga2db5cf35978f2f44d6ac827141367334" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, bool value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1abd598e75bd3238b94d2c58e3bd04aafc">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a boolean value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (bool) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="99" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="72" bodyend="75"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">configtree::Write</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga3821940989d496fb3812adf251761539" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::Write</definition>
        <argsstring>(const std::string &amp;key, const std::string &amp;value)</argsstring>
        <name>Write</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a1485fda2de1bad0b29c649c00dae55f7">Write</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Writes a string value. </para>        </briefdescription>
        <detaileddescription>
<para>key (std::string&amp;) Name of the desired leaf in the tree  value (std::string&amp;) value, to be written </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="100" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="77" bodyend="80"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="d1/d44/group__config_1ga9c56d324b26d0ca9ba9a3a31aa1dd2bd" compoundref="d4/d26/configtree_8cpp" startline="57" endline="60">configtree::Write</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gaaf915bc053977a3dfa65de95db183edd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool configtree::HasGroup</definition>
        <argsstring>(const std::string &amp;subdir) const </argsstring>
        <name>HasGroup</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ab94d21edc9dc97e0e1b4b11701314fe2">HasGroup</reimplements>
        <param>
          <type>const std::string &amp;</type>
        </param>
        <briefdescription>
<para>Checks if the tree has a branch with the given name. </para>        </briefdescription>
        <detaileddescription>
<para>subdir (std::string&amp;) subdirectory to check for. <simplesect kind="return"><para>true if the current node has a leaf with the given name which is a node itself. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="102" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="82" bodyend="85"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::toLeaf</definition>
        <argsstring>(const std::string &amp;subdir)</argsstring>
        <name>toLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aff36a4266f985cc8c5c5c4f356a63d75">toLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>subdir</declname>
        </param>
        <briefdescription>
<para>Changes the current node downwards. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered like a subdirectory in a file system.  subdir (std::string&amp;) subdirectory to be written to. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="103" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="87" bodyend="107"/>
        <references refid="d9/de4/structconfigtree_1_1state_1ad4514ef56c2bdbcb6b7c4dabd7f043f8" compoundref="d5/d6b/configtree_8h" startline="62">configtree::state::chdepth</references>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814" compoundref="d4/d26/configtree_8cpp" startline="233" endline="236">configtree::GetPath</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a323934dc786f32ba266a202b746f49ff" compoundref="d5/d6b/configtree_8h" startline="66">configtree::state::group</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a96c937da41adcfcb941a1b782e869a71" compoundref="d5/d6b/configtree_8h" startline="63">configtree::state::leafid</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a777737892758fea84c7ce5a975d175d1" compoundref="d5/d6b/configtree_8h" startline="65">configtree::state::oldpath</references>
        <references refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" compoundref="d4/d26/configtree_8cpp" startline="238" endline="242">configtree::SetPath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">configtree::states</references>
        <references refid="de/db7/group__debug_1ga21a35e4a9e56bbe15aded747eb5a7147" compoundref="db/d16/debug_8h" startline="256">UNREACHABLEC</references>
        <referencedby refid="d1/d44/group__config_1ga9e81e9f5d9925568aa9f092133487e99" compoundref="d4/d26/configtree_8cpp" startline="126" endline="156">configtree::toFirstLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1gaa68386bab67e062b52b999f7a7552784" compoundref="d4/d26/configtree_8cpp" startline="109" endline="124">configtree::toLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gaa68386bab67e062b52b999f7a7552784" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::toLeaf</definition>
        <argsstring>(const std::string &amp;name, int id)</argsstring>
        <name>toLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a3470bb3b8124602d7a2cff0c67a94f2d">toLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downwards. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id. if the id is negative, it will create a new item.  subdir (std::string&amp;) name of the entity to be written to.  id (int) id of the current object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="104" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="109" bodyend="124"/>
        <references refid="d9/de4/structconfigtree_1_1state_1ad4514ef56c2bdbcb6b7c4dabd7f043f8" compoundref="d5/d6b/configtree_8h" startline="62">configtree::state::chdepth</references>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a323934dc786f32ba266a202b746f49ff" compoundref="d5/d6b/configtree_8h" startline="66">configtree::state::group</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a96c937da41adcfcb941a1b782e869a71" compoundref="d5/d6b/configtree_8h" startline="63">configtree::state::leafid</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a777737892758fea84c7ce5a975d175d1" compoundref="d5/d6b/configtree_8h" startline="65">configtree::state::oldpath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">configtree::states</references>
        <references refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">configtree::toLeaf</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga9e81e9f5d9925568aa9f092133487e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int configtree::toFirstLeaf</definition>
        <argsstring>(const std::string &amp;name, std::string &amp;id)</argsstring>
        <name>toFirstLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ac8c3315996067e54399dab28477c43f7">toFirstLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the first leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from.  id (std::string&amp;) reference to a String where the id of the leaf will be stored <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="d8/d7f/classconfigtree_1ac9c99afb8cda8e8cde3d7cf5b85e03bd" kindref="member">toNextLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="117" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="126" bodyend="156"/>
        <references refid="d9/de4/structconfigtree_1_1state_1ad4514ef56c2bdbcb6b7c4dabd7f043f8" compoundref="d5/d6b/configtree_8h" startline="62">configtree::state::chdepth</references>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a323934dc786f32ba266a202b746f49ff" compoundref="d5/d6b/configtree_8h" startline="66">configtree::state::group</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a96c937da41adcfcb941a1b782e869a71" compoundref="d5/d6b/configtree_8h" startline="63">configtree::state::leafid</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a777737892758fea84c7ce5a975d175d1" compoundref="d5/d6b/configtree_8h" startline="65">configtree::state::oldpath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">configtree::states</references>
        <references refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">configtree::toLeaf</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga7ecd104f2b17acda6c1300fc08a44b80" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int configtree::toNextLeaf</definition>
        <argsstring>(const std::string &amp;name, std::string &amp;id)</argsstring>
        <name>toNextLeaf</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1aab94221d2c1f5039dfd3d1da4d5cbd02">toNextLeaf</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Changes the current node downdwards to the next leaf of given type. </para>        </briefdescription>
        <detaileddescription>
<para>this function can be used to navigate towards the leaves in the tree. The argument can be considered as Items with a unique id.  subdir (std::string&amp;) name of the entity to be read from.  id (std::string&amp;) reference to a String where the id of the leaf will be stored <simplesect kind="return"><para>(int) id of the selected item </para></simplesect>
<simplesect kind="see"><para><ref refid="d8/d7f/classconfigtree_1aa57465d8f332a55581b8af26b4de2aef" kindref="member">toFirstLeaf</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="130" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="159" bodyend="197"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" compoundref="d4/d26/configtree_8cpp" startline="238" endline="242">configtree::SetPath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">configtree::states</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1ga3b8d3fac8b8769cc93ead97d80ad0359" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::toParent</definition>
        <argsstring>(unsigned int count=1)</argsstring>
        <name>toParent</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ac745edc6daafaae2b2fee856bfd4ecdb">toParent</reimplements>
        <param>
          <type>unsigned int</type>
          <declname>count</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>This function jumps up in the tree (i.e. towards the root). </para>        </briefdescription>
        <detaileddescription>
<para>count (int) number of nodes to go upward. Default: 1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="131" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="200" bodyend="231"/>
        <references refid="d9/de4/structconfigtree_1_1state_1ad4514ef56c2bdbcb6b7c4dabd7f043f8" compoundref="d5/d6b/configtree_8h" startline="62">configtree::state::chdepth</references>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a323934dc786f32ba266a202b746f49ff" compoundref="d5/d6b/configtree_8h" startline="66">configtree::state::group</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a96c937da41adcfcb941a1b782e869a71" compoundref="d5/d6b/configtree_8h" startline="63">configtree::state::leafid</references>
        <references refid="dc/d3d/group__templates_1ga6a74fe1453277b5ee1d921a28a936a0f" compoundref="de/ddd/interface__deps_8h" startline="51">mutASSERT</references>
        <references refid="d9/de4/structconfigtree_1_1state_1a777737892758fea84c7ce5a975d175d1" compoundref="d5/d6b/configtree_8h" startline="65">configtree::state::oldpath</references>
        <references refid="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" compoundref="d4/d26/configtree_8cpp" startline="238" endline="242">configtree::SetPath</references>
        <references refid="d8/d7f/classconfigtree_1a2997797df3303c0fcadb85c3a29eccc3" compoundref="d5/d6b/configtree_8h" startline="79">configtree::states</references>
        <references refid="de/db7/group__debug_1ga21a35e4a9e56bbe15aded747eb5a7147" compoundref="db/d16/debug_8h" startline="256">UNREACHABLEC</references>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string configtree::GetPath</definition>
        <argsstring>()</argsstring>
        <name>GetPath</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1a66b9a5fff9a5927df560a680d2f60b4c">GetPath</reimplements>
        <briefdescription>
<para>Return a string representation of the position in the current tree. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to store the current position in the tree. <parameterlist kind="retval"><parameteritem>
<parameternamelist>
<parametername>std::string</parametername>
</parameternamelist>
<parameterdescription>
<para>String representation of the current path. The concrete representation is implementation dependent and can vary for different tree types. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="133" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="233" bodyend="236"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <referencedby refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">configtree::toLeaf</referencedby>
      </memberdef>
      <memberdef kind="function" id="d1/d44/group__config_1gaadb289d2c08c2f6be58368430c7405f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void configtree::SetPath</definition>
        <argsstring>(const std::string &amp;path)</argsstring>
        <name>SetPath</name>
        <reimplements refid="da/de5/classmutabor_1_1tree__storage_1ae388ba2d4260632fa89f2ba608ce4bac">SetPath</reimplements>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Set the current pointer in the tree. </para>        </briefdescription>
        <detaileddescription>
<para>This function can be used to store the current position in the tree.  path (std::string) String representation of the new path as returned by <ref refid="d1/d44/group__config_1gaa769c24e9ae0d93a64ea142afd6c0814" kindref="member">GetPath()</ref>. The concrete representation is implementation dependent and can vary for different tree types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="134" column="1" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.cpp" bodystart="238" bodyend="242"/>
        <references refid="d8/d7f/classconfigtree_1a903be0990c9e4ab7e9c1271b540a2169" compoundref="d5/d6b/configtree_8h" startline="53">configtree::config</references>
        <references refid="de/db7/group__debug_1ga86ae1dca49d692e6adabb3ba38154f09" compoundref="db/d16/debug_8h" startline="240">DEBUGLOG</references>
        <referencedby refid="d1/d44/group__config_1ga76418ee6b83d800ae26170b6374f0347" compoundref="d4/d26/configtree_8cpp" startline="87" endline="107">configtree::toLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga7ecd104f2b17acda6c1300fc08a44b80" compoundref="d4/d26/configtree_8cpp" startline="159" endline="197">configtree::toNextLeaf</referencedby>
        <referencedby refid="d1/d44/group__config_1ga3b8d3fac8b8769cc93ead97d80ad0359" compoundref="d4/d26/configtree_8cpp" startline="200" endline="231">configtree::toParent</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="d1/d44/group__config_1gab4603e93febb3682ae70319a7b083014" prot="public" static="no">
        <name>MU32_TREESTORAGE_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="40" column="9" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d44/group__config_1ga2cac3d468778136c69d584b293d511d4" prot="public" static="no">
        <name>MU32_TREESTORAGE_H_PRECOMPILED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" line="50" column="9" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/kernel/treestorage.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d44/group__config_1gaace2ea1c1a7a08ba10e9a84a7389aa61" prot="public" static="no">
        <name>MUWX_CONFIGTREE_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="32" column="9" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d44/group__config_1ga80582c91a4f6db7b866f71baabbd1fd5" prot="public" static="no">
        <name>MUWX_CONFIGTREE_H_PRECOMPILED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" line="45" column="9" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/configtree.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d44/group__config_1ga4a20864b02a4157b2b6a7fd01547e539" prot="public" static="no">
        <name>MUWX_XMLTREE_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="32" column="9" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="d1/d44/group__config_1gadfaf852105ed4262087ee4add0d977ab" prot="public" static="no">
        <name>MUWX_XMLTREE_H_PRECOMPILED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" line="45" column="9" bodyfile="/home/tobias/Entwicklung/mutabor/mutabor-git/src/wxGUI/xmltree.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Save and restore configuration of boxes and routes. </para>    </briefdescription>
    <detaileddescription>
<para>This group combines GUI and non-GUI parts of the configuration system. While loading and saving of the current route configuration must be managed by the route system, the actual storage format should be provided by the UI backend. </para>    </detaileddescription>
  </compounddef>
</doxygen>
