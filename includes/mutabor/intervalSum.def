/** \file
 ********************************************************************
 * Complex intervals.
 *
 * $Id: intervalSum.def,v 1.2 2005/11/10 16:16:59 keinstein Exp $
 * \author Tobias Schlemmer <keinstein@users.berlios.de>
 * \date $Date: 2005/11/10 16:16:59 $
 * \version $Revision: 1.2 $
 * 
 * $Log: intervalSum.def,v $
 * Revision 1.2  2005/11/10 16:16:59  keinstein
 * working distcheck
 *
 * Revision 1.1  2005/11/03 14:29:13  keinstein
 * initial revision
 *
 ********************************************************************/

#if ! defined (__MUTABOR_INTERVALSUM_H_INCLUDED__)
#define __MUTABOR_INTERVASUML_H_INCLUDED__

#ifdef __cplusplus 
namespace mutabor {
  extern "C" {
#endif

#include "mutabor/interval.h"

    /** Interval class. */

%include "interval.def"
%class intervalSum
%parent interval
%field MUT_CLASS(interval)* left
%field MUT_CLASS(interval)* right
%virtual void * constructor (void * _self)
/* %virtual int compare (void * one, void * two) */
%virtual char * tostring(void * _self)
%virtual void precalculate(void * _self)
%function void setleft(void * _self,void * _interval)
%function void setright(void * _self,void * _interval)
%virtual void * check_cycle (register void * _self, register void * _identifier,  register MUT_CLASS(ptrlist) * list) /**< checks, if _self depends somehow on _identifier. */
%endclass


#ifdef __cplusplus
  }
}
#endif

#endif /* __MUTABOR_INTERVALSUM_H_INCLUDED__ */
