/** \file
 ***********************************************************************
 * Identifier class
 *
 * $Id: identifier.def,v 1.1 2005/11/03 13:52:56 keinstein Exp $
 * \author Tobias Schlemmer <keinstein@users.berlios.de>
 * \date $Date: 2005/11/03 13:52:56 $
 * \version $Revision: 1.1 $
 *
 * $Log: identifier.def,v $
 * Revision 1.1  2005/11/03 13:52:56  keinstein
 * Identifier Class file
 *
 */

#ifndef __MUTABOR_IDENTIFIER_H__
#define __MUTABOR_IDENTIFIER_H__

#include "object.h"

#ifdef OLD_MUTABOR_CLASSES
#define MUTABOR_CLASS_DEFINITIONS_identifier(class) \
  PARENT(class,object)\
  FIELD(class,char *,name)\
  OVERRIDE(class, void *, constructor, void * _self) \
  OVERRIDE(class, void *, destructor, void * _self) \
  OVERRIDE(class, int, compare, void * one, void * two) \
  OVERRIDE(class, char *, tostring,void * _self)\
  VIRTUAL(class,void,precalculate,void * _self)\
  VIRTUAL(class,void,link_childs,void * _self)

MUTABOR_DECLARE_CLASS(identifier);
#endif

MUT_CLASS(ptrlist);

%include "object.def"
%class identifier
%parent object
%field char * name /**< Name of the identifier. */
%virtual void * constructor(void * _self) /**< Constructor for initializing the class. */
%virtual void * destructor(void * _self) /**< Destructor for deleting the class. */
%virtual int compare (void * one, void * two) /**< compares two objects. */
%virtual void * check_cycle (register void * _self, register void * _identifier,  register MUT_CLASS(ptrlist) * list) /**< checks, if _self depends somehow on _identifier. */
%virtual char * tostring (void * _self) /**< Printing (mainly for debugging) */
%virtual void precalculate(void * _self) /**< precalculate the dependencies */
%function void copy_name(void * _self,char * name) /**< sets identifier name */
%function void set_name(void * _self,char * name) /**< sets identifier name (does not copy) */
%function char * get_name(void * _self)
%endclass

#endif /* __MUTABOR_IDENTIFIER_H__ */
