mutabor (4.0.0beta2.99-0) unstable; urgency=low

  * update certain autotools related stuff
  * Do not delete the original Mutabor.xrc on distclean.
  * Add script for automatic version generation from git tree.
  * Add tutorial example
  * Initialise icons in OnInit(). This fixes a crash that occured when no
    route window has been opened so far (e.g. opneing files from command
    line).
  * During input device shape replacement: change focus before hiding to
    avoid segfault
  * Call Fit only if window is shown to avoid segmentation fault.
  * Implement common midi input, panic for input devices, send bending
    range, and fix several related bugs
  * Add -fsanitize=address -fno-omit-frame-pointer to debug flags if
    supported by $CC
  * Fix some compiling issues on older systems
  * Remove unused code an fix some indentation
  * Some additional assertions
  * Issue compiler warning for strcpy
  * Fix update of current keys window if logic is changed from GUI.
  * Remove EDevice as it is superseded by GUIDevice
  * silence MudFlap in case of empty files.
  * Upgrade RtMidi to Version 2.01
  * Display all MIDI devices.
  * add some debug output to RtMidi
  * Revert "Display all MIDI devices."
  * Improve error reporting for certain RtMidi errors.
  * Save correct input port after creation.
  * Unify the output of getPortName()
  * Make inputData_.userCallback a funtion pointer.
  * Remove handling of keybord focus of boxes from kernel.
  * change some line endings to native
  * move realtime flag into the common timer
  * Some code cleanup.
  * Comment on some variables.
  * Fix a pointer debug message.
  * provide a class for handling timing information and a timer that
    simulates μs reslolution.
  * Add functions that handle exception errors.
  * provide std:: unconditionally as the C++ standard should have spread,
    now.
  * Define gettext_noop to leave text unchanged for usage where we need
    real UTF8 characters.
  * reorganaize LAUFZEIT_ERROR macros to allow variadic arguments.
  * Provide constants for standard MIDI file meta events.
  * Implement some MIDI helper funtions.
  * Replace timers with new microsecond aware timer, use vectors for
    Tracks, and other improvements.
  * Some additional code cleanup and improvements or fixes to the last
    commit.
  * added a conversion tool between SMF and Text representation
  * Imitate CPPUNIT_ASSERT with mutASSERT in cppunit builds.
  * Reorganize route. Make members private.
  * Implement batch play mode and fix several timing and midi file related
    issues.
  * Simplify route class structure.
  * Remove some outdated logs from source file headers.
  * Base exceptions on std::exception
  * Add and fix tests for midi files, batch conversion mode and timing.
  * Implement basic stuff to add GUIRoute tests.
  * Make file ressource handling suitable for the test suite
  * Fix some compiling related bug that occur in different circumstances.
  * Add a route connect test and fix related issues in new routing code.
  * Improve handling of MIDI controllers and do submit MSB/LSB if not set.
  * Fix complaining about closed MIDI devices in batch mode.
  * build midi2text on demand
  * Fix issues with timing calculations.
  * Updated mutabor.pot. Source files are scanned now as UTF-8 files.
  * Missing Version bump.
  * Add MIDI controllers from RP-021 to definitions
  * Add midi File recording test.
  * Fix WriteDelta that created the wrong time.
  * Handle RPN and NRPN Controller values correctly.
  * Fix shutdown of some tests.
  * Add midi2text to compilation
  * Fix building in non-debug mode
  * fix time update in CurrentTimer.
  * Fix compiling.
  * Remove some logs from file headers.
  * Prevent some controller redundancy from being sent.
  * Add config to aviaillable groups in C++ file template.
  * Declare GUIRouteFactory so that the compiler consideres the right
    class in the right namespace.
  * fix douplicate type in RtMidi.cpp
  * Add quirk for compilers that do not support vector::data().
  * Fix for build error due to missing OnAssertFailure in vtable.
  * Provide a sleep function for Windows in certain tests.
  * Enable building with jack support
  * Add pkg.m4 and vector_data.m4
  * Reenable -Wall in debug mode.
  * Fix compiler warnings.

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Sat, 08 Jun 2013 22:12:34 +0200

mutabor (4.0.0beta2) unstable; urgency=low

  * Fix border on focusing box shapes.
  * Fix Germen Help file
  * Provide abstract file devices. This currently implements timing.
  * Prepare Makefile tree for unit tests.
  * Update template.
  * Move some images from source tree to Images tree.
  * Normalise file endings.
  * move some definitions to common makefile include files
  * Collect compiled sources into certain libraries (eases creation of
    tests; might be broken by following changes)
  * Change the calling of bison and flex.
  * Update POTFILES.in
  * Update CommonFileInputDevice towards a working version using threads.
  * Fix copying of DLLs in windows checks.
  * Add a silent MIDI player.
  * Define 64bit Integers
  * Remove Debugging noise
  * Simplify Debugging macro and make Emacs happy with the output format.
  * Prepare DebugCheckRoutes for non-GUI builds.
  * Move RtMidi binaries into own librariy.
  * Change timer and thread management to be accessible bei InputMidiFile.
    Calculate most timing issues using 64bit (wxLongLong might be 128bit).
  * Fix non-GUI Device factories
  * Update Midi File Class to use the new timers.
  * Disable Non-Realtime Play until the function is updated.
  * Silence some ignored errors during make.
  * Define mutint64 regardless of architecture.
  * Add test for missing midi files.
  * Fix compiling of tests in non-debug-mode
  * Preprare some GIS stuff
  * Add a demo GUIDO file for testing.
  * Add GUIDO tests: play an arbitrary file try to play nonexistent file
  * Add Debugflag gmnfile for GUIDO files.
  * Use 64 bit values in fractions.
  * Quick hack to make compile_error usable without GUI.
  * Use gmnfile debug flag instead of other for some GUIDO related stuff.
  * Hopefully last patch that fixes Bug #18688
  * Fix Compiling on win32.
  * Improve writing of temporary file: • Close file before deletion
    (fixes #18687) • Close and remove file on error if necessary
  * Clear pointer to timer when timer is deleted.
  * Initialize ton_auf_kanal[*].key to avoid invalid access in Close()
  * Start using cppunit
  * Implement RouteClass::GetNextFreeBox
  * Use bit operations in order to separate bytes.
  * Preinitialize ton_auf_kanal[i].key and implement some debug runtime
    checks.
  * preallocate byte sequence for MIDI out.
  * Initialize new box number to be the first free number.
  * Generate Mutabor.nsi only from main Makefile
  * Fix icon installation for Mac
  * Some cleanup for Multithreading: • File Object is held using
    intrusiveptr to prevent its deletion (removes one kind of race
    conditions) • The timer pointer is deleted as early as possible at
    end of Playback to reduce the propability of the other kind of race
    condition. • The file pointer is deleted as soon as it is not needed
    anymore.
  * fix some compiler warnings
  * add routinggui flag for debug output
  * Fix some errors with bad Box display.
  * Prevent Play from beeing entered twice.
  * Add -ggdb on Mac OS X
  * Update layout in certain situations
  * Fix bad access due to bad handling of wxWidgets changes in 2.9 branch
    (see #14612 on http://trac.wxwidgets.org).
  * Fix crash on changing device type for input and output from the GUI.
  * SetFocus initalizes the window. So we must not call it too early.
  * Fix some access to uninitalized attribute.
  * Fix problem on closing pane, where a deleted window is going to be
    closed (bad access).
  * Fix return code in normal playback.
  * make distcheck happy on binfmt/wine and linux
  * Build installer without spaces in file name (confuses Berlios).
  * update ChangeLog
  * de.mo has never been used. Remove it to avoid confusion.
  * fix installing wxWidgets locales on Windows (and propably mac) in case
    wxWidgets is not installed
  * Silence a debug message.
  * Add changelog to Windows distribution.
  * Install examples on Windows
  * provide examples with Mutabor
  * try to associate Mutabor files with Mutabor on Mac OS X
  * fix some memory management bugs
  * add testcase for box.h/box.cpp. First test: Insert 5* planesize keys
    and check for correct operation.
  * prepare for mudflap usage (currently broken). add -fbounds_check in
    debug mode.
  * rename MAX_BREITE -> MUTABOR_KEYRANGE_MAX_WIDTH, extend key range to
    keys 0-128 and tonesystem width to 128, so that we can map at least
    the full MIDI scale.
  * Change midi behavior. Maybe it allows for arbitrary length MIDI
    message. Open problem: Parse and split midi messages while saving in
    MIDI file in order to add correct timestamps.
  * move some arrays into mutabor_box_type in order to get a cleaner
    structure and develop it towards a more object oriented design. These
    changes are part of a bugfix which prevents mutabor from crashing when
    there seem to be more than 64 keys in one box (e.g. after multiple
    play/stop cycles without panic button or logic restart.
  * add compiler flags -pedantic -fdiagnostics-show-option -Wno-long-long
    -Wno-variadic-macros in debug mode
  * fix recursive target potfilescheck by adding common-rules.mk even if
    it is not needed otherwise.
  * Fix comment file header (remove outdated logs, add some minmal
    descriptions).
  * Fix some pedantic warnings.
  * Add debugflag kernel_box
  * mhArray is now a template (not a macro). some formatting.
  * fix continuation signalling in GetMutTag after change to box pointers
    add a compiler message to remind the developer that something has to
    be overthought reagarding the handling of the box that has keyboard
    focus.
  * Throw an exception if device is not set in GetOutputDevice and
    GetInputdevice Proviede NotesCorrect on Route level. Global function
    FindRoute.
  * Update NotesCorrect to use Routes
  * (mainly) change some functions to reference boxes directly instead of
    pointers Some additional changes are related to other patches.
  * Unify ton_auf_kanal for DevMidi and DevMidF. (some other changes are
    not separated).
  * Move some preparation of status data from Kernel to MutTextBox
  * Silence another pedantic warning
  * KeyboardAnalyse is now forwarded by GUIBoxData
  * remove unused xpm data and silence some warning
  * GUIBoxData: Provide GetNonGUIBox(), KeyboardAnalyse() Throw an
    exception if non-existent box is referenced.
  * box.h/box.cpp: silence some warning. mutabor_key_type: null reference
    is denoted by ~0 (MUTABOR_NO_NEXT). to avoid disambiguities with
    referencing 1st key in list. keyplanes are initialized correctly.
  * Changes towards box based api: box parameters are pointers, now. Many
    data has been moved into mutabor_box_type. Several bugs fixed. Many
    remain.
  * Tests for new data structure.
  * some reorganisation of debug output.
  * let the C/C++ compiler calculate the numbers we need for frequency
    calculations
  * Adapt frequency display to match the old behaviour showing 12ET half
    tones to see cent values.
  * Big patch to move common MIDI code into a common class.
  * Fix a crash in key handling, introduced with the redesign of the logic
    code.
  * Remove outdated logs from comments
  * add midicmn to makefile and potfiles
  * Add some assertions
  * Rework midi providers in order to make testing possible and to avoid
    bugs.
  * Create a test for NoteOn/NoteOff
  * Correct Sustain condition
  * Add an assertion
  * Add a function to CommonMidiOutput in order to compile the
    NoteOn/NoteOff test.
  * rework channel finding code
  * Fix condition that lead to wrong incrementation of last_sustained.
  * Fix channel filter condition.
  * move_to_front was called with the wrong order of the arguments causing
    errors.
  * assert proper calling conventions for move_to_front and move_to_end
  * fix wrong assumption abort precedences for binary and logical
    operations
  * fix channel submission for progam change messages
  * remove unused code part
  * Use Midi Channel as Id also for boxes on midi input.
  * Output the tone id.
  * Make controllers (or only sustain?) working in single intstrument
    input situations.
  * Fix pitch bend calculation introduced with one of the last commits.
  * Implement copying of controllers. (unchecked)
  * fix crash on creating route channels (InputDevice and OutputDevice are
    smart pointers, so they always exist).
  * small change in update handling
  * fix crash if more keys are pressed than output channels availlable
  * white space fixes
  * Fix channel data to perform correctly even on system messages.
  * Disable system messages for input for now. They are not properly
    implemented and the current stuff does not work anyway.
  * Updated translation files to match current version. (German
    translation has been updated).
  * .class files have different pre-extension on different systems. So
    delete all of them on distclean.
  * sort out CPPFLAGS and LDFLAGS and similar variables which caused
    cppunit to be linked from the wrong location
  * fix compilation of Frac.cpp in case boost is not detected (logic
    errors remain)
  * fix some small compilation issues and warnings
  * Create first test for OutputMidiFile class.
  * Fix a bug that leads to endless loops in midi file output.
  * Fix writing of MIDI variable length numbers
  * Sleep a little bit in order to separate Notes in Midi File output
    test.
  * Fix debian-doc to match new position of example logics
  * Fix compiling in non-debug-mode.
  * Provide usleep function for windows.
  * update po/mo files to match current source tree

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Wed, 09 Jan 2013 07:25:53 +0100

mutabor (4.0.0beta1) unstable; urgency=low

  * add rudimentary manpage
  * make lintian happy (as far as it is possible now)
  * new file
  * added files for documentation (though they are outdated)
  * install documentation during “make install”
  * add doc-base support to debian package
  * Add support for meaningful filename generation by tex4ht
  * Generate meaningful filenames in HTML output
  * Create meaningful file names for sections
  * Fix last link in .hhc and .hhk which did not contain 
    a proper file name. 
  * Use \IgnorePar in order to prevent unneccesary white space a
    t the beginning   of .hhp,.hhk and .hhc files
  * Regenerated after fixing some issues.
  * allow to add nonexisting devices in the route editor (partly fixes #16908)
  * removed another autotools generated file
  * Remove some unused variables
  * reset change flag of boxes after reading it
  * Remove space from generated HTML file names (fixes some help browser issues)
  * Fix an error that is not active
  * Fix errors in generation of help files
  * Enable Generation of XML files
  * Do not install libraries
  * fix installing of PDF documentation
  * provide .gitignore
  * Fix invalid midi channel setting.
  * Don't access bad memory when removing a box.
  * Move Opening of input devices into the shape as 
    we don't have initialized the device data on creation yet.
  * Fix typo in git based cvs_distcheck
  * Add some documentation
  * Fix assertion producing false positives and false negatives
  * Register Box when opening a new Box shape.
  * ogl has been added to the mutabor tree 
    as it was temporary not availlable in wxWidgets.
    As we don't use it, and it availlable again in wxWidgets, 
    we can safely remove it.
  * File unused for a long time
  * Add a Demo file in UTF-8 encoding
  * Whitespace and documentation fixes as well as Charset 
    transform ISO-8859-1 -> UTF-8
  * reopen device/file when characteristic data (device id/file name) changed
  * When logic is activated box status and control windows 
    are opened/closed on route creation/deletion
  * Exchange base/GUIRoute attatch/detatch to make GUI happy
  * Fix translation of key window title update to current source
  * update to current source
  * Open logic and status windows on box creation even when Mutabor is active.
  * Set current box corresponding to active widget.
  * Pass keystrokes to the corresponding logic window.
  * some formatting in Demo files
  * Bump to next major version: as user experience has changed 
    and nearly everything has been rewritten or reorganized.
  * Fix distcheck
  * Build for release 4.0.0beta1

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Sun, 15 Apr 2012 19:09:37 +0200

mutabor (3.1.0beta1) unstable; urgency=low

  * fixed a problem with generation of help files
  * added dch and debuild targets to makefile

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Sun, 15 Jan 2012 13:41:36 +0100

mutabor (3.1.0beta0) unstable; urgency=low

  * new release. See ChangeLog for further details

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Fri, 06 Jan 2012 11:50:43 +0100

mutabor (3.1.0alpha2) unstable; urgency=low

  * new release. 
  * Add libexpat-dev to build dependencies

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Sat, 14 May 2011 15:15:58 +0200

mutabor (3.1.0alpha0) unstable; urgency=low

  * Initial release

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Mon, 11 Jul 2005 12:01:18 +0200

