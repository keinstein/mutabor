mutabor (4.0.0~rc3-1) unstable; urgency=medium

  * bump version

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Thu, 13 Sep 2018 14:58:31 +0200

mutabor (4.0.0~rc3-0) unstable; urgency=medium

  [ Tobias Schlemmer ]
  * Many build system fixes an modifications
  * Don't fail if jack is not installed in default mode.
  * Use full 200 bytes for MutTags as in class
  * Rework error recovery in case an invalid key range is
    requested by the logic.
  * Fix errors that prevented boxes > 0 from using the right constants.
  * Add an extra element to the retuning list for compound retunings
    that have a name.
  * Enable Emacs tags
  * Provide some parameter information for action reports.
  * Fix AUI pane titles.
  * Fix scrolling of the logic window and use sizers for it.
  * ignore *.mo in po as they are named *.gmo
  * update translations
  * Provide a Menu entry to change Editor encoding back to UTF-8.
  * Enable the tabulator key in the editor
  * Provide a true lexer for the Mutabor language.
  * Some white space fixes in Demo-UTF8.mut
  * Improve Mutabor parser for wxStyledTextCtrl.
  * Introduce a token for -> and fix harmony detection in mutlex.ll.
  * Fix code folding in the editor.
  * Some minor comment fixes for the Demo logic.
  * Allow folding of comments in the editor.
  * Some improvements for syntax highlighting (Colours and Classes).
  * Display Line:Column; Insert, Playback and Logic state in status bar.
  * Make sure that tags does not interfere with normal compilation
  * Implement mutabor_out_of_memory
  * Check consistency of current_keys.
  * Fix Panic implementation.
  * Fix resetting of current keys in Mutabor box.
  * Fix some printf format strings and their arguments.
  * two additions to the statusBar changes.
  * Move toolbar related Icons into a subdir containing the resolution.
  * Fix icon installation for Windows and Mac OS  X
  * Fix a constant that gets defined in VisualC++ 2005 and is very annoying.
  * Distribute up and down arrows.
  * Some steps towards sorting of devices and boxes in the routing window.
  * Disable move up and move down menu items in the source code editor frames as
    they interfere with editing commands.
  * Enable moving of devices in the device list (GUI is still not updated).
  * Fix window deletion code while quitting.
  * Implement new and more robust line drawing algorithm for connections between
    devices and boxes.
  * Finish translation of demo.mut into English.
  * Enable address sanitizer with a separate configuration flag.
  * Fix the example logics.
  * Create a new keyword HARMONY_ANALYSIS for the mutabor language.
  * Implement moving device shapes up and down.
  * Add a logic file that is dedicated for testing the language features.
  * Add missing icon.
  * Test for current_logic before doing the referenced trigger analysis.
  * Some documentation fixes regarding UTF-8 and font shapes.
  * fix tutorial example in order to avoid confusion about the reserved word
    “distance”.
  * Some improvements of the English usability of the demo file.
  * Save boxes in the same config path as the rest of the routing.
  * Implement display of the current play state in the status bar.
  * Destroy Route after its GUI counterpart to avoid dangling box channel
    shapes.
  * Fix emptying the box and double click handling of box shapes and box
    channel shapes.
  * Provide GUI based error messages for kernel Box errors.
  * Copy compiled logic to all available boxes and handle route save checks on
    activation.
  * Implement own system abstraction of timers in order to circumvent some
    system dependent timing issues.
  * Rework GUI Code for logic windows and opening windows.
  * Use generic parameter handling for retunings.
  * Reorganise conversion from internal pitch representation to a human readable
    one.
  * Reactivate the logging windows: current keys, actions, current tone system
  * Fix an error that leads to errors while deleting AUI windows at the end.
  * Implement manual sorting of boxes.
  * Return the file type as well as the name from the file dialog and unify the
    corresponding type with MurFileDataType.
  * Add an XML treestorage backend using wxXMLDocument & Co.
  * Implement saving routes in XML file format.
  * Fix device type name.
  * Silence warning when GIS output device is loaded from a route configuration.
  * Add Play/Pause/Stop Buttons to Midi Input device shapes when the device is
    opened.
  * Activate Play/Pause/Stop button for input MIDI device.
  * Provide playback control functions for Device class so that they can be used
    for per device playback.
  * Ensure that the device play/pause buttons are also updated on display.
  * Fix silencing and resuming notes on Stop/Pause and Panic.
  * Fix call to status bar update to really use events.
  * Separate notes on the same channel from different tracks in MIDI files.
  * Issue an error message after throwing an unhandled exception in File
    playback.
  * Build on Mingw. wxintl: implement textdomain
  * The existence of a valid box was too late while preparing compilation.
  * Fix crashes due to wrong MutDocManager deletion.
  * Move the position of the debug route restore code in logic startup.
  * Avoid passing 0 to std::string constructor in GUI logic list generation.
  * Update box colour and title when the box id changes.
  * Fix updating the menu when a status window of box is closed or activated
    (wx 2.9.4+).
  * Focus the first box with logic window immediately after activation
  * Reactivate update of the Box sub menu.
  * GUI boxes initialise logic and editor from the first box is the box list.
  * Fix indentation and remove commented out example code for
    MutBoxShape::replaceSelfBy(…).
  * Document the inability of combining the traffic light buttons due to
    wxWidgets restrictions.
  * Make TexTBoxTitle[] a wxString array.
  * Remove some unused code.
  * Reimplement UpdateBoxMenu and RaiseLogic.
  * Update the box menu when a box is renamed.
  * Do not create box menu entries for boxes without a logic window.
  * Reuse command ids in the box selection menu.
  * Add a menu item that allows one to raise the current box.
  * remove some unused code
  * Add some debug statements.
  * Pass unused key strokes from a MutTag to the system.
  * Enable tab navigation in the logic windows.
  * Remove unused code and fix indention of some comments.
  * Fix status byte detection.
  * Use own format for backtrace printing.
  * Provide a class to store the stack trace (Linux).
  * Implement a debug version of intrusive_ptr on Linux.
  * Avoid assigning NULL to an intrusive_ptr.
  * Print stack trace only when debugging smart pointers
  * Remove mutabor::NullRoute.
  * enable backtrace printing after normal cleanup.
  * Clear boxCommandIds in MutFrame::Destroy()
  * Helper for printing code lines of construction of debug intrusive_ptr
    objects.
  * Fix deletion of BoxShapeData objects.
  * Make some debug messages conditional.
  * Fix an endless loop in Panic()
  * Overwrite the correct controller value if it has been previously changed.
  * some white space and documentation fixes
  * Add some warnings.
  * Add a test case that tests controller propagation.
  * Fix test cases for the debug smart pointer class.
  * Activate minimal propagation of controllers.
  * Activate resetting of controllers.
  * honour the unique id of tones when controllers must be adjusted
  * Fix some cases where the wrong functions have been used to send and set the
    controller value.
  * Add a resetting pass for Channel data synchronisation.
  * Send only the received value if one of the register selection controllers
    are received.
  * Add a missing constant that is used to signal that no unique id can be
    given for a certain reason.
  * Also resend resetting and increment/decrement controllers. And handle
    updating of reset controllers.
  * Minor fixes: don't load wx/toolbar.h and fix MutFrame Documentation.
  * Add some constants and query functions.
  * Use the std::vector based API for all MIDI messages
  * Fix aka rewrite controller handling for overlapping output channel ranges.
  * Fix operator= to be used as for boost::intrusive_ptr
  * Fix sending NRPs and save RPN/NRPN for future usage.
  * Update test suite to the last changes.
  * Update doxygen documentation.
  * Add a test that checks the correct multiplexing of RPN/NRPN MIDI parameters.
  * Fix initialisation of controller storage when the container must be
    resized.
  * Check for array overflow when searching for changed controllers.
  * Fix updating of controllers
  * Restructure code for copying controllers from Input to output.
  * Fix RPN/NRPN updating and unify controller output.
  * remove unused code
  * Add two missing header files to Makefile.am
  * Remove some unused code.
  * Make some forgotten global variables file local ones.
  * Fix some tests that occasionally crashed.
  * Fix resetting GIS Head after Stopping the file device.
  * fix OnExceptionInMainLoop and white space.
  * Fix installation, uninstallation, distribution and cleaning of files.
  * Update pot files (only automatic translation updates).
  * Reorganise missfunc library, fixing a warning about non-standard symbol
    free compilation units.
  * Revise MidiIn logic trigger code.
  * Use boost macro to really generate diagnostic information when an exception
    is thrown.
  * Fix some minor warnings.
  * Implement basic event handling functions for Mutabor.
  * Implement Key pressure events for MIDI devices.
  * Add constants for providing META events and a channel pressure controller.
  * Prepare devices for handling MIDI playback messages.
  * Use generic panic routine for GUIDO file input.
  * Add event classes for all MIDI events (except common SysEx).
  * Add some missing MIDI output generators.
  * First steps for MIDI system common, MIDI meta, and event based routing.
  * White space fixes and some unused code removed.
  * Fix controller handling allowing channel pressure output.
  * Test case for channel pressure
  * Use __mutabor_attribute_format_arg for marking format arguments and check
    for boost/foreach.hpp
  * Silence some C++ compiler warnings.
  * Fix a compiler error.
  * Use new generic event handling functions for GUI playback control.
  * Fix some white space and remove unused code.
  * Add event.h to POTFILES.in and update .pot files.
  * Add a test case for system exclusive MIDI messages.
  * Fix generic handling of SysEx MIDI messages.
  * Fix crashing when an input midi file is played while logic is active.
  * Implement logic locking.
  * Update documentation to make clear that the else works only with respect to
    chords and harmonic forms in triggers.
  * Implement locking of logics.
  * Silence some compiler warnings.
  * Some code cleanup and white space fixes.
  * Silence most compiler warnings in the midi2text bundle.
  * Implement individual play/pause buttons for GMN devices.
  * Improve visibility of connections in the route window.
  * Fix box label for new box button.
  * Midi2Text: Unify duplicate files and remove unnecessary copies.
  * Use structures for tones and intervals.
  * Fix a printf format error when empty tones occur.
  * Treat boxes interactively even if we are in batch mode.
  * Remove some unused code.
  * Prepare for Oink.
  * Bug fix: Running batch play twice lead to unusable MIDI files.
  * bison does not honour my coding style :-(
  * Use actions as initial tunings.
  * Produce more verbose output from bison.
  * Use the same name space for tunings, retunings and logics.
  * Add a mutabor logic that triggers errors.
  * Fix some minor crashes.
  * Add a rudimentary test that checks the harmonic form parser.
  * Revise code so that the data flow in compare_harmonie is better visible.
  * Use perror to print get the error type from the system.
  * Fix interval and tone calculations in various ways.
  * Added a rudimentary Emacs mode.
  * Check in current version of mutabor-mode.
  * 2nd check in of mutabor-mode.el
  * Fix breaking endless loops in tuning logics.
  * Fix a compilation error for LLVM thanks to Roman Vyjídáček for reporting.
  * Prevent boxes from endless looping.
  * Remove some unused code
  * use default rules for bison.
  * fix some white space
  * Add an example of a circular logic.
  * Add an empty Midi implementation chart example as provided by MMAA.
  * Some improvements for Emacs mode
  * Some improvements to error messages from devices.
  * Refactor kernel for toolkit-independence part 1.
  * Fix format_arg references.
  * Fix display of device and box error messages.
  * Postpone opening of devices if they are created without a device name.
  * move RtMidi out of the way to add a sub-project
  * Call base class DoClose() from GUI Box, so that the watchdog gets
    terminated correctly.
  * Fix backtrace stuff.
  * Fix some missing changes.
  * Change the order when a device is going emergency stopped and print a
    backtrace.
  * Add upstream RtMidi repository as sub-module
  * Upgrade to latest RtMidi release.
  * Fix distcheck errors for stable builds
  * Updated README for the git repository.
  * Update the README to show better source code.
  * Fix missing README file.
  * Differentiate between struct and typedef for mutabor_box_type
  * Fix stable build without libbacktrace on Linux.
  * Fix make distcheck.
  * Fix some problems with initialised values reported by Coverity.
  * Fix some problems with uninitialised values reported by Coverity.
  * Fix for Coverity 48425.
  * Fix for Coverity 48423 and 48414.
  * Fix some negative array indices found by Coverity.
  * Fix freeing constant strings (found by Coverity).

  [ Maximilian Marx ]
  * Avoid a segfault in call_actions()

  [ Tobias Schlemmer ]
  * update doxygen
  * Fix programming language selection in the configure script.
  * Fix some initialisations.
  * Some white space fixes.
  * Add a parameter to allow flushing the file output when a device is closed.
  * Avoid initialising backtrace_state at run time.
  * update ax_boost_base.m4
  * Add some clang specific command options for the C/C++ compiler
  * Upgrade flex.
  * Merge some old translations and some boot improvements.
  * Upgrade translation files to current source code.
  * Add two test cases that generate artificial MIDI files over the complete
    spectrum of MIDI tones.
  * Update RtMidi
  * Fix link order for wxWidgets
  * Disable sanitizer during configuration.
  * update ax_boost_base.m4
  * Use C linkage in C++ mode for the compiler error jump mark.
  * Separate struct and typedef for mutabor_box_type.
  * Add some workaround for clang
  * Fix debug output
  * Rename Refresh() to RefreshDlg()
  * GetType() is const.
  * Fix some race condition when playing files.
  * Fix some format error.
  * Don't inline CommonFileOutputDevice::operator std::string()
  * Some further race condition fixes for file device classes
  * Make DeviceClass::Load and DeviceClass::Save visible for file devices
  * Pass sync parameter of do_Close() to file devices.
  * Fix some warnings.
  * use std::abs from cmath
  * Make negation clear to read.
  * make CurrentTimerBase::Sleep() a static function
  * rename Refresh() to RefreshDlg()
  * Make non-GUI Add and Remove functions available.
  * Fix some compiler warnings and bugs that have been found with clang.
  * Correctly compute current path in GetPath()
  * update some m4 files to current state
  * Change Graphics Context handling
  * Update po files
  * disable backtrace on clang
  * add interface_deps_wxWidgets.cpp
  * Use Keinstein's repository for RtMidi
  * Several minor build fixes.
  * build with internationalised RtMidi.
  * Remove some unnecessary files from the Debian subtree
  * Intermediate data in order to debug at another computer.
  * Fix some typo in the documentation
  * Change OutputMidiDevice to use the port descriptor API for RtMidi.
  * Fix crashing after device choice dialog.
  * add missing libtool files.
  * Make testsuite work with enabled LeakSanitizer
  * Rename default tone system to give the interval and the tone a descriptive
    name.
  * Update RtMidi.
  * Refactor to use the new APIs from our own RtMidi fork.
  * Update generated images
  * Perform potfilechk even if it fails.
  * Remove some generated object files
  * Merging changes in RtMidi
  * Use copy-on-write container to connect devices and boxes. This avoids
    possible crashes with invalid pointers when the logic is active and the
    connections are changed.
  * remove generated Debian files
  * Make the test-suite compatible to ThreadSanitizer
  * Rework the smart pointers to use atomic counters.
  * Implement debug output for locking and unlocking of mutexes.
  * Rework thread timing.
  * fix some warning in the parser file.
  * Fix some tests.
  * RtMidi: Fix the error detection in sendMessage.
  * Fix several race conditions and possible deadlocks found by ThreadSanitizer
    in the testcppunit tests.
  * Implement a Scala .scl file parser.
  * Update merge with upstream.
  * Make Scala .scl parser test running for the most important cases.
  * Make  a simple version of scl2mut.
  * Update translations and fix some typos in the English language.
  * The Scala parser correctly rejects the cases that must not be accepted by a
    Scala parser.
  * Fix some email addresses.
  * Ignore log files and bison debug output.
  * Update build system.
  * Fix inclusion guards.
  * Move some functions properly to scala-inlines.h
  * Demangle class names for GCC compiler.
  * Converge converted Scala logics and mutabor language.
  * Implement a Scala key map (.kbm) parser.
  * Consistently use $(AM_MAKEFLAGS)
  * Fix crashes in the test suite, when names cannot be demangled.
  * Finish scl2mut.
  * Fix loading of .kbm files in which the last empty tones are omitted.
  * Fix build dependencies for the .kbm test suite
  * Allow different names for intervals, tones, tone systems and logics during
    Scala import
  * Add a Scala file import dialog
  * RtMidi latest state
  * Remove backup tree of RtMidi
  * Add config file for wxformbuilder.
  * Fix lost platform dependent features in XRC.
  * Update C++ part of the XRC classes
  * Activate syntax highlighting for newly created files
  * Allow Scala import from the GUI.
  * Fix Makevars.
  * Update C++ file template.
  * Update my email address in the source file headers.
  * Update translation files.
  * Avoid warnings about signed/unsigned comparisons in internal channel fields.
  * Some steps towards Scala file export from the GUI.
  * Improve test suite execution speed.
  * Correct some coordinates.
  * When we compile a file we should ask for a file name rather than fail.
  * Regenerate flex and bison parsers.
  * Fix testing with leak sanitizer.
  * Remove unused converter variable.
  * Make letter events case sensitive.
  * Save the generated PNG Images for the last changes.
  * Finish integration of Scala writer into GUI and separate common classes from
    Box
  * remove aux files from the repository. They can cause problems during the
    build process.
  * Simplify NSIS file generation
  * Silence some warnings which come from incompatibilities between C and C++.
  * Correct estimation of necessary intervals for Scala export
  * Fix some drawing issues (at least) on wxGTK.
  * Properly select the file mask for Scala save dialog elements.
  * fix dependencies for LaTeX calls
  * Fix building of the documentation with current KOMA script.
  * Fix building of the help file in off-tree environments
  * update wxresource.cpp
  * Minor documentation changes
  * Make distcheck happy. Part 1: add/remove files to/from several dependencies
  * Make distcheck happy. Part 2: fix dependencies for generating images.
  * Make distcheck happy. Part 3: fix scale_parser and lexer stuff.
  * Make distcheck happy. Part 3: Minor source code fixes.
  * Make distcheck happy. Part 4: Make some Midi check order independent
  * Add ASAN suppressions to MIDI tests.
  * Update Help and translations.
  * Fix cleaning of temporary Makefile for images.
  * Bump version number and check in generated documentation and locales.

  [ R. Mattes ]
  * Fixed typo in git submodule config

  [ Tobias Schlemmer ]
  * Fix some Makefile in order to execute tests.
  * fix build dependencies.
  * removed generated files by flex and bison
  * Remove some generated files
  * remove some further auto-generated files
  * Sort .gitignere and add some further files
  * Update FlexLexer.h
  * remove stack.hh
  * Upgrade Gettext
  * Include rtmidi build system into mutabor
  * Fix compiling of flex and bison sources
  * Fix usage of wxIntl
  * Fix copying DLLs
  * Fix some issues with debug compilation. libstdc++ debugging has been
    disabled as it needs specially compiled libraries
  * Mark source as non-GNU
  * do not override tags:
  * install Emacs mutabor mode in the Debian package
  * Fix const and exceptions in debug intrusive_ptr::bool()
  * fix Scala parser test scripts
  * Adopt new RtMidi constants
  * Print RtMidi errors to the user when something is wrong.
  * Upgrade boost detection to AX.
  * Use rtmidi suffix support
  * Fix wxWidgets gettext simulation as well as the boost gettext simulation
  * Enable maintainer mode by default
  * Link against libasan
  * Use STABS debug information on Windows platforms
  * Allow parallel bison runs.
  * Fix warnings and bugs related to the new fall through warnings of GCC
  * use macros for extern "C" scopes
  * Fix lots of unused parameter warnings
  * Properly define GNU_SOURCE
  * properly or the changed mask
  * Make some functions static
  * define BOOST_SP_NOEXCEPT if it is not provided
  * replace __FUNCTION__ by __func__
  * Don't include icon in wxMSW to avoid warning
  * Fix GetClientSize for box status windows.
  * Remove AsTS from current keys window.
  * Fix an else path
  * Fix a crash on windows where it was not possible to create a route.
  * Fix warnings about incomplete initialisation of debug command line
    parameters
  * White space fixes
  * Try to avoid a warning about always false path
  * Fix object management problems.
  * Delete dialog even when we get into an undefined state.
  * Fix crash on Windows due to doubly deleted AUI panes.
  * Unify scaling modes for different SetSize/GetSize functions.
  * Configure the address sanitizer for mutabor.
  * Reorganise some code in order to minimise stack allocations.
  * Update help
  * Merge old stashed translation changes
  * update locale files and introduce OFF_TREE conditional for detecting off
    tree builds
  * upgrade m4 files
  * Fix some make files in order to execute tests.
  * fix build dependencies.
  * removed generated files by flex and bison
  * Remove some generated files
  * remove some further auto-generated files
  * Sort .gitignere and add some further files
  * Update FlexLexer.h
  * remove stack.hh
  * Upgrade Gettext
  * Include rtmidi build system into mutabor
  * Fix compiling of flex and bison sources
  * Fix usage of wxIntl
  * Fix copying DLLs
  * Fix some issues with debug compilation. libstdc++ debugging has been
    disabled as it needs specially compiled libraries
  * Mark source as non-GNU
  * do not override tags:
  * install Emacs mutabor mode in the Debian package
  * Fix const and exceptions in debug intrusive_ptr::bool()
  * fix Scala parser test scripts
  * Adopt new RtMidi constants
  * Print RtMidi errors to the user when something is wrong.
  * Upgrade boost detection to AX.
  * Use rtmidi suffix support
  * Fix wxWidgets gettext simulation as well as the boost gettext simulation
  * Enable maintainer mode by default
  * Link against libasan
  * Use STABS debug information on Windows platforms
  * Allow parallel bison runs.
  * Fix warnings and bugs related to the new fall through warnings of GCC
  * use macros for extern "C" scopes
  * Fix lots of unused parameter warnings
  * Properly define GNU_SOURCE
  * properly or the changed mask
  * Make some functions static
  * define BOOST_SP_NOEXCEPT if it is not provided
  * replace __FUNCTION__ by __func__
  * Don't include icon in wxMSW to avoid warning
  * Fix GetClientSize for box status windows.
  * Remove AsTS from current keys window.
  * Fix an else path
  * Fix a crash on windows where it was not possible to create a route.
  * Fix warnings about incomplete initialisation of debug command line
    parameters
  * White space fixes
  * Try to avoid a warning about always false path
  * Fix object management problems.
  * Delete dialog even when we get into an undefined state.
  * Fix crash on Windows due to doubly deleted AUI panes.
  * Unify scaling modes for different SetSize/GetSize functions.
  * Configure the address sanitizer for mutabor.
  * Reorganise some code in order to minimise stack allocations.
  * Update help
  * Merge old stashed translation changes
  * update locale files and introduce OFF_TREE conditional for detecting off
    tree builds
  * upgrade m4 files
  * fix recreation of mutlex.cc
  * Disable unused functions that generate a 1 pixel gap around the TextBox.
  * Use wxTextCtrl instead of wxListBox for status windows.
  * update README.md to match the included RtMidi fork
  * Compile flex files in build tree.
  * remove depcomp
  * fix RtMidi related issues.
  * Update translations
  * ignore depcomp
  * compile on Debian

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Mon, 10 Sep 2018 20:26:59 +0200

mutabor (4.0.0~beta3) testing; urgency=low

  * Disable test suite as it needs a usable Display.

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Fri, 21 Jun 2013 23:32:36 +0200

mutabor (4.0.0~beta2.99-1) experimental; urgency=low

  * Fix Jack detection on Mac OS X
  * Updated Debian changelog
  * add cppunit to Debian build depends
  * add fig tool
  * Check for Jack only if pkg-config is installed on Linux.
  * Translation files and German translation.
  * Use libcppunit-dev for compiling on Debian.
  * Update Debian changelog and bump version.
  * fix some of the lintian complaints
  * Disable test suite as it needs a usable Display.

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Fri, 21 Jun 2013 23:21:34 +0200

mutabor (4.0.0beta2.99-0) experimental; urgency=low

  * update certain autotools related stuff
  * Do not delete the original Mutabor.xrc on distclean.
  * Add script for automatic version generation from git tree.
  * Add tutorial example
  * Initialise icons in OnInit(). This fixes a crash that occured when no
    route window has been opened so far (e.g. opneing files from command
    line).
  * During input device shape replacement: change focus before hiding to
    avoid segfault
  * Call Fit only if window is shown to avoid segmentation fault.
  * Implement common midi input, panic for input devices, send bending
    range, and fix several related bugs
  * Add -fsanitize=address -fno-omit-frame-pointer to debug flags if
    supported by $CC
  * Fix some compiling issues on older systems
  * Remove unused code an fix some indentation
  * Some additional assertions
  * Issue compiler warning for strcpy
  * Fix update of current keys window if logic is changed from GUI.
  * Remove EDevice as it is superseded by GUIDevice
  * silence MudFlap in case of empty files.
  * Upgrade RtMidi to Version 2.01
  * Display all MIDI devices.
  * add some debug output to RtMidi
  * Revert "Display all MIDI devices."
  * Improve error reporting for certain RtMidi errors.
  * Save correct input port after creation.
  * Unify the output of getPortName()
  * Make inputData_.userCallback a funtion pointer.
  * Remove handling of keybord focus of boxes from kernel.
  * change some line endings to native
  * move realtime flag into the common timer
  * Some code cleanup.
  * Comment on some variables.
  * Fix a pointer debug message.
  * provide a class for handling timing information and a timer that
    simulates μs reslolution.
  * Add functions that handle exception errors.
  * provide std:: unconditionally as the C++ standard should have spread,
    now.
  * Define gettext_noop to leave text unchanged for usage where we need
    real UTF8 characters.
  * reorganaize LAUFZEIT_ERROR macros to allow variadic arguments.
  * Provide constants for standard MIDI file meta events.
  * Implement some MIDI helper funtions.
  * Replace timers with new microsecond aware timer, use vectors for
    Tracks, and other improvements.
  * Some additional code cleanup and improvements or fixes to the last
    commit.
  * added a conversion tool between SMF and Text representation
  * Imitate CPPUNIT_ASSERT with mutASSERT in cppunit builds.
  * Reorganize route. Make members private.
  * Implement batch play mode and fix several timing and midi file related
    issues.
  * Simplify route class structure.
  * Remove some outdated logs from source file headers.
  * Base exceptions on std::exception
  * Add and fix tests for midi files, batch conversion mode and timing.
  * Implement basic stuff to add GUIRoute tests.
  * Make file ressource handling suitable for the test suite
  * Fix some compiling related bug that occur in different circumstances.
  * Add a route connect test and fix related issues in new routing code.
  * Improve handling of MIDI controllers and do submit MSB/LSB if not set.
  * Fix complaining about closed MIDI devices in batch mode.
  * build midi2text on demand
  * Fix issues with timing calculations.
  * Updated mutabor.pot. Source files are scanned now as UTF-8 files.
  * Missing Version bump.
  * Add MIDI controllers from RP-021 to definitions
  * Add midi File recording test.
  * Fix WriteDelta that created the wrong time.
  * Handle RPN and NRPN Controller values correctly.
  * Fix shutdown of some tests.
  * Add midi2text to compilation
  * Fix building in non-debug mode
  * fix time update in CurrentTimer.
  * Fix compiling.
  * Remove some logs from file headers.
  * Prevent some controller redundancy from being sent.
  * Add config to aviaillable groups in C++ file template.
  * Declare GUIRouteFactory so that the compiler consideres the right
    class in the right namespace.
  * fix douplicate type in RtMidi.cpp
  * Add quirk for compilers that do not support vector::data().
  * Fix for build error due to missing OnAssertFailure in vtable.
  * Provide a sleep function for Windows in certain tests.
  * Enable building with jack support
  * Add pkg.m4 and vector_data.m4
  * Reenable -Wall in debug mode.
  * Fix compiler warnings.

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Sat, 08 Jun 2013 22:12:34 +0200

mutabor (4.0.0beta2) unstable; urgency=low

  * Fix border on focusing box shapes.
  * Fix Germen Help file
  * Provide abstract file devices. This currently implements timing.
  * Prepare Makefile tree for unit tests.
  * Update template.
  * Move some images from source tree to Images tree.
  * Normalise file endings.
  * move some definitions to common makefile include files
  * Collect compiled sources into certain libraries (eases creation of
    tests; might be broken by following changes)
  * Change the calling of bison and flex.
  * Update POTFILES.in
  * Update CommonFileInputDevice towards a working version using threads.
  * Fix copying of DLLs in windows checks.
  * Add a silent MIDI player.
  * Define 64bit Integers
  * Remove Debugging noise
  * Simplify Debugging macro and make Emacs happy with the output format.
  * Prepare DebugCheckRoutes for non-GUI builds.
  * Move RtMidi binaries into own librariy.
  * Change timer and thread management to be accessible bei InputMidiFile.
    Calculate most timing issues using 64bit (wxLongLong might be 128bit).
  * Fix non-GUI Device factories
  * Update Midi File Class to use the new timers.
  * Disable Non-Realtime Play until the function is updated.
  * Silence some ignored errors during make.
  * Define mutint64 regardless of architecture.
  * Add test for missing midi files.
  * Fix compiling of tests in non-debug-mode
  * Preprare some GIS stuff
  * Add a demo GUIDO file for testing.
  * Add GUIDO tests: play an arbitrary file try to play nonexistent file
  * Add Debugflag gmnfile for GUIDO files.
  * Use 64 bit values in fractions.
  * Quick hack to make compile_error usable without GUI.
  * Use gmnfile debug flag instead of other for some GUIDO related stuff.
  * Hopefully last patch that fixes Bug #18688
  * Fix Compiling on win32.
  * Improve writing of temporary file: • Close file before deletion
    (fixes #18687) • Close and remove file on error if necessary
  * Clear pointer to timer when timer is deleted.
  * Initialize ton_auf_kanal[*].key to avoid invalid access in Close()
  * Start using cppunit
  * Implement RouteClass::GetNextFreeBox
  * Use bit operations in order to separate bytes.
  * Preinitialize ton_auf_kanal[i].key and implement some debug runtime
    checks.
  * preallocate byte sequence for MIDI out.
  * Initialize new box number to be the first free number.
  * Generate Mutabor.nsi only from main Makefile
  * Fix icon installation for Mac
  * Some cleanup for Multithreading: • File Object is held using
    intrusiveptr to prevent its deletion (removes one kind of race
    conditions) • The timer pointer is deleted as early as possible at
    end of Playback to reduce the propability of the other kind of race
    condition. • The file pointer is deleted as soon as it is not needed
    anymore.
  * fix some compiler warnings
  * add routinggui flag for debug output
  * Fix some errors with bad Box display.
  * Prevent Play from beeing entered twice.
  * Add -ggdb on Mac OS X
  * Update layout in certain situations
  * Fix bad access due to bad handling of wxWidgets changes in 2.9 branch
    (see #14612 on http://trac.wxwidgets.org).
  * Fix crash on changing device type for input and output from the GUI.
  * SetFocus initalizes the window. So we must not call it too early.
  * Fix some access to uninitalized attribute.
  * Fix problem on closing pane, where a deleted window is going to be
    closed (bad access).
  * Fix return code in normal playback.
  * make distcheck happy on binfmt/wine and linux
  * Build installer without spaces in file name (confuses Berlios).
  * update ChangeLog
  * de.mo has never been used. Remove it to avoid confusion.
  * fix installing wxWidgets locales on Windows (and propably mac) in case
    wxWidgets is not installed
  * Silence a debug message.
  * Add changelog to Windows distribution.
  * Install examples on Windows
  * provide examples with Mutabor
  * try to associate Mutabor files with Mutabor on Mac OS X
  * fix some memory management bugs
  * add testcase for box.h/box.cpp. First test: Insert 5* planesize keys
    and check for correct operation.
  * prepare for mudflap usage (currently broken). add -fbounds_check in
    debug mode.
  * rename MAX_BREITE -> MUTABOR_KEYRANGE_MAX_WIDTH, extend key range to
    keys 0-128 and tonesystem width to 128, so that we can map at least
    the full MIDI scale.
  * Change midi behavior. Maybe it allows for arbitrary length MIDI
    message. Open problem: Parse and split midi messages while saving in
    MIDI file in order to add correct timestamps.
  * move some arrays into mutabor_box_type in order to get a cleaner
    structure and develop it towards a more object oriented design. These
    changes are part of a bugfix which prevents mutabor from crashing when
    there seem to be more than 64 keys in one box (e.g. after multiple
    play/stop cycles without panic button or logic restart.
  * add compiler flags -pedantic -fdiagnostics-show-option -Wno-long-long
    -Wno-variadic-macros in debug mode
  * fix recursive target potfilescheck by adding common-rules.mk even if
    it is not needed otherwise.
  * Fix comment file header (remove outdated logs, add some minmal
    descriptions).
  * Fix some pedantic warnings.
  * Add debugflag kernel_box
  * mhArray is now a template (not a macro). some formatting.
  * fix continuation signalling in GetMutTag after change to box pointers
    add a compiler message to remind the developer that something has to
    be overthought reagarding the handling of the box that has keyboard
    focus.
  * Throw an exception if device is not set in GetOutputDevice and
    GetInputdevice Proviede NotesCorrect on Route level. Global function
    FindRoute.
  * Update NotesCorrect to use Routes
  * (mainly) change some functions to reference boxes directly instead of
    pointers Some additional changes are related to other patches.
  * Unify ton_auf_kanal for DevMidi and DevMidF. (some other changes are
    not separated).
  * Move some preparation of status data from Kernel to MutTextBox
  * Silence another pedantic warning
  * KeyboardAnalyse is now forwarded by GUIBoxData
  * remove unused xpm data and silence some warning
  * GUIBoxData: Provide GetNonGUIBox(), KeyboardAnalyse() Throw an
    exception if non-existent box is referenced.
  * box.h/box.cpp: silence some warning. mutabor_key_type: null reference
    is denoted by ~0 (MUTABOR_NO_NEXT). to avoid disambiguities with
    referencing 1st key in list. keyplanes are initialized correctly.
  * Changes towards box based api: box parameters are pointers, now. Many
    data has been moved into mutabor_box_type. Several bugs fixed. Many
    remain.
  * Tests for new data structure.
  * some reorganisation of debug output.
  * let the C/C++ compiler calculate the numbers we need for frequency
    calculations
  * Adapt frequency display to match the old behaviour showing 12ET half
    tones to see cent values.
  * Big patch to move common MIDI code into a common class.
  * Fix a crash in key handling, introduced with the redesign of the logic
    code.
  * Remove outdated logs from comments
  * add midicmn to makefile and potfiles
  * Add some assertions
  * Rework midi providers in order to make testing possible and to avoid
    bugs.
  * Create a test for NoteOn/NoteOff
  * Correct Sustain condition
  * Add an assertion
  * Add a function to CommonMidiOutput in order to compile the
    NoteOn/NoteOff test.
  * rework channel finding code
  * Fix condition that lead to wrong incrementation of last_sustained.
  * Fix channel filter condition.
  * move_to_front was called with the wrong order of the arguments causing
    errors.
  * assert proper calling conventions for move_to_front and move_to_end
  * fix wrong assumption abort precedences for binary and logical
    operations
  * fix channel submission for progam change messages
  * remove unused code part
  * Use Midi Channel as Id also for boxes on midi input.
  * Output the tone id.
  * Make controllers (or only sustain?) working in single intstrument
    input situations.
  * Fix pitch bend calculation introduced with one of the last commits.
  * Implement copying of controllers. (unchecked)
  * fix crash on creating route channels (InputDevice and OutputDevice are
    smart pointers, so they always exist).
  * small change in update handling
  * fix crash if more keys are pressed than output channels availlable
  * white space fixes
  * Fix channel data to perform correctly even on system messages.
  * Disable system messages for input for now. They are not properly
    implemented and the current stuff does not work anyway.
  * Updated translation files to match current version. (German
    translation has been updated).
  * .class files have different pre-extension on different systems. So
    delete all of them on distclean.
  * sort out CPPFLAGS and LDFLAGS and similar variables which caused
    cppunit to be linked from the wrong location
  * fix compilation of Frac.cpp in case boost is not detected (logic
    errors remain)
  * fix some small compilation issues and warnings
  * Create first test for OutputMidiFile class.
  * Fix a bug that leads to endless loops in midi file output.
  * Fix writing of MIDI variable length numbers
  * Sleep a little bit in order to separate Notes in Midi File output
    test.
  * Fix debian-doc to match new position of example logics
  * Fix compiling in non-debug-mode.
  * Provide usleep function for windows.
  * update po/mo files to match current source tree

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Wed, 09 Jan 2013 07:25:53 +0100

mutabor (4.0.0beta1) unstable; urgency=low

  * add rudimentary manpage
  * make lintian happy (as far as it is possible now)
  * new file
  * added files for documentation (though they are outdated)
  * install documentation during “make install”
  * add doc-base support to debian package
  * Add support for meaningful filename generation by tex4ht
  * Generate meaningful filenames in HTML output
  * Create meaningful file names for sections
  * Fix last link in .hhc and .hhk which did not contain 
    a proper file name. 
  * Use \IgnorePar in order to prevent unneccesary white space a
    t the beginning   of .hhp,.hhk and .hhc files
  * Regenerated after fixing some issues.
  * allow to add nonexisting devices in the route editor (partly fixes #16908)
  * removed another autotools generated file
  * Remove some unused variables
  * reset change flag of boxes after reading it
  * Remove space from generated HTML file names (fixes some help browser issues)
  * Fix an error that is not active
  * Fix errors in generation of help files
  * Enable Generation of XML files
  * Do not install libraries
  * fix installing of PDF documentation
  * provide .gitignore
  * Fix invalid midi channel setting.
  * Don't access bad memory when removing a box.
  * Move Opening of input devices into the shape as 
    we don't have initialized the device data on creation yet.
  * Fix typo in git based cvs_distcheck
  * Add some documentation
  * Fix assertion producing false positives and false negatives
  * Register Box when opening a new Box shape.
  * ogl has been added to the mutabor tree 
    as it was temporary not availlable in wxWidgets.
    As we don't use it, and it availlable again in wxWidgets, 
    we can safely remove it.
  * File unused for a long time
  * Add a Demo file in UTF-8 encoding
  * Whitespace and documentation fixes as well as Charset 
    transform ISO-8859-1 -> UTF-8
  * reopen device/file when characteristic data (device id/file name) changed
  * When logic is activated box status and control windows 
    are opened/closed on route creation/deletion
  * Exchange base/GUIRoute attatch/detatch to make GUI happy
  * Fix translation of key window title update to current source
  * update to current source
  * Open logic and status windows on box creation even when Mutabor is active.
  * Set current box corresponding to active widget.
  * Pass keystrokes to the corresponding logic window.
  * some formatting in Demo files
  * Bump to next major version: as user experience has changed 
    and nearly everything has been rewritten or reorganized.
  * Fix distcheck
  * Build for release 4.0.0beta1

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Sun, 15 Apr 2012 19:09:37 +0200

mutabor (3.1.0beta1) unstable; urgency=low

  * fixed a problem with generation of help files
  * added dch and debuild targets to makefile

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Sun, 15 Jan 2012 13:41:36 +0100

mutabor (3.1.0beta0) unstable; urgency=low

  * new release. See ChangeLog for further details

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Fri, 06 Jan 2012 11:50:43 +0100

mutabor (3.1.0alpha2) unstable; urgency=low

  * new release. 
  * Add libexpat-dev to build dependencies

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Sat, 14 May 2011 15:15:58 +0200

mutabor (3.1.0alpha0) unstable; urgency=low

  * Initial release

 -- Tobias Schlemmer <keinstein@users.berlios.de>  Mon, 11 Jul 2005 12:01:18 +0200

